 *
    B[] *
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
    C[] *
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
    C[][] *
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
    C[][][][] *
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
    I[] *
        <-- org.apache.commons.io.FilenameUtils
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
    I[][] *
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        <-- spoon.test.arrays.ArrayClass
    J[] *
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
    J[][] *
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
com.google.common.base *
    Function *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
    Joiner *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
    Preconditions *
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- xxl.java.junit.JUnitRunner
    Predicate *
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
com.google.common.collect *
    FluentIterable *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
    ImmutableList *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
com.gzoltar.core *
    GZoltar *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
com.gzoltar.core.agent *
    AgentCreator *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    RegistrySingleton *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
com.gzoltar.core.components *
    Clazz *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
    Component *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    Statement *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
com.gzoltar.core.diag *
    SFL *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
com.gzoltar.core.exec.parameters *
    ClassParameters *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    TestParameters *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
com.gzoltar.core.instr.message *
    IMessage *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    Message *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    Response *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
com.gzoltar.core.spectra *
    Spectra *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
com.martiansoftware.jsap
    CommandLineTokenizer
        <-- com.martiansoftware.jsap.JSAP
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.util.ArrayList *
        --> java.util.List *
    DefaultSource
        --> com.martiansoftware.jsap.Defaults
        --> com.martiansoftware.jsap.ExceptionMap
        --> com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        --> java.lang.Object *
    Defaults
        <-- com.martiansoftware.jsap.DefaultSource
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Set *
    ExceptionMap
        <-- com.martiansoftware.jsap.DefaultSource
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
    Flagged
        <-- com.martiansoftware.jsap.FlaggedOption
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.Switch
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
    FlaggedOption
        --> com.martiansoftware.jsap.Flagged
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.QualifiedSwitch
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        <-- com.martiansoftware.jsap.xml.QualifiedSwitchConfig
        --> java.lang.Character *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- spoon.Launcher
    IDMap
        <-- com.martiansoftware.jsap.DefaultSource
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
    IllegalMultipleDeclarationException
        --> com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Parser
        --> java.lang.String *
        --> java.lang.StringBuffer *
    JSAP
        --> com.martiansoftware.jsap.CommandLineTokenizer
        --> com.martiansoftware.jsap.DefaultSource
        --> com.martiansoftware.jsap.Defaults
        --> com.martiansoftware.jsap.ExceptionMap
        --> com.martiansoftware.jsap.Flagged
        <-- com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.IDMap
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.JSAPResult
        <-> com.martiansoftware.jsap.Option
        <-> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.Parameter[] *
        <-> com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.QualifiedSwitch
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-> com.martiansoftware.jsap.Switch
        <-> com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        --> com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        --> com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        --> com.martiansoftware.jsap.stringparsers.BooleanStringParser
        --> com.martiansoftware.jsap.stringparsers.ByteStringParser
        --> com.martiansoftware.jsap.stringparsers.CharacterStringParser
        --> com.martiansoftware.jsap.stringparsers.ClassStringParser
        --> com.martiansoftware.jsap.stringparsers.ColorStringParser
        --> com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        --> com.martiansoftware.jsap.stringparsers.FloatStringParser
        --> com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        --> com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        --> com.martiansoftware.jsap.stringparsers.IntegerStringParser
        --> com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        --> com.martiansoftware.jsap.stringparsers.LongStringParser
        --> com.martiansoftware.jsap.stringparsers.PackageStringParser
        --> com.martiansoftware.jsap.stringparsers.ShortStringParser
        --> com.martiansoftware.jsap.stringparsers.StringStringParser
        --> com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        <-> com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> com.martiansoftware.util.StringUtils
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        <-- spoon.Launcher
    JSAPException
        <-- com.martiansoftware.jsap.IllegalMultipleDeclarationException
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.RequiredParameterMissingException
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.SyntaxException
        <-- com.martiansoftware.jsap.UnknownFlagException
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- spoon.Launcher
        <-- spoon.test.TestUtils$1
        <-- spoon.test.api.APITest$1
    JSAPResult
        --> com.martiansoftware.jsap.ExceptionMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.SimpleJSAP
        --> com.martiansoftware.jsap.UnspecifiedParameterException
        --> java.awt.Color *
        --> java.awt.Color[] *
        --> java.io.File *
        --> java.io.File[] *
        --> java.lang.Boolean *
        --> java.lang.Boolean[] *
        --> java.lang.Byte *
        --> java.lang.Byte[] *
        --> java.lang.Character *
        --> java.lang.Character[] *
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.Double *
        --> java.lang.Double[] *
        --> java.lang.Exception *
        --> java.lang.Exception[] *
        --> java.lang.Float *
        --> java.lang.Float[] *
        --> java.lang.Integer *
        --> java.lang.Integer[] *
        --> java.lang.Long *
        --> java.lang.Long[] *
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.Package[] *
        --> java.lang.Short *
        --> java.lang.Short[] *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.math.BigDecimal *
        --> java.math.BigDecimal[] *
        --> java.math.BigInteger *
        --> java.math.BigInteger[] *
        --> java.net.InetAddress *
        --> java.net.InetAddress[] *
        --> java.net.URL *
        --> java.net.URL[] *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Date *
        --> java.util.Date[] *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        <-- spoon.Launcher
    Option
        <-- com.martiansoftware.jsap.FlaggedOption
        <-> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.Parser
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        --> com.martiansoftware.jsap.stringparsers.StringStringParser
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.List *
    Parameter
        <-- com.martiansoftware.jsap.FlaggedOption
        <-> com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        <-- com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.QualifiedSwitchConfig
        <-- com.martiansoftware.jsap.xml.SwitchConfig
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.List *
        <-- spoon.Launcher
    Parameter[] *
        <-- com.martiansoftware.jsap.JSAP
    ParseException
        --> com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        --> java.lang.String *
        --> java.lang.Throwable *
    Parser
        --> com.martiansoftware.jsap.Defaults
        --> com.martiansoftware.jsap.ExceptionMap
        --> com.martiansoftware.jsap.Flagged
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.IDMap
        --> com.martiansoftware.jsap.IllegalMultipleDeclarationException
        <-> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.JSAPResult
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.QualifiedSwitch
        --> com.martiansoftware.jsap.RequiredParameterMissingException
        --> com.martiansoftware.jsap.Switch
        --> com.martiansoftware.jsap.SyntaxException
        --> com.martiansoftware.jsap.UnflaggedOption
        --> com.martiansoftware.jsap.UnknownFlagException
        --> java.lang.Character *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Iterator *
        --> java.util.List *
    PropertyStringParser
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Properties *
    QualifiedSwitch
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Parser
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.xml.QualifiedSwitchConfig
        --> java.lang.String *
        --> java.lang.StringBuffer *
    RequiredParameterMissingException
        --> com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Parser
        --> java.lang.String *
        --> java.lang.StringBuffer *
    SimpleJSAP
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.JSAPResult
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.Switch
        --> com.martiansoftware.util.StringUtils
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Iterator *
        --> java.util.List *
    StringParser
        <-- com.martiansoftware.jsap.FlaggedOption
        <-- com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.PropertyStringParser
        <-- com.martiansoftware.jsap.QualifiedSwitch
        <-- com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.StringStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.Launcher
    Switch
        --> com.martiansoftware.jsap.Flagged
        <-> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        --> com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.xml.SwitchConfig
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.List *
        <-- spoon.Launcher
    SyntaxException
        --> com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Parser
        --> java.lang.String *
    UnflaggedOption
        <-> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.lang.String *
        --> java.lang.StringBuffer *
    UnknownFlagException
        --> com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Parser
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    UnspecifiedParameterException
        <-- com.martiansoftware.jsap.JSAPResult
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
com.martiansoftware.jsap.ant
    DefaultValue
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        --> java.lang.Object *
        --> java.lang.String *
    FlaggedOptionConfiguration
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        --> com.martiansoftware.jsap.ant.OptionConfiguration
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    JSAPAntTask
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        --> com.martiansoftware.jsap.ant.ParameterConfiguration
        --> com.martiansoftware.jsap.ant.SwitchConfiguration
        --> com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
    OptionConfiguration
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.PropertyStringParser
        --> com.martiansoftware.jsap.StringParser
        --> com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        --> com.martiansoftware.jsap.ant.ParameterConfiguration
        --> com.martiansoftware.jsap.ant.ParserProperty
        --> com.martiansoftware.jsap.ant.ParserProperty[] *
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
    ParameterConfiguration
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.ant.DefaultValue
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.util.Vector *
    ParserProperty
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        --> java.lang.Object *
        --> java.lang.String *
    ParserProperty[] *
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
    SwitchConfiguration
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        --> com.martiansoftware.jsap.ant.ParameterConfiguration
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    UnflaggedOptionConfiguration
        --> com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        --> com.martiansoftware.jsap.ant.OptionConfiguration
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
com.martiansoftware.jsap.defaultsources
    PropertyDefaultSource
        --> com.martiansoftware.jsap.DefaultSource
        --> com.martiansoftware.jsap.Defaults
        --> com.martiansoftware.jsap.ExceptionMap
        --> com.martiansoftware.jsap.IDMap
        --> com.martiansoftware.jsap.JSAPException
        --> java.io.BufferedInputStream *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Properties *
com.martiansoftware.jsap.stringparsers
    BigDecimalStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.math.BigDecimal *
    BigIntegerStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.math.BigInteger *
    BooleanStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    ByteStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Byte *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    CharacterStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    ClassStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    ColorStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.awt.Color *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.StringTokenizer *
    DateStringParser
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.PropertyStringParser
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
    DoubleStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Double *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    EnumeratedStringParser
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Character *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.StringTokenizer *
    FileStringParser
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.PropertyStringParser
        --> com.martiansoftware.jsap.stringparsers.BooleanStringParser
        --> java.io.File *
        --> java.lang.Boolean *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        <-- spoon.Launcher
    FloatStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Float *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    ForNameStringParser
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
    InetAddressStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.UnknownHostException *
    IntSizeStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        --> java.lang.CharSequence *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    IntegerStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        <-- spoon.Launcher
    LongSizeStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        --> java.lang.CharSequence *
        --> java.lang.Long *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.math.BigInteger *
        --> java.util.HashMap *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
    LongStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Long *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    PackageStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    ShortStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
    StringStringParser
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Option
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.Launcher
    URLStringParser
        <-- com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.ParseException
        --> com.martiansoftware.jsap.StringParser
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URL *
com.martiansoftware.jsap.xml
    FlaggedConfig
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        --> com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.SwitchConfig
        --> java.lang.String *
    FlaggedOptionConfig
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.StringParser
        --> com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.QualifiedSwitchConfig
        --> com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        --> java.lang.String *
    JSAPConfig
        <-> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.xml.JSAPXStream
        --> com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
    JSAPXStream
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        --> com.thoughtworks.xstream.XStream *
        --> com.thoughtworks.xstream.io.HierarchicalStreamDriver *
        --> com.thoughtworks.xstream.io.xml.DomDriver *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.String *
        --> java.lang.Throwable *
    ParameterConfig
        --> com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
    Property
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        --> java.lang.Object *
        --> java.lang.String *
    QualifiedSwitchConfig
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.QualifiedSwitch
        --> com.martiansoftware.jsap.xml.FlaggedOptionConfig
        --> java.lang.String *
    StringParserConfig
        --> com.martiansoftware.jsap.PropertyStringParser
        --> com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        --> com.martiansoftware.jsap.xml.Property
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.List *
    SwitchConfig
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.Switch
        --> com.martiansoftware.jsap.xml.FlaggedConfig
        --> java.lang.String *
    TryDumpXML
        --> com.martiansoftware.jsap.xml.FlaggedOptionConfig
        --> com.martiansoftware.jsap.xml.JSAPConfig
        --> com.martiansoftware.jsap.xml.JSAPXStream
        --> com.martiansoftware.jsap.xml.ParameterConfig
        --> com.martiansoftware.jsap.xml.Property
        --> com.martiansoftware.jsap.xml.StringParserConfig
        --> com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
    TryLoadXML
        --> com.martiansoftware.jsap.JSAP
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    UnflaggedOptionConfig
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.StringParser
        --> com.martiansoftware.jsap.UnflaggedOption
        --> com.martiansoftware.jsap.xml.ParameterConfig
        --> com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        --> java.lang.String *
com.martiansoftware.util
    StringUtils
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.SimpleJSAP
        --> java.io.PrintStream *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
com.thoughtworks.xstream *
    XStream *
        <-- com.martiansoftware.jsap.xml.JSAPXStream
com.thoughtworks.xstream.io *
    HierarchicalStreamDriver *
        <-- com.martiansoftware.jsap.xml.JSAPXStream
com.thoughtworks.xstream.io.xml *
    DomDriver *
        <-- com.martiansoftware.jsap.xml.JSAPXStream
fr.inria.lille.commons.spoon
    SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedFile
        <-> fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.TypeFactory
    SpoonedFile
        --> B[] *
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URL *
        --> java.net.URL[] *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.slf4j.Logger *
        --> spoon.compiler.Environment
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.JavaOutputProcessor
        --> spoon.support.RuntimeProcessingManager
        --> spoon.support.StandardEnvironment
        --> xxl.java.compiler.BytecodeClassLoader
        --> xxl.java.compiler.BytecodeClassLoaderBuilder
        --> xxl.java.compiler.DynamicClassCompiler
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.library.JavaLibrary
        --> xxl.java.library.LoggerLibrary
    SpoonedProject
        <-> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.TypeFactory
        --> xxl.java.compiler.BytecodeClassLoader
        --> xxl.java.container.classic.MetaList
fr.inria.lille.commons.spoon.collectable
    CollectableValueFinder
        --> fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        --> fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        --> fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        --> fr.inria.lille.commons.spoon.filter.InBlockFilter
        --> fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.slf4j.Logger *
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.CompositeFilter
        --> spoon.reflect.visitor.filter.FilteringOperator
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.library.LoggerLibrary
    CompoundProcessor
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.Processor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        --> xxl.java.container.classic.MetaList
    ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.CtAbstractVisitor
        --> xxl.java.container.classic.MetaSet
    SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtAbstractVisitor
        --> xxl.java.container.classic.MetaSet
fr.inria.lille.commons.spoon.filter
    BeforeLocationFilter
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        --> fr.inria.lille.commons.spoon.filter.LocationFilter
        --> java.lang.Class *
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
    CodeSnippetFilter
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> xxl.java.library.FileLibrary
    InBlockFilter
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.Collection *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
    LocationFilter
        <-- fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        --> java.io.File *
        --> java.lang.Class *
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> xxl.java.library.FileLibrary
    VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.filter.AbstractFilter
fr.inria.lille.commons.spoon.util
    SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.TypeFilter
        --> xxl.java.library.ClassLibrary
    SpoonLoopLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.repair.infinitel.loop.While
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> xxl.java.container.classic.MetaList
    SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
    SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtElement[] *
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> xxl.java.container.classic.MetaList
        --> xxl.java.library.JavaLibrary
    SpoonReferenceLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> xxl.java.library.ClassLibrary
    SpoonStatementLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> xxl.java.container.classic.MetaList
        --> xxl.java.library.ClassLibrary
fr.inria.lille.commons.synthesis
    CodeGenesis
        --> fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        --> fr.inria.lille.commons.synthesis.OperationCodeLine
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
    CodeLine
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.classic.MetaList
    ConstraintBasedSynthesis
        --> fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.NullCodeGenesis
        --> fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
        --> fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.IllegalStateException *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.slf4j.Logger *
        --> org.smtlib.ICommand$IScript *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.map.Multimap
        --> xxl.java.library.ClassLibrary
        --> xxl.java.library.LoggerLibrary
    NullCodeGenesis
        --> fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.Map *
    OperationCodeLine
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.CodeLine
        --> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        --> fr.inria.lille.commons.synthesis.operator.TernaryOperator
        --> fr.inria.lille.commons.synthesis.operator.UnaryOperator
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
    SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.smtlib.ICommand *
        --> org.smtlib.ICommand$IScript *
        --> org.smtlib.ICommand$Iassert *
        --> org.smtlib.ICommand$Ideclare_fun *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISort *
        --> xxl.java.container.classic.MetaList
    SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.theory.EmptyTheory
        --> fr.inria.lille.commons.synthesis.theory.IfThenElseTheory
        --> fr.inria.lille.commons.synthesis.theory.LinearTheory
        --> fr.inria.lille.commons.synthesis.theory.LogicTheory
        --> fr.inria.lille.commons.synthesis.theory.NonlinearTheory
        --> fr.inria.lille.commons.synthesis.theory.NumberComparisonTheory
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaList
fr.inria.lille.commons.synthesis.expression
    Expression
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.classic.MetaList
    ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> org.smtlib.ISort *
        --> xxl.java.container.map.Multimap
        --> xxl.java.library.ClassLibrary
fr.inria.lille.commons.synthesis.operator
    BinaryOperator
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        --> fr.inria.lille.commons.synthesis.operator.Operator
        <-> fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.theory.LinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.LogicTheory
        <-- fr.inria.lille.commons.synthesis.theory.NonlinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.NumberComparisonTheory
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
    DoubleOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
    Operator
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        --> fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.theory.EmptyTheory
        <-- fr.inria.lille.commons.synthesis.theory.IfThenElseTheory
        <-- fr.inria.lille.commons.synthesis.theory.LinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.LogicTheory
        <-- fr.inria.lille.commons.synthesis.theory.NonlinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.NumberComparisonTheory
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
    OperatorVisitor
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        <-> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-> fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-> fr.inria.lille.commons.synthesis.operator.UnaryOperator
        --> java.lang.Object *
    Parameter
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
    TernaryOperator
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        --> fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-> fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.theory.IfThenElseTheory
        --> java.lang.Class *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
    UnaryOperator
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        --> fr.inria.lille.commons.synthesis.operator.Operator
        <-> fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.theory.LogicTheory
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.List *
        --> org.smtlib.IExpr$ISymbol *
fr.inria.lille.commons.synthesis.smt
    ObjectToExpr
        <-> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Map *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IDecimal *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr$INumeral *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISort *
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.ClassLibrary
        --> xxl.java.library.StringLibrary
    SMTLib
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-> fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-> fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        --> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.smtlib.IAccept *
        --> org.smtlib.ICommand *
        --> org.smtlib.ICommand$IFactory *
        --> org.smtlib.ICommand$IScript *
        --> org.smtlib.ICommand$Iassert *
        --> org.smtlib.ICommand$Ideclare_fun *
        --> org.smtlib.ICommand$Idefine_fun *
        --> org.smtlib.ICommand$Iset_logic *
        --> org.smtlib.ICommand$Iset_option *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IAttributeValue *
        --> org.smtlib.IExpr$IBinaryLiteral *
        --> org.smtlib.IExpr$IDecimal *
        --> org.smtlib.IExpr$IDeclaration *
        --> org.smtlib.IExpr$IExists *
        --> org.smtlib.IExpr$IFactory *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr$IForall *
        --> org.smtlib.IExpr$IHexLiteral *
        --> org.smtlib.IExpr$IIdentifier *
        --> org.smtlib.IExpr$IKeyword *
        --> org.smtlib.IExpr$INumeral *
        --> org.smtlib.IExpr$IQualifiedIdentifier *
        --> org.smtlib.IExpr$IStringLiteral *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.IParser *
        --> org.smtlib.IParser$IFactory *
        --> org.smtlib.ISolver *
        --> org.smtlib.ISort *
        --> org.smtlib.ISort$IApplication *
        --> org.smtlib.ISort$IFactory *
        --> org.smtlib.ISort$IParameter *
        --> org.smtlib.ISource *
        --> org.smtlib.SMT$Configuration *
        --> org.smtlib.Utils *
        --> org.smtlib.logic.AUFLIA *
        --> org.smtlib.logic.AUFLIRA *
        --> org.smtlib.logic.AUFNIRA *
        --> org.smtlib.logic.LRA *
        --> org.smtlib.logic.QF_LIA *
        --> org.smtlib.logic.QF_LRA *
        --> org.smtlib.logic.QF_NIA *
        --> org.smtlib.logic.QF_UF *
        --> org.smtlib.sexpr.Parser *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
    SMTLibEqualVisitor
        --> java.lang.AssertionError *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.math.BigDecimal *
        --> java.math.BigInteger *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.slf4j.Logger *
        --> org.smtlib.IAccept *
        --> org.smtlib.ICommand *
        --> org.smtlib.ICommand$IScript *
        --> org.smtlib.ICommand$Iassert *
        --> org.smtlib.ICommand$Ideclare_fun *
        --> org.smtlib.ICommand$Idefine_fun *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IAsIdentifier *
        --> org.smtlib.IExpr$IAttribute *
        --> org.smtlib.IExpr$IAttributedExpr *
        --> org.smtlib.IExpr$IBinaryLiteral *
        --> org.smtlib.IExpr$IBinding *
        --> org.smtlib.IExpr$IDecimal *
        --> org.smtlib.IExpr$IDeclaration *
        --> org.smtlib.IExpr$IError *
        --> org.smtlib.IExpr$IExists *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr$IForall *
        --> org.smtlib.IExpr$IHexLiteral *
        --> org.smtlib.IExpr$IIdentifier *
        --> org.smtlib.IExpr$IKeyword *
        --> org.smtlib.IExpr$ILet *
        --> org.smtlib.IExpr$INumeral *
        --> org.smtlib.IExpr$IParameterizedIdentifier *
        --> org.smtlib.IExpr$IQualifiedIdentifier *
        --> org.smtlib.IExpr$IStringLiteral *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ILogic *
        --> org.smtlib.IResponse *
        --> org.smtlib.IResponse$IAssertionsResponse *
        --> org.smtlib.IResponse$IAssignmentResponse *
        --> org.smtlib.IResponse$IAttributeList *
        --> org.smtlib.IResponse$IError *
        --> org.smtlib.IResponse$IProofResponse *
        --> org.smtlib.IResponse$IUnsatCoreResponse *
        --> org.smtlib.IResponse$IValueResponse *
        --> org.smtlib.ISort *
        --> org.smtlib.ISort$IAbbreviation *
        --> org.smtlib.ISort$IApplication *
        --> org.smtlib.ISort$IFamily *
        --> org.smtlib.ISort$IFcnSort *
        --> org.smtlib.ISort$IParameter *
        --> org.smtlib.ITheory *
        --> org.smtlib.IVisitor *
        --> org.smtlib.IVisitor$VisitorException *
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.library.LoggerLibrary
    SMTLibParser
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.ICommand *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IBinaryLiteral *
        --> org.smtlib.IExpr$IDecimal *
        --> org.smtlib.IExpr$IDeclaration *
        --> org.smtlib.IExpr$IHexLiteral *
        --> org.smtlib.IExpr$IKeyword *
        --> org.smtlib.IExpr$INumeral *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.IParser$ParserException *
        --> org.smtlib.ISort *
        --> org.smtlib.impl.Command *
        --> org.smtlib.impl.SMTExpr$Keyword *
        --> org.smtlib.impl.SMTExpr$Symbol *
        --> org.smtlib.impl.Sort *
        --> org.smtlib.sexpr.Parser *
        --> xxl.java.container.classic.MetaList
    SMTLibScriptSolution
        <-> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        --> java.lang.ClassCastException *
        --> java.lang.IndexOutOfBoundsException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.smtlib.ICommand$IScript *
        --> org.smtlib.ICommand$Iassert *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr[] *
        --> org.smtlib.IParser$ParserException *
        --> org.smtlib.IResponse *
        --> org.smtlib.ISolver *
        --> org.smtlib.impl.Response *
        --> org.smtlib.impl.SMTExpr$Symbol *
        --> org.smtlib.sexpr.ISexpr *
        --> org.smtlib.sexpr.ISexpr$IToken *
        --> org.smtlib.sexpr.Parser *
        --> org.smtlib.sexpr.Sexpr$Seq *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.StringLibrary
fr.inria.lille.commons.synthesis.smt.constraint
    AcyclicityConstraint
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaList
    CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.smtlib.IExpr *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaSet
    ConnectivityConstraint
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISort *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.map.Multimap
    ConsistencyConstraint
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaList
    Constraint
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.smtlib.ICommand *
        --> org.smtlib.ICommand$Idefine_fun *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IDeclaration *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr$INumeral *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.IExpr[] *
        --> org.smtlib.ISort *
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaList
    LibraryConstraint
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IFcnExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaList
    LineBoundConstraint
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISort *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.map.Multimap
    VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$IExists *
    WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        --> fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        --> fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
fr.inria.lille.commons.synthesis.smt.locationVariables
    IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$INumeral *
        --> xxl.java.container.classic.MetaList
    LocationVariable
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.smtlib.IExpr *
        --> org.smtlib.IExpr$ISymbol *
        --> xxl.java.container.classic.MetaList
    LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        --> fr.inria.lille.commons.synthesis.expression.Expression
        --> fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.classic.MetaList
    OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-> fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.classic.MetaList
    ParameterLocationVariable
        --> fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        --> fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        --> fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-> fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
fr.inria.lille.commons.synthesis.smt.solver
    CVC4SolverFactory
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        --> java.lang.String *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISolver *
        --> org.smtlib.SMT$Configuration *
        --> org.smtlib.solvers.Solver_cvc4 *
    SolverFactory
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-> fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        <-> fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
        <-- fr.inria.lille.repair.Main
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.IResponse *
        --> org.smtlib.ISolver *
        --> org.smtlib.SMT *
        --> org.smtlib.SMT$Configuration *
        --> xxl.java.library.FileLibrary
    Z3SolverFactory
        --> fr.inria.lille.commons.synthesis.smt.SMTLib
        <-> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        --> java.lang.String *
        --> org.smtlib.IExpr$ISymbol *
        --> org.smtlib.ISolver *
        --> org.smtlib.SMT$Configuration *
        --> org.smtlib.solvers.Solver_z3_4_3 *
fr.inria.lille.commons.synthesis.theory
    EmptyTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    IfThenElseTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.operator.TernaryOperator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    LinearTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    LogicTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.operator.UnaryOperator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    NonlinearTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    NumberComparisonTheory
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.BinaryOperator
        --> fr.inria.lille.commons.synthesis.operator.Operator
        --> fr.inria.lille.commons.synthesis.theory.OperatorTheory
    OperatorTheory
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        --> fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.theory.EmptyTheory
        <-- fr.inria.lille.commons.synthesis.theory.IfThenElseTheory
        <-- fr.inria.lille.commons.synthesis.theory.LinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.LogicTheory
        <-- fr.inria.lille.commons.synthesis.theory.NonlinearTheory
        <-- fr.inria.lille.commons.synthesis.theory.NumberComparisonTheory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
fr.inria.lille.commons.trace
    RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        --> fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        --> fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.support.GlobalToggle
    RuntimeValuesInstrumenter
        --> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.factory.Factory
        --> xxl.java.container.classic.MetaList
    Specification
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Map *
    SpecificationTestCasesListener
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.slf4j.Logger *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.junit.TestCase
        --> xxl.java.junit.TestCasesListener
        --> xxl.java.library.LoggerLibrary
fr.inria.lille.commons.trace.collector
    ArrayCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Array *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    BooleanCollector
        --> fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
    CharSequenceCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    CharacterCollector
        --> fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Character *
        --> java.lang.Class *
    CollectionCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    DictionaryCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Dictionary *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    EnumerationCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    IteratorCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    MapCollector
        <-> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> xxl.java.container.various.Pair
    NumberCollector
        --> fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Class *
        --> java.lang.Number *
    PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.BooleanCollector
        <-- fr.inria.lille.commons.trace.collector.CharacterCollector
        <-- fr.inria.lille.commons.trace.collector.NumberCollector
        --> fr.inria.lille.commons.trace.collector.ValueCollector
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> xxl.java.container.various.Pair
    ValueCollector
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-> fr.inria.lille.commons.trace.collector.ArrayCollector
        --> fr.inria.lille.commons.trace.collector.BooleanCollector
        <-> fr.inria.lille.commons.trace.collector.CharSequenceCollector
        --> fr.inria.lille.commons.trace.collector.CharacterCollector
        <-> fr.inria.lille.commons.trace.collector.CollectionCollector
        <-> fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-> fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-> fr.inria.lille.commons.trace.collector.IteratorCollector
        <-> fr.inria.lille.commons.trace.collector.MapCollector
        --> fr.inria.lille.commons.trace.collector.NumberCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.various.Pair
fr.inria.lille.repair
    Main
        --> fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        --> fr.inria.lille.repair.infinitel.Infinitel
        <-> fr.inria.lille.repair.nopol.NoPolLauncher
        --> fr.inria.lille.repair.symbolic.Symbolic
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.net.URL *
        --> java.util.Arrays *
        --> java.util.List *
        --> xxl.java.library.FileLibrary
        --> xxl.java.library.JavaLibrary
    ProjectReference
        --> fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> xxl.java.library.FileLibrary
        --> xxl.java.library.JavaLibrary
    TestClassesFinder
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.concurrent.Callable *
        --> java.util.concurrent.ExecutionException *
        --> java.util.concurrent.ExecutorService *
        --> java.util.concurrent.Executors *
        --> java.util.concurrent.Future *
        --> java.util.concurrent.ThreadFactory *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> sacha.finder.classes.ClassFinder *
        --> sacha.finder.classes.impl.ClassloaderFinder *
        --> sacha.finder.filters.ClassFilter *
        --> sacha.finder.filters.impl.TestFilter *
        --> sacha.finder.processor.Processor *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.junit.CustomClassLoaderThreadFactory
fr.inria.lille.repair.common
    Fixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Object *
        --> java.util.List *
    TestResult
        --> java.lang.Object *
fr.inria.lille.repair.infinitel
    InfiniteLoopFixer
        --> fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.repair.infinitel.Infinitel
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> org.junit.runner.Result
        --> org.slf4j.Logger *
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.junit.TestCase
        --> xxl.java.library.LoggerLibrary
    Infinitel
        <-- fr.inria.lille.repair.Main
        --> fr.inria.lille.repair.ProjectReference
        --> fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        --> fr.inria.lille.repair.infinitel.InfinitelConfiguration
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> org.slf4j.Logger *
        --> xxl.java.library.LoggerLibrary
        --> xxl.java.support.Singleton
    InfinitelConfiguration
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnosticianConfiguration
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Object *
    InfinitelDiagnostician
        --> fr.inria.lille.repair.ProjectReference
        --> fr.inria.lille.repair.infinitel.Infinitel
        --> fr.inria.lille.repair.infinitel.InfinitelConfiguration
        <-> fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        --> fr.inria.lille.repair.infinitel.InfinitelDiagnosticianConfiguration
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.io.File *
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.net.URL *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.slf4j.Logger *
        --> spoon.reflect.cu.SourcePosition
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.various.Bag
        --> xxl.java.container.various.MappingBag
        --> xxl.java.container.various.Pair
        --> xxl.java.container.various.Table
        --> xxl.java.junit.TestCase
        --> xxl.java.library.FileLibrary
        --> xxl.java.library.JavaLibrary
        --> xxl.java.library.LoggerLibrary
        --> xxl.java.library.StringLibrary
        --> xxl.java.support.Function
        --> xxl.java.support.RangeMapper
        --> xxl.java.support.Singleton
    InfinitelDiagnostician$1
        <-> fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.container.various.Pair
        --> xxl.java.support.Function
        --> xxl.java.support.RangeMapper
    InfinitelDiagnosticianConfiguration
        --> fr.inria.lille.repair.infinitel.InfinitelConfiguration
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
fr.inria.lille.repair.infinitel.loop
    While
        --> fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.SourcePosition
        --> xxl.java.container.classic.MetaList
fr.inria.lille.repair.infinitel.loop.examination
    LoopTestListener
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> xxl.java.container.various.Table
        --> xxl.java.junit.TestCase
        --> xxl.java.junit.TestCasesListener
    LoopTestResult
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.lang.Comparable *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.various.Bag
        --> xxl.java.container.various.Table
        --> xxl.java.junit.TestCase
        --> xxl.java.library.NumberLibrary
        --> xxl.java.support.Function
fr.inria.lille.repair.infinitel.loop.implant
    CentralLoopMonitor
        --> fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        --> fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
    LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.util.Map *
        --> xxl.java.container.classic.MetaMap
    LoopInstrumenter
        --> fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.support.Singleton
    LoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.various.Bag
        --> xxl.java.support.GlobalToggle
    LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$1
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$10
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$11
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$12
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$13
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$14
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$15
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$2
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$3
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$4
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$5
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$6
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$7
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$8
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$9
        <-> fr.inria.lille.repair.infinitel.loop.implant.NullLoopStatistics
        --> java.lang.Comparable *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.Set *
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    LoopStatistics$1
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$10
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Double *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$11
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Double *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$12
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Object *
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    LoopStatistics$13
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Object *
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    LoopStatistics$14
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Object *
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    LoopStatistics$15
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Object *
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    LoopStatistics$2
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Long *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$3
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$4
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$5
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$6
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$7
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$8
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Double *
        --> java.lang.Object *
        --> xxl.java.support.Function
    LoopStatistics$9
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Double *
        --> java.lang.Object *
        --> xxl.java.support.Function
    MonitoringTestExecutor
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        --> fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> xxl.java.junit.NullRunListener
        --> xxl.java.junit.TestCase
        --> xxl.java.junit.TestSuiteExecution
        --> xxl.java.support.Singleton
    NullLoopStatistics
        <-> fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        --> java.lang.Integer *
        --> xxl.java.container.various.Bag
    ProjectMonitorImplanter
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.infinitel.Infinitel
        --> fr.inria.lille.repair.infinitel.InfinitelConfiguration
        --> fr.inria.lille.repair.infinitel.loop.While
        --> fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        --> fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        --> fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.net.URL *
        --> java.util.Map *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.Processor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> xxl.java.container.classic.MetaMap
fr.inria.lille.repair.nopol
    ClassFileUtil
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.Map *
        --> java.util.StringTokenizer *
        --> org.eclipse.jdt.internal.compiler.util.Messages
    ConstantType
        --> java.lang.Object *
    NoPol
        --> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.repair.TestClassesFinder
        --> fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.patch.TestPatch
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        --> fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> fr.inria.lille.repair.nopol.synth.Synthesizer
        --> fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> xxl.java.junit.TestCase
        --> xxl.java.junit.TestCasesListener
        --> xxl.java.junit.TestSuiteExecution
    NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.NoPol
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    NoPolLauncher
        <-> fr.inria.lille.repair.Main
        --> fr.inria.lille.repair.nopol.NoPol
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        --> fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.net.URL *
        --> java.util.Iterator *
        --> java.util.List *
    SourceLocation
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> xxl.java.library.FileLibrary
fr.inria.lille.repair.nopol.ifmetric
    IfBranch
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    IfCollectorProcessor
        <-> fr.inria.lille.repair.nopol.ifmetric.IfMetric
        --> fr.inria.lille.repair.nopol.ifmetric.IfPosition
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.HashMap *
        --> java.util.Map *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
    IfCountingInstrumentingProcessor
        <-> fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-> fr.inria.lille.repair.nopol.ifmetric.IfMetric
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.Filter
        --> spoon.support.reflect.code.CtStatementListImpl
    IfCountingInstrumentingProcessor$1
        <-> fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
    IfMetric
        --> com.google.common.base.Preconditions *
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.repair.TestClassesFinder
        --> fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-> fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-> fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> fr.inria.lille.repair.nopol.ifmetric.IfPosition
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URI *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.junit.runner.Result
        --> spoon.processing.AbstractProcessor
        --> xxl.java.junit.TestSuiteExecution
    IfPosition
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
fr.inria.lille.repair.nopol.patch
    Patch
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-> fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        --> fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
    Patch$NoPatch
        <-> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.synth.BugKind
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
    StringPatch
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
    TestPatch
        --> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.repair.nopol.NoPol
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.junit.runner.Result
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> spoon.processing.Processor
        --> xxl.java.junit.TestSuiteExecution
fr.inria.lille.repair.nopol.spoon
    ConditionalAdder
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> org.slf4j.Logger *
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
    ConditionalLoggingInstrumenter
        --> fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        --> fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Map *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.support.Singleton
    ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> xxl.java.library.FileLibrary
    ConditionalReplacer
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> org.slf4j.Logger *
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
    InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> xxl.java.library.FileLibrary
    IntialisationAdder
        --> fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        --> java.lang.Object *
        --> java.lang.String *
        --> org.slf4j.Logger *
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtLocalVariableReference
    SpoonConditionalPredicate
        --> com.google.common.base.Predicate *
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.declaration.CtElement
    SpoonInitialisationStatement
        --> com.google.common.base.Predicate *
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.declaration.CtElement
    SpoonStatementPredicate
        --> com.google.common.base.Predicate *
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
fr.inria.lille.repair.nopol.sps
    SuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
    SuspiciousStatement
        <-- fr.inria.lille.repair.nopol.NoPol
        --> fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$1
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Object *
fr.inria.lille.repair.nopol.sps.gzoltar
    GZoltarJava7
        --> com.google.common.base.Preconditions *
        --> com.gzoltar.core.GZoltar *
        --> com.gzoltar.core.agent.AgentCreator *
        --> com.gzoltar.core.agent.RegistrySingleton *
        --> com.gzoltar.core.components.Component *
        --> com.gzoltar.core.components.Statement *
        --> com.gzoltar.core.diag.SFL *
        --> com.gzoltar.core.exec.parameters.ClassParameters *
        --> com.gzoltar.core.exec.parameters.TestParameters *
        --> com.gzoltar.core.instr.message.IMessage *
        --> com.gzoltar.core.instr.message.Message *
        --> com.gzoltar.core.instr.message.Response *
        --> com.gzoltar.core.spectra.Spectra *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.ProcessBuilder *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.rmi.Remote *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.UUID *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
    GZoltarStatement
        --> com.google.common.base.Preconditions *
        --> com.gzoltar.core.components.Clazz *
        --> com.gzoltar.core.components.Statement *
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
    GZoltarStatementWrapperFunction
        --> com.google.common.base.Function *
        --> com.gzoltar.core.components.Statement *
        --> fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    GZoltarSuspiciousProgramStatements
        --> com.google.common.base.Function *
        --> com.google.common.base.Joiner *
        --> com.google.common.base.Preconditions *
        --> com.google.common.base.Predicate *
        --> com.google.common.collect.FluentIterable *
        --> com.google.common.collect.ImmutableList *
        --> com.gzoltar.core.GZoltar *
        <-- fr.inria.lille.repair.nopol.NoPol
        --> fr.inria.lille.repair.nopol.sps.SuspiciousProgramStatements
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$1
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.net.URL[] *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
    GZoltarSuspiciousProgramStatements$1
        --> fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        <-> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> java.lang.Double *
        --> java.lang.Object *
        --> java.util.Comparator *
    GZoltarSuspiciousProgramStatements$IsSuspicious
        --> com.google.common.base.Predicate *
        --> com.gzoltar.core.components.Statement *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
fr.inria.lille.repair.nopol.synth
    AngelicExecution
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
    BugKind
        <-- fr.inria.lille.repair.nopol.patch.Patch
        <-- fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    BugKindDetector
        --> com.google.common.base.Preconditions *
        --> fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        --> fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        --> fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        --> fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> xxl.java.library.FileLibrary
    ConstraintModelBuilder
        --> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.commons.trace.RuntimeValues
        --> fr.inria.lille.commons.trace.SpecificationTestCasesListener
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Collection *
        --> java.util.List *
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> spoon.processing.Processor
        --> xxl.java.junit.CompoundResult
        --> xxl.java.junit.TestSuiteExecution
    DefaultSynthesizer
        --> fr.inria.lille.commons.synthesis.CodeGenesis
        --> fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.patch.StringPatch
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        --> fr.inria.lille.repair.nopol.synth.BugKind
        --> fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        --> fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.io.File *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Collection *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
    DelegatingProcessor
        --> com.google.common.base.Predicate *
        --> java.io.File *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.Processor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
    Synthesizer
        <-- fr.inria.lille.repair.nopol.NoPol
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-> fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Collection *
    Synthesizer$1
        --> fr.inria.lille.repair.nopol.patch.Patch
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-> fr.inria.lille.repair.nopol.synth.Synthesizer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Collection *
    SynthesizerFactory
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        --> fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        --> fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        --> fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        --> fr.inria.lille.repair.nopol.synth.BugKind
        --> fr.inria.lille.repair.nopol.synth.BugKindDetector
        --> fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        --> fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        --> fr.inria.lille.repair.nopol.synth.Synthesizer
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        --> spoon.processing.Processor
        --> spoon.reflect.code.CtStatement
fr.inria.lille.repair.symbolic
    Symbolic
        <-- fr.inria.lille.repair.Main
        --> fr.inria.lille.repair.ProjectReference
        --> fr.inria.lille.repair.symbolic.SymbolicConfiguration
        --> fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.List *
        --> org.slf4j.Logger *
        --> xxl.java.library.LoggerLibrary
        --> xxl.java.support.Singleton
    SymbolicConfiguration
        <-- fr.inria.lille.repair.symbolic.Symbolic
        --> java.lang.Object *
    SymbolicFixer
        --> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.SpoonedProject
        --> fr.inria.lille.repair.ProjectReference
        --> fr.inria.lille.repair.TestClassesFinder
        --> fr.inria.lille.repair.common.Fixer
        --> fr.inria.lille.repair.nopol.SourceLocation
        --> fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        --> fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-> fr.inria.lille.repair.symbolic.SymbolicFixer$1
        --> fr.inria.lille.repair.symbolic.jpf.JPFUtil
        --> fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> gov.nasa.jpf.Config *
        --> gov.nasa.jpf.JPF *
        --> gov.nasa.jpf.search.SearchListener *
        --> gov.nasa.jpf.symbc.numeric.BinaryLinearIntegerExpression *
        --> gov.nasa.jpf.symbc.numeric.Constraint *
        --> gov.nasa.jpf.symbc.numeric.Expression *
        --> gov.nasa.jpf.symbc.numeric.IntegerExpression *
        --> gov.nasa.jpf.symbc.numeric.SymbolicInteger *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> spoon.processing.Processor
        --> xxl.java.junit.TestCase
        --> xxl.java.junit.TestCasesListener
        --> xxl.java.junit.TestSuiteExecution
    SymbolicFixer$1
        <-> fr.inria.lille.repair.symbolic.SymbolicFixer
        --> gov.nasa.jpf.search.Search *
        --> gov.nasa.jpf.search.SearchListenerAdapter *
        --> gov.nasa.jpf.symbc.numeric.Constraint *
        --> gov.nasa.jpf.symbc.numeric.PCChoiceGenerator *
        --> gov.nasa.jpf.symbc.numeric.PathCondition *
        --> gov.nasa.jpf.vm.ChoiceGenerator *
        --> gov.nasa.jpf.vm.VM *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
fr.inria.lille.repair.symbolic.jpf
    JPFUtil
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> gov.nasa.jpf.Config *
        --> gov.nasa.jpf.JPF *
        --> java.lang.Object *
        --> java.lang.String *
fr.inria.lille.repair.symbolic.spoon
    AssertReplacer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.CharSequence *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.List *
        --> org.junit.Assert
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
    BasicValueReplacer
        --> java.lang.Object *
    ToJPFReplacer
        --> fr.inria.lille.commons.spoon.SpoonedClass
        --> fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-> fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$1
        <-> fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
    ToJPFReplacer$1
        <-> fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
    ToJPFReplacer$2
        <-> fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.support.reflect.code.CtUnaryOperatorImpl
fr.inria.lille.repair.symbolic.test
    TestExecutor
        --> java.lang.Object *
gov.nasa.jpf *
    Config *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.jpf.JPFUtil
    JPF *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.jpf.JPFUtil
gov.nasa.jpf.search *
    Search *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
    SearchListener *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
    SearchListenerAdapter *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
gov.nasa.jpf.symbc.numeric *
    BinaryLinearIntegerExpression *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
    Constraint *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
    Expression *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
    IntegerExpression *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
    PCChoiceGenerator *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
    PathCondition *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
    SymbolicInteger *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
gov.nasa.jpf.vm *
    ChoiceGenerator *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
    VM *
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
java.awt *
    AWTEventMulticaster *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
    Adjustable *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
    BorderLayout *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Color *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    Color[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Component *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Container *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Dimension *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    DisplayMode *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    FlowLayout *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    Font *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogTable
    FontMetrics *
        <-- org.apache.log4j.lf5.viewer.LogTable
    Frame *
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    Graphics *
        <-- org.apache.log4j.lf5.viewer.LogTable
    GraphicsConfiguration *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsDevice *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsEnvironment *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    GridBagConstraints *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    GridBagLayout *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
    GridLayout *
        <-- spoon.support.gui.SpoonModelTree
    Image *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    Insets *
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    Label *
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    LayoutManager *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Point *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
    Rectangle *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
    Toolkit *
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    Window *
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
java.awt.event *
    ActionEvent *
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.chainsaw.ControlPanel$6
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.Main$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$16
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$17
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$18
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$19
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$20
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$21
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$22
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$23
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$24
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$25
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonModelTree$2
        <-- spoon.support.gui.SpoonModelTree$3
        <-- spoon.support.gui.SpoonModelTree$4
        <-- spoon.test.secondaryclasses.AnonymousClass$1
    ActionListener *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.chainsaw.ControlPanel$6
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$16
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$17
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$18
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$19
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$20
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$21
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$22
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$23
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$24
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$25
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonModelTree$2
        <-- spoon.support.gui.SpoonModelTree$3
        <-- spoon.support.gui.SpoonModelTree$4
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.AnonymousClass$1
        <-- spoon.test.secondaryclasses.ClassesTest
    AdjustmentEvent *
        <-- org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
    AdjustmentListener *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
    KeyAdapter *
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1
    KeyEvent *
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1
        <-- spoon.support.gui.SpoonModelTree
    KeyListener *
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- spoon.support.gui.SpoonModelTree
    MouseAdapter *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2
    MouseEvent *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2
        <-- spoon.support.gui.SpoonModelTree
    MouseListener *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonModelTree
    WindowAdapter *
        <-- org.apache.log4j.chainsaw.Main$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor
    WindowEvent *
        <-- org.apache.log4j.chainsaw.Main$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor
    WindowListener *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
java.beans *
    BeanInfo *
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
    IntrospectionException *
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    Introspector *
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
    PropertyDescriptor *
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
java.io *
    BufferedInputStream *
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.ZipFolder
    BufferedOutputStream *
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.mail.MailMessage
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.util.Util
    BufferedReader *
        <-- fr.inria.lille.repair.Main
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.test.trycatch.Main
    BufferedWriter *
        <-- org.apache.log4j.FileAppender
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    ByteArrayInputStream *
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.VirtualClassFileObject
    ByteArrayOutputStream *
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.lf5.util.StreamUtils
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.DemuxOutputStream$BufferInfo
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Length$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Redirector$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.junit.experimental.results.PrintableResult
        <-- spoon.support.compiler.ZipFolder
        <-- xxl.java.compiler.VirtualClassFileObject
    CharArrayWriter *
        <-- org.apache.commons.io.IOUtils
    CharConversionException *
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    DataInput *
        <-- org.apache.commons.io.input.SwappedDataInputStream
    DataInputStream *
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
    DataOutputStream *
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
    EOFException *
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.input.SwappedDataInputStream
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.tools.ant.Project
    File *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.LocationFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.patch.Patch
        <-- fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.DirectoryWalker$CancelException
        <-- org.apache.commons.io.FileCleaner
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
        <-- org.apache.commons.io.FileDeleteStrategy
        <-- org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.AgeFileFilter
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        <-- org.apache.commons.io.filefilter.CanWriteFileFilter
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.DirectoryFileFilter
        <-- org.apache.commons.io.filefilter.EmptyFileFilter
        <-- org.apache.commons.io.filefilter.FalseFileFilter
        <-- org.apache.commons.io.filefilter.FileFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.HiddenFileFilter
        <-- org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.NotFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SizeFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.TrueFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Diagnostics$1
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.FileScanner
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$1
        <-- org.apache.tools.ant.taskdefs.Javadoc$LinkArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$SourceFile
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.Environment$Variable
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.FilterSet$FiltersFile
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.Path$PathElement
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.FlatFileNameMapper
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.PackageNameMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.SourceFileScanner
        <-- org.apache.tools.ant.util.UnPackageNameMapper
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileFinder
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$2
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.rules.TemporaryFolder
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.FileGenerator
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.test.api.APITest$1
        <-- spoon.test.generics.GenericsTest
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
    FileFilter *
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.IOFileFilter
    FileInputStream *
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.max.MaxHistory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
    FileNotFoundException *
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.test.exceptions.ExceptionTest
    FileOutputStream *
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.max.MaxHistory
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree$1
        <-- xxl.java.compiler.JarPackage
    FileReader *
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- spoon.test.trycatch.Main
    FileWriter *
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    File[] *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.eclipse.jdt.internal.compiler.batch.Main
    FilenameFilter *
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Diagnostics$1
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$1
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$2
    FilterInputStream *
        <-- org.apache.commons.io.input.ProxyInputStream
        <-- org.apache.tools.ant.util.KeepAliveInputStream
        <-- org.apache.tools.tar.TarInputStream
    FilterOutputStream *
        <-- org.apache.commons.io.output.ProxyOutputStream
        <-- org.apache.tools.ant.util.KeepAliveOutputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.zip.ZipOutputStream
    FilterReader *
        <-- org.apache.commons.io.input.ProxyReader
        <-- org.apache.tools.ant.filters.BaseFilterReader
    FilterWriter *
        <-- org.apache.commons.io.output.ProxyWriter
        <-- org.apache.log4j.helpers.QuietWriter
    IOException *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.DirectoryWalker$CancelException
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.FileDeleteStrategy
        <-- org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.input.DemuxInputStream
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.input.ProxyInputStream
        <-- org.apache.commons.io.input.ProxyReader
        <-- org.apache.commons.io.input.SwappedDataInputStream
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.DemuxOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.commons.io.output.NullOutputStream
        <-- org.apache.commons.io.output.ProxyOutputStream
        <-- org.apache.commons.io.output.ProxyWriter
        <-- org.apache.commons.io.output.TeeOutputStream
        <-- org.apache.commons.io.output.ThresholdingOutputStream
        <-- org.apache.log4j.ConsoleAppender$SystemErrStream
        <-- org.apache.log4j.ConsoleAppender$SystemOutStream
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.StreamUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.DOMConfigurator$ParseAction
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.DemuxInputStream
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.StripJavaComments
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$1
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$1
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Redirector$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.KeepAliveInputStream
        <-- org.apache.tools.ant.util.KeepAliveOutputStream
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.OutputStreamFunneler$Funnel
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.TeeOutputStream
        <-- org.apache.tools.ant.util.Tokenizer
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.mail.ErrorInQuitException
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipFile$BoundedInputStream
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.StringDescription
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.rules.TemporaryFolder
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.util.BasicCompilationUnit
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
    InputStream *
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.TestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.input.DemuxInputStream
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.ProxyInputStream
        <-- org.apache.commons.io.input.SwappedDataInputStream
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.Resource
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.util.StreamUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.spi.Configurator
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DemuxInputStream
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.KeepAliveInputStream
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipFile$BoundedInputStream
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.max.MaxHistory
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonFile
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.VirtualClassFileObject
    InputStreamReader *
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- fr.inria.lille.repair.Main
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.log4j.lf5.util.Resource
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.util.Util
    InterruptedIOException *
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.xml.DOMConfigurator
    LineNumberReader *
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
    ObjectInputStream *
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.junit.experimental.max.MaxHistory
        <-- spoon.support.SerializationModelStreamer
    ObjectOutputStream *
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.junit.experimental.max.MaxHistory
        <-- spoon.support.SerializationModelStreamer
    ObjectStreamClass *
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
    ObjectStreamException *
        <-- org.apache.log4j.Level
    OutputStream *
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.DemuxOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.commons.io.output.NullOutputStream
        <-- org.apache.commons.io.output.ProxyOutputStream
        <-- org.apache.commons.io.output.TeeOutputStream
        <-- org.apache.commons.io.output.ThresholdingOutputStream
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.ConsoleAppender$SystemErrStream
        <-- org.apache.log4j.ConsoleAppender$SystemOutStream
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.lf5.util.StreamUtils
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$1
        <-- org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.KeepAliveOutputStream
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.OutputStreamFunneler$Funnel
        <-- org.apache.tools.ant.util.TeeOutputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.MailPrintStream
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.results.PrintableResult
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.gui.SpoonModelTree$1
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualClassFileObject
    OutputStreamWriter *
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
    PipedInputStream *
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.util.LeadPipeInputStream
    PipedOutputStream *
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.util.LeadPipeInputStream
    PrintStream *
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.runner.BaseTestRunner
        <-- junit.runner.Version
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.ConsoleAppender$SystemErrStream
        <-- org.apache.log4j.ConsoleAppender$SystemOutStream
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.BuildLogger
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Get$VerboseProgress
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$AllHandler
        <-- org.apache.tools.ant.taskdefs.Length$ConditionHandler
        <-- org.apache.tools.ant.taskdefs.Length$EachHandler
        <-- org.apache.tools.ant.taskdefs.Length$Handler
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.MailPrintStream
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarInputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.internal.JUnitSystem
        <-- org.junit.internal.RealSystem
        <-- org.junit.internal.TextListener
        <-- org.junit.runner.JUnitCore
        <-- spoon.Launcher
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.filters.Foo
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.Foo
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.strings.Main
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.Main
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.support.OperatingSystem
    PrintWriter *
        <-- junit.framework.TestFailure
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.VectorWriter
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.compiler.batch.BatchCompiler
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.runner.notification.Failure
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    RandomAccessFile *
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipFile$BoundedInputStream
        <-- org.apache.tools.zip.ZipOutputStream
    Reader *
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- fr.inria.lille.repair.Main
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.input.ProxyReader
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.BaseParamFilterReader
        <-- org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.StringInputStream
        <-- org.apache.tools.ant.filters.StripJavaComments
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$1
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.Tokenizer
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.test.trycatch.Main
    Serializable *
        <-- org.apache.commons.io.IOCase
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.runner.Description
        <-- org.junit.runner.Result
        <-- org.junit.runner.notification.Failure
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.Tree
        <-- spoon.test.secondaryclasses.Secondary
    StreamCorruptedException *
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
    StringReader *
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.StringInputStream
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
    StringWriter *
        <-- junit.framework.TestFailure
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.runner.notification.Failure
    UnsupportedEncodingException *
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.util.Util
    Writer *
        <-- junit.framework.TestFailure
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.commons.io.output.NullWriter
        <-- org.apache.commons.io.output.ProxyWriter
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.helpers.SyslogQuietWriter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.NullWriter
        <-- org.apache.log4j.spi.VectorWriter
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.runner.notification.Failure
        <-- xxl.java.compiler.DynamicClassCompiler
java.lang *
    AbstractMethodError *
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
    Appendable *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.hamcrest.StringDescription
    ArithmeticException *
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
    ArrayIndexOutOfBoundsException *
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- org.apache.commons.io.HexDump
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.tools.ant.Main
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.util.Util
    AssertionError *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- junit.framework.AssertionFailedError
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.hamcrest.MatcherAssert
        <-- org.junit.Assert
        <-- org.junit.ComparisonFailure
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.ComparisonCriteria
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedException$ExpectedExceptionStatement
    Boolean *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.collector.BooleanCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.framework.Assert
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.condition.IsFalse
        <-- org.apache.tools.ant.taskdefs.condition.IsTrue
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.junit.Assume
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.prettyprinter.Validation$1
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.support.OperatingSystem
    Boolean[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Byte *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- junit.framework.Assert
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.hamcrest.core.IsInstanceOf
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Byte[] *
        <-- com.martiansoftware.jsap.JSAPResult
    CharSequence *
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.core.DescribedAs
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.runner.Description
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.intercession.IntercessionTest
        <-- xxl.java.compiler.VirtualSourceFileObject
    Character *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.Flagged
        <-- com.martiansoftware.jsap.FlaggedOption
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.UnknownFlagException
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.trace.collector.CharacterCollector
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- junit.framework.Assert
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.IsInstanceOf
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.prettyprinter.Validation
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.container.various.Table
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.StringLibrary
    Character[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Class *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.xml.JSAPXStream
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.filter.LocationFilter
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.BooleanCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CharacterCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.NumberCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.ifmetric.IfPosition
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$1
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        <-- junit.extensions.ActiveTestSuite
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.TestRunner
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.RendererSupport
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Taskdef
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ByteConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CharConstant
        <-- org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-- org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-- org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-- org.eclipse.jdt.internal.compiler.impl.LongConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ShortConstant
        <-- org.eclipse.jdt.internal.compiler.impl.StringConstant
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.CoreMatchers
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.Assert
        <-- org.junit.Test
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.categories.Categories$ExcludeCategory
        <-- org.junit.experimental.categories.Categories$IncludeCategory
        <-- org.junit.experimental.categories.Category
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.experimental.max.MaxCore$1$1
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.experimental.runners.Enclosed
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.ParametersSuppliedBy
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ComparisonCriteria
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.IgnoredBuilder
        <-- org.junit.internal.builders.IgnoredClassRunner
        <-- org.junit.internal.builders.JUnit3Builder
        <-- org.junit.internal.builders.JUnit4Builder
        <-- org.junit.internal.builders.NullBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.requests.ClassRequest
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.rules.ExpectedException
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Computer$1
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.AllTests
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.JUnit4
        <-- org.junit.runners.MethodSorters
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.Suite$SuiteClasses
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.Severity
        <-- spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder$1
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.Regular
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.E
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Pair
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.support.InvocationStopwatch
        <-- xxl.java.support.Singleton
    ClassCastException *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.junit.runners.Parameterized
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
    ClassFormatError *
        <-- org.apache.tools.ant.AntClassLoader
    ClassLoader *
        <-- com.martiansoftware.jsap.JSAP
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.junit.runner.Description
        <-- spoon.compiler.Environment
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.junit.CustomClassLoaderThreadFactory
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.JavaLibrary
    ClassNotFoundException *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.xml.JSAPXStream
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Taskdef
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.library.JavaLibrary
    Class[] *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- junit.framework.TestCase
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Project
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runners.model.RunnerBuilder
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.util.RtHelper
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.library.ClassLibrary
    CloneNotSupportedException *
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.Resource
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
    Cloneable *
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipLong
        <-- org.apache.tools.zip.ZipShort
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- spoon.support.DefaultCoreFactory
    Comparable *
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- org.apache.tools.ant.types.Resource
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerStats
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.reference.CtReference
        <-- spoon.test.generics.ComparableComparatorBug
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Pair
        <-- xxl.java.library.ClassLibrary
    Deprecated *
        <-- junit.framework.Assert
        <-- org.hamcrest.BaseMatcher
        <-- org.hamcrest.Matcher
        <-- org.hamcrest.core.Is
        <-- org.junit.Assert
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.FailedBefore
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.model.MultipleFailureException
        <-- org.junit.matchers.JUnitMatchers
        <-- org.junit.rules.TestWatchman
        <-- org.junit.runner.Request
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.model.FrameworkMethod
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.StandardEnvironment
        <-- spoon.test.prettyprinter.Validation
    Double *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$10
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$11
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$8
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$9
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$1
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- junit.framework.Assert
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-- org.eclipse.jdt.internal.compiler.util.FloatUtil
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.junit.Assert
        <-- org.junit.internal.InexactComparisonCriteria
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.initializers.InstanceInitializers$1
        <-- xxl.java.support.RangeMapper
    Double[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Enum *
        <-- fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.BugKind
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.runners.MethodSorters
        <-- spoon.OutputType
        <-- spoon.processing.Severity
        <-- spoon.processing.TraversalStrategy
        <-- spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.Regular
        <-- spoon.test.generics.GenericMethodCallWithExtend
        <-- spoon.test.secondaryclasses.E
    Enum[] *
        <-- spoon.support.processing.XmlProcessorProperties
    Error *
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.types.Resource
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- spoon.test.trycatch.TryCatchTest
    Exception *
        <-- com.martiansoftware.jsap.ExceptionMap
        <-- com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- junit.extensions.TestSetup
        <-- junit.extensions.TestSetup$1
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- junit.framework.TestCase
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.TestRunner
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.config.PropertySetterException
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.lf5.LogLevelFormatException
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTableColumnFormatException
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.DefaultRenderer
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.ErrorHandler
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.log4j.xml.UnrecognizedElementHandler
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.compiler.InvalidInputException
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.hamcrest.BaseDescription
        <-- org.junit.experimental.max.CouldNotReadCoreException
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.FailedBefore
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodRoadie$1$1
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.rules.ErrorCollector$1
        <-- org.junit.runner.Result$Listener
        <-- org.junit.runner.manipulation.NoTestsRemainException
        <-- org.junit.runner.notification.RunListener
        <-- org.junit.runner.notification.RunNotifier$1
        <-- org.junit.runner.notification.RunNotifier$2
        <-- org.junit.runner.notification.RunNotifier$3
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$5
        <-- org.junit.runner.notification.RunNotifier$6
        <-- org.junit.runner.notification.RunNotifier$7
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.NullRunListener
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.support.Singleton
    ExceptionInInitializerError *
        <-- org.apache.tools.ant.XmlLogger
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    Exception[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Float *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- junit.framework.Assert
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.FloatCache
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-- org.eclipse.jdt.internal.compiler.util.FloatUtil
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.junit.Assert
        <-- org.junit.internal.InexactComparisonCriteria
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Float[] *
        <-- com.martiansoftware.jsap.JSAPResult
    IllegalAccessException *
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.TestClass
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    IllegalArgumentException *
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- junit.extensions.RepeatedTest
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOCase
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.NotFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SizeFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.CyclicBuffer
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.input.InputRequest
        <-- org.apache.tools.ant.input.MultipleChoiceInputRequest
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.CustomMatcher
        <-- org.hamcrest.CustomTypeSafeMatcher
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runner.Description
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.TestClass
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- xxl.java.library.FileLibrary
    IllegalStateException *
        <-- com.martiansoftware.jsap.Parameter
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.RollingCalendar
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.FileScanner
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.rules.TemporaryFolder
        <-- spoon.Launcher
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.template.TemplateMatcher
        <-- xxl.java.compiler.DynamicCompilationException
    IllegalThreadStateException *
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
    IndexOutOfBoundsException *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- xxl.java.container.various.Bag
    InheritableThreadLocal *
        <-- org.apache.commons.io.input.DemuxInputStream
        <-- org.apache.commons.io.output.DemuxOutputStream
        <-- org.apache.log4j.helpers.ThreadLocalMap
    InstantiationException *
        <-- junit.framework.TestSuite
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.Assignments
        <-- spoon.template.TemplateMatcher
    Integer *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$1
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$3
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$4
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$5
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$6
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$7
        <-- fr.inria.lille.repair.infinitel.loop.implant.NullLoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.framework.Assert
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.SendEmail
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.Tstamp$Unit
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.types.FlexInteger
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.model.MultipleFailureException
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$1
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.control.Ifs
        <-- spoon.test.enums.OpCode$1
        <-- spoon.test.enums.OpCode$2
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.NumberLibrary$1
        <-- xxl.java.support.RangeMapper
    Integer[] *
        <-- com.martiansoftware.jsap.JSAPResult
    InterruptedException *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- junit.extensions.ActiveTestSuite
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$1
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- xxl.java.junit.TestSuiteExecution
    Iterable *
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.CoreMatchers
        <-- org.hamcrest.Description
        <-- org.hamcrest.Description$NullDescription
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
        <-- org.junit.rules.RunRules
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.ParentRunner
        <-- spoon.reflect.code.CtStatementList
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.library.NumberLibrary
    LinkageError *
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.TaskAdapter
    Long *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$2
        <-- junit.framework.Assert
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.WaitFor$Unit
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.junit.Assert
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.max.MaxHistory$TestComparator
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.support.InvocationStopwatch
    Long[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Math *
        <-- junit.framework.Assert
        <-- junit.framework.ComparisonCompactor
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.Assert
        <-- org.junit.ComparisonFailure$ComparisonCompactor
        <-- xxl.java.container.various.Bag
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.RangeMapper
    NegativeArraySizeException *
        <-- org.apache.log4j.AsyncAppender
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
    NoClassDefFoundError *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.xml.JSAPXStream
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Taskdef
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.util.Messages
    NoSuchFieldError *
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter$1
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.StandardEnvironment$1
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler$1
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator$1
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$1
    NoSuchFieldException *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
    NoSuchMethodException *
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.runners.TestClass
        <-- spoon.support.util.RtHelper
        <-- xxl.java.library.ClassLibrary
    NullPointerException *
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.IOCase
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- spoon.support.visitor.SignaturePrinter
    Number *
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.trace.collector.NumberCollector
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$1
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
    NumberFormatException *
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.util.FloatUtil
    Object *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.DefaultSource
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.ExceptionMap
        <-- com.martiansoftware.jsap.Flagged
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.PropertyStringParser
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.UnknownFlagException
        <-- com.martiansoftware.jsap.ant.DefaultValue
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.ant.ParserProperty
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.StringStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.Property
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.OperatorVisitor
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.common.Fixer
        <-- fr.inria.lille.repair.common.TestResult
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelConfiguration
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$1
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$10
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$11
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$12
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$13
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$14
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$15
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$2
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$3
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$4
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$5
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$6
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$7
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$8
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$9
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.ConstantType
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.ifmetric.IfPosition
        <-- fr.inria.lille.repair.nopol.patch.Patch
        <-- fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.SuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.SuspiciousStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$1
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicConfiguration
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.jpf.JPFUtil
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.BasicValueReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- fr.inria.lille.repair.symbolic.test.TestExecutor
        <-- junit.extensions.ActiveTestSuite
        <-- junit.extensions.TestDecorator
        <-- junit.extensions.TestSetup$1
        <-- junit.extensions.package-info
        <-- junit.framework.Assert
        <-- junit.framework.AssertionFailedError
        <-- junit.framework.ComparisonCompactor
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestCaseFacade
        <-- junit.framework.Protectable
        <-- junit.framework.Test
        <-- junit.framework.TestCase
        <-- junit.framework.TestFailure
        <-- junit.framework.TestListener
        <-- junit.framework.TestResult
        <-- junit.framework.TestResult$1
        <-- junit.framework.TestSuite
        <-- junit.framework.package-info
        <-- junit.runner.BaseTestRunner
        <-- junit.runner.TestRunListener
        <-- junit.runner.Version
        <-- junit.runner.package-info
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- junit.textui.package-info
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.FileCleaner
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
        <-- org.apache.commons.io.FileDeleteStrategy
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOCase
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.ConditionalFileFilter
        <-- org.apache.commons.io.filefilter.FalseFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.TrueFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.commons.io.input.DemuxInputStream
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.DemuxOutputStream
        <-- org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.BasicConfigurator
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultCategoryFactory
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.Layout
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.NDC$DiagnosticContext
        <-- org.apache.log4j.NameValue
        <-- org.apache.log4j.Priority
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.ProvisionNode
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
        <-- org.apache.log4j.chainsaw.ControlPanel$6
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$1
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertyGetter$PropertyCallback
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.CyclicBuffer
        <-- org.apache.log4j.helpers.FormattingInfo
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.NullEnumeration
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.ThreadLocalMap
        <-- org.apache.log4j.helpers.Transform
        <-- org.apache.log4j.helpers.UtilLoggingLevel
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.jmx.MethodUnion
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.Log4JLogRecord
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.LogRecordFilter
        <-- org.apache.log4j.lf5.PassingLogRecordFilter
        <-- org.apache.log4j.lf5.StartLogFactor5
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogFileParser$1
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.util.Resource
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.util.StreamUtils
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$16
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$17
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$18
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$19
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$20
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$21
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$22
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$23
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$24
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$25
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$5
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$6
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.LogTableModel
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.DefaultEvaluator
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.or.DefaultRenderer
        <-- org.apache.log4j.or.ObjectRenderer
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.FileDatePatternConverter
        <-- org.apache.log4j.pattern.FormattingInfo
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.pattern.LiteralPatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment
        <-- org.apache.log4j.pattern.PatternConverter
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PatternParser$ReadOnlyMap
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.rewrite.RewritePolicy
        <-- org.apache.log4j.spi.AppenderAttachable
        <-- org.apache.log4j.spi.Configurator
        <-- org.apache.log4j.spi.DefaultRepositorySelector
        <-- org.apache.log4j.spi.ErrorCode
        <-- org.apache.log4j.spi.ErrorHandler
        <-- org.apache.log4j.spi.Filter
        <-- org.apache.log4j.spi.HierarchyEventListener
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggerFactory
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.spi.RendererSupport
        <-- org.apache.log4j.spi.RepositorySelector
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.spi.ThrowableRenderer
        <-- org.apache.log4j.spi.ThrowableRendererSupport
        <-- org.apache.log4j.spi.TriggeringEventEvaluator
        <-- org.apache.log4j.spi.VectorWriter
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.DOMConfigurator$ParseAction
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.log4j.xml.UnrecognizedElementHandler
        <-- org.apache.log4j.xml.XMLLayout
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.BuildEvent
        <-- org.apache.tools.ant.BuildListener
        <-- org.apache.tools.ant.BuildLogger
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.DemuxOutputStream$1
        <-- org.apache.tools.ant.DemuxOutputStream$BufferInfo
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Diagnostics$1
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.DynamicAttribute
        <-- org.apache.tools.ant.DynamicAttributeNS
        <-- org.apache.tools.ant.DynamicConfigurator
        <-- org.apache.tools.ant.DynamicConfiguratorNS
        <-- org.apache.tools.ant.DynamicElement
        <-- org.apache.tools.ant.DynamicElementNS
        <-- org.apache.tools.ant.Executor
        <-- org.apache.tools.ant.FileScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$1
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$2
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.MagicNames
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Project$AntRefTable
        <-- org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.SubBuildListener
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.TaskContainer
        <-- org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.XmlLogger$1
        <-- org.apache.tools.ant.XmlLogger$TimedElement
        <-- org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContains$Contains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.ReplaceTokens$Token
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.StripLineComments$Comment
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$Filter
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.DefaultExecutor
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.InputHandler
        <-- org.apache.tools.ant.input.InputRequest
        <-- org.apache.tools.ant.input.MultipleChoiceInputRequest
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Ant$TargetElement
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$1
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$1
        <-- org.apache.tools.ant.taskdefs.Definer$ResourceStack
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Exit$1
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner$BufferLine
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DnameParam
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Get$Base64Converter
        <-- org.apache.tools.ant.taskdefs.Get$DownloadProgress
        <-- org.apache.tools.ant.taskdefs.Get$NullProgress
        <-- org.apache.tools.ant.taskdefs.Get$VerboseProgress
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Jar$1
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$1
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletParam
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$Html
        <-- org.apache.tools.ant.taskdefs.Javadoc$LinkArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$PackageName
        <-- org.apache.tools.ant.taskdefs.Javadoc$SourceFile
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$1
        <-- org.apache.tools.ant.taskdefs.Length$Handler
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$MyAntTypeDefinition
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MacroInstance$Element
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$1
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskRunnable
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PathConvert$MapEntry
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$NestedString
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.Sequential
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Touch$1
        <-- org.apache.tools.ant.taskdefs.Touch$2
        <-- org.apache.tools.ant.taskdefs.Touch$DateFormatFactory
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Tstamp$Unit
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.WaitFor$Unit
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison2
        <-- org.apache.tools.ant.taskdefs.XSLTLogger
        <-- org.apache.tools.ant.taskdefs.XSLTLoggerAware
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$1
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$OutputProperty
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Param
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.Zip$ArchiveState
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.condition.And
        <-- org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.taskdefs.condition.Contains
        <-- org.apache.tools.ant.taskdefs.condition.Equals
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.Not
        <-- org.apache.tools.ant.taskdefs.condition.Or
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsUser
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.cvslib.RCSFile
        <-- org.apache.tools.ant.taskdefs.email.EmailAddress
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Assertions$BaseAssertion
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.Commandline$Marker
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.DirSet
        <-- org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.Environment
        <-- org.apache.tools.ant.types.Environment$Variable
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FileList$FileName
        <-- org.apache.tools.ant.types.FileSet
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.FilterSet$Filter
        <-- org.apache.tools.ant.types.FilterSet$FiltersFile
        <-- org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.FlexInteger
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Mapper$MapperType
        <-- org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.Parameterizable
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.Path$PathElement
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PatternSet$NameEntry
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$1
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.PropertySet$PropertyRef
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.types.ResourceFactory
        <-- org.apache.tools.ant.types.ResourceLocation
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.ExtendFileSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorScanner
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.Cache
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- org.apache.tools.ant.util.CollectionUtils
        <-- org.apache.tools.ant.util.CollectionUtils$CompoundEnumeration
        <-- org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DOMUtils
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.ant.util.FileNameMapper
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.FlatFileNameMapper
        <-- org.apache.tools.ant.util.GlobPatternMapper
        <-- org.apache.tools.ant.util.IdentityMapper
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.LazyHashtable
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.MergingMapper
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.OutputStreamFunneler$1
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.SourceFileScanner
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.TaskLogger
        <-- org.apache.tools.ant.util.TimeoutObserver
        <-- org.apache.tools.ant.util.Tokenizer
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.ant.util.WeakishReference$HardReference
        <-- org.apache.tools.ant.util.facade.FacadeTaskHelper
        <-- org.apache.tools.ant.util.facade.ImplementationSpecificArgument
        <-- org.apache.tools.ant.util.regexp.Regexp
        <-- org.apache.tools.ant.util.regexp.RegexpMatcher
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.apache.tools.ant.util.regexp.RegexpUtil
        <-- org.apache.tools.bzip2.BZip2Constants
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream$1
        <-- org.apache.tools.bzip2.CBZip2OutputStream$StackElem
        <-- org.apache.tools.bzip2.CRC
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarConstants
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.tar.TarUtils
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.JarMarker
        <-- org.apache.tools.zip.UnixStat
        <-- org.apache.tools.zip.UnrecognizedExtraField
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipExtraField
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipLong
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.apache.tools.zip.ZipShort
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.JDTCompilerAdapter$1
        <-- org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.core.compiler.CompilationProgress
        <-- org.eclipse.jdt.core.compiler.IProblem
        <-- org.eclipse.jdt.core.compiler.batch.BatchCompiler
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFile$1
        <-- org.eclipse.jdt.internal.compiler.ClassFile$2
        <-- org.eclipse.jdt.internal.compiler.ClassFilePool
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.CompilationResult$1
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.Compiler$1
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$2
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$3
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
        <-- org.eclipse.jdt.internal.compiler.ICompilerRequestor
        <-- org.eclipse.jdt.internal.compiler.IDebugRequestor
        <-- org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        <-- org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.IElementInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression$1
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorIds
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileFinder
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$2
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        <-- org.eclipse.jdt.internal.compiler.batch.Main$4
        <-- org.eclipse.jdt.internal.compiler.batch.Main$5
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        <-- org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.CachedIndexEntry
        <-- org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.FloatCache
        <-- org.eclipse.jdt.internal.compiler.codegen.IntegerCache
        <-- org.eclipse.jdt.internal.compiler.codegen.Label
        <-- org.eclipse.jdt.internal.compiler.codegen.LongCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ObjectCache
        <-- org.eclipse.jdt.internal.compiler.codegen.Opcodes
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$FramePosition
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        <-- org.eclipse.jdt.internal.compiler.env.AccessRestriction
        <-- org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryField
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        <-- org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.env.IDependent
        <-- org.eclipse.jdt.internal.compiler.env.IGenericField
        <-- org.eclipse.jdt.internal.compiler.env.IGenericMethod
        <-- org.eclipse.jdt.internal.compiler.env.IGenericType
        <-- org.eclipse.jdt.internal.compiler.env.INameEnvironment
        <-- org.eclipse.jdt.internal.compiler.env.ISourceField
        <-- org.eclipse.jdt.internal.compiler.env.ISourceImport
        <-- org.eclipse.jdt.internal.compiler.env.ISourceMethod
        <-- org.eclipse.jdt.internal.compiler.env.ISourceType
        <-- org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ByteConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CharConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerStats
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-- org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-- org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-- org.eclipse.jdt.internal.compiler.impl.LongConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.impl.ShortConstant
        <-- org.eclipse.jdt.internal.compiler.impl.StringConstant
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.ExtraCompilerModifiers
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency
        <-- org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReasons
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$1
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        <-- org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TagBits
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeIds
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-- org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream$Token
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        <-- org.eclipse.jdt.internal.compiler.util.FloatUtil
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfLong
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.eclipse.jdt.internal.compiler.util.ObjectVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.SuffixConstants
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.eclipse.jdt.internal.compiler.util.Util$1
        <-- org.eclipse.jdt.internal.compiler.util.Util$Displayable
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.BaseMatcher
        <-- org.hamcrest.Condition
        <-- org.hamcrest.Condition$1
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$Step
        <-- org.hamcrest.CoreMatchers
        <-- org.hamcrest.Description
        <-- org.hamcrest.Description$NullDescription
        <-- org.hamcrest.DiagnosingMatcher
        <-- org.hamcrest.Factory
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.Matcher
        <-- org.hamcrest.MatcherAssert
        <-- org.hamcrest.SelfDescribing
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.CombinableMatcher$CombinableBothMatcher
        <-- org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.core.SubstringMatcher
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.hamcrest.internal.SelfDescribingValue
        <-- org.hamcrest.internal.SelfDescribingValueIterator
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Assert
        <-- org.junit.Assume
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.ComparisonFailure
        <-- org.junit.ComparisonFailure$ComparisonCompactor
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.categories.Categories$ExcludeCategory
        <-- org.junit.experimental.categories.Categories$IncludeCategory
        <-- org.junit.experimental.categories.Category
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$1
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.max.MaxHistory$TestComparator
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.experimental.results.ResultMatchers
        <-- org.junit.experimental.results.ResultMatchers$1
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.experimental.theories.DataPoint
        <-- org.junit.experimental.theories.DataPoints
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.ParameterSupplier
        <-- org.junit.experimental.theories.ParametersSuppliedBy
        <-- org.junit.experimental.theories.PotentialAssignment
        <-- org.junit.experimental.theories.PotentialAssignment$1
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        <-- org.junit.experimental.theories.Theory
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$1
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.experimental.theories.suppliers.TestedOn
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.ComparisonCriteria
        <-- org.junit.internal.ExactComparisonCriteria
        <-- org.junit.internal.InexactComparisonCriteria
        <-- org.junit.internal.JUnitSystem
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.MethodSorter$1
        <-- org.junit.internal.MethodSorter$2
        <-- org.junit.internal.RealSystem
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.requests.ClassRequest
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.requests.SortingRequest
        <-- org.junit.internal.requests.package-info
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$1
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$1
        <-- org.junit.internal.runners.JUnit4ClassRunner$2
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodRoadie$1$1
        <-- org.junit.internal.runners.MethodRoadie$2
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.internal.runners.model.ReflectiveCallable
        <-- org.junit.internal.runners.package-info
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.internal.runners.statements.InvokeMethod
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.matchers.JUnitMatchers
        <-- org.junit.matchers.package-info
        <-- org.junit.package-info
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ErrorCollector$1
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
        <-- org.junit.rules.ExternalResource
        <-- org.junit.rules.MethodRule
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.RunRules
        <-- org.junit.rules.TestRule
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.rules.TestWatchman
        <-- org.junit.rules.Timeout
        <-- org.junit.rules.Verifier
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Describable
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.Result
        <-- org.junit.runner.Result$1
        <-- org.junit.runner.Result$Listener
        <-- org.junit.runner.RunWith
        <-- org.junit.runner.Runner
        <-- org.junit.runner.manipulation.Filter
        <-- org.junit.runner.manipulation.Filter$1
        <-- org.junit.runner.manipulation.Filter$2
        <-- org.junit.runner.manipulation.Filterable
        <-- org.junit.runner.manipulation.Sortable
        <-- org.junit.runner.manipulation.Sorter
        <-- org.junit.runner.manipulation.Sorter$1
        <-- org.junit.runner.manipulation.package-info
        <-- org.junit.runner.notification.Failure
        <-- org.junit.runner.notification.RunListener
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runner.notification.package-info
        <-- org.junit.runner.package-info
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.BlockJUnit4ClassRunner$1
        <-- org.junit.runners.MethodSorters
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$1
        <-- org.junit.runners.ParentRunner$3
        <-- org.junit.runners.ParentRunner$4
        <-- org.junit.runners.Suite
        <-- org.junit.runners.Suite$SuiteClasses
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.FrameworkMethod$1
        <-- org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.RunnerScheduler
        <-- org.junit.runners.model.Statement
        <-- org.junit.runners.model.TestClass
        <-- org.junit.runners.package-info
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.SpoonTask
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonFile
        <-- spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.FactoryAccessor
        <-- spoon.processing.FileGenerator
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.Processor
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.Property
        <-- spoon.processing.Severity
        <-- spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.ModelStreamer
        <-- spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtBreak
        <-- spoon.reflect.code.CtCFlowBreak
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtLiteral
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtOperatorAssignment
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSuperAccess
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.code.CtThisAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnnotationType
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtEnum
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtInterface
        <-- spoon.reflect.declaration.CtMethod
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter$1
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.StandardEnvironment$1
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler$1
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonModelTree$2
        <-- spoon.support.gui.SpoonModelTree$3
        <-- spoon.support.gui.SpoonModelTree$4
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$1
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$1
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator$1
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$1
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$1
        <-- spoon.support.template.Parameters$2
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.SortedList
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.Template
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.template.TemplateMatcher$2
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.SampleClass
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotParam
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Bound
        <-- spoon.test.annotation.Main
        <-- spoon.test.annotation.PersistenceProperty
        <-- spoon.test.api.APITest
        <-- spoon.test.api.APITest$1$1
        <-- spoon.test.arrays.ArrayClass
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.control.DoWhile
        <-- spoon.test.control.Fors
        <-- spoon.test.control.Ifs
        <-- spoon.test.control.Ifs$Token
        <-- spoon.test.ctCase.ClassWithSwitchExample
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.OpCode$1
        <-- spoon.test.enums.OpCode$2
        <-- spoon.test.enums.Performable
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.BCUBug20140402
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.fieldaccesses.InnerClassThisAccess
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$1InnerClass
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
        <-- spoon.test.fieldaccesses.InternalSuperCall
        <-- spoon.test.fieldaccesses.Mouse
        <-- spoon.test.fieldaccesses.TargetedAccessPosition
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.filters.Foo
        <-- spoon.test.generics.ACLass
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.ClassThatDefinesANewTypeArgument
        <-- spoon.test.generics.ComparableComparator
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericMethodCallWithExtend
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.InstanceOfMapEntryGeneric
        <-- spoon.test.generics.SimilarSignatureMethodes
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.initializers.InstanceInitializers$1
        <-- spoon.test.initializers.InternalClassStaticFieldInit
        <-- spoon.test.initializers.InternalClassStaticFieldInit$InternalClass
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeExample
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.MultipleInternalClass
        <-- spoon.test.limits.StaticClassAnon
        <-- spoon.test.limits.StaticClassAnon$1StaticIntern
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$1
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.Foo
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterDependency
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.prettyprinter.Validation$1
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.SampleForInsertBefore
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.Bar
        <-- spoon.test.replace.Foo
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.AnonymousClass$1
        <-- spoon.test.secondaryclasses.AnonymousClass$2
        <-- spoon.test.secondaryclasses.AnonymousClass$I
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalInterf
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.E
        <-- spoon.test.secondaryclasses.I
        <-- spoon.test.secondaryclasses.K
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.secondaryclasses.Secondary
        <-- spoon.test.secondaryclasses.Test
        <-- spoon.test.secondaryclasses.TopLevel
        <-- spoon.test.secondaryclasses.TopLevel$InnerClass
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.Main
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.C1
        <-- spoon.test.template.SuperClass
        <-- spoon.test.template.SuperTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        <-- spoon.test.template._Interf_
        <-- spoon.test.template._TargetType_
        <-- spoon.test.template._Type_
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        <-- spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
        <-- spoon.test.visibility.packageprotected.NonAccessibleInterf
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaList$1
        <-- xxl.java.container.classic.MetaList$2
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaMap$1
        <-- xxl.java.container.classic.MetaMap$2
        <-- xxl.java.container.classic.MetaMap$3
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.classic.MetaSet$1
        <-- xxl.java.container.classic.MetaSet$2
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.container.various.Pair
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.CustomClassLoaderThreadFactory
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.NumberLibrary$1
        <-- xxl.java.library.ObjectLibrary
        <-- xxl.java.library.ObjectLibrary$1
        <-- xxl.java.library.ObjectLibrary$2
        <-- xxl.java.library.ObjectLibrary$3
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.Factory
        <-- xxl.java.support.Function
        <-- xxl.java.support.GlobalToggle
        <-- xxl.java.support.InvocationStopwatch
        <-- xxl.java.support.Lockable
        <-- xxl.java.support.Observable
        <-- xxl.java.support.Observer
        <-- xxl.java.support.OperatingSystem
        <-- xxl.java.support.RangeMapper
        <-- xxl.java.support.Singleton
    Object[] *
        <-- junit.runner.BaseTestRunner
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.hamcrest.core.DescribedAs
        <-- org.junit.runners.Parameterized
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- xxl.java.container.classic.MetaCollection
    Package *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
    Package[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Process *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
    ProcessBuilder *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    Runnable *
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogFileParser$1
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskRunnable
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$1
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodRoadie$2
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$1
        <-- org.junit.runners.ParentRunner$3
        <-- org.junit.runners.model.RunnerScheduler
        <-- spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$1
        <-- xxl.java.junit.CustomClassLoaderThreadFactory
    Runtime *
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.ReadManager
    RuntimeException *
        <-- com.martiansoftware.jsap.UnspecifiedParameterException
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- junit.framework.JUnit4TestCaseFacade
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo$AssertionFailedException
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.hamcrest.StringDescription
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.runner.Request
        <-- org.junit.runner.notification.StoppedByUserException
        <-- org.junit.runners.Suite
        <-- org.junit.runners.model.TestClass
        <-- spoon.SpoonException
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.Timer
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.trycatch.TryCatchTest
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.support.Singleton
    RuntimePermission *
        <-- org.apache.tools.ant.types.Permissions$MySM
    SafeVarargs *
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.test.generics.GenericMethodCallWithExtend
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.various.Bag
    SecurityException *
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.ExitException
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.junit.internal.runners.TestClass
    SecurityManager *
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- spoon.test.prettyprinter.Validation
    Short *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- junit.framework.Assert
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.IsInstanceOf
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Short[] *
        <-- com.martiansoftware.jsap.JSAPResult
    StackTraceElement *
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- xxl.java.junit.TestCasesListener
    String *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.ExceptionMap
        <-- com.martiansoftware.jsap.Flagged
        <-- com.martiansoftware.jsap.FlaggedOption
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.IllegalMultipleDeclarationException
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.PropertyStringParser
        <-- com.martiansoftware.jsap.QualifiedSwitch
        <-- com.martiansoftware.jsap.RequiredParameterMissingException
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.StringParser
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.SyntaxException
        <-- com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.UnknownFlagException
        <-- com.martiansoftware.jsap.UnspecifiedParameterException
        <-- com.martiansoftware.jsap.ant.DefaultValue
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.ant.ParserProperty
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.StringStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.FlaggedConfig
        <-- com.martiansoftware.jsap.xml.FlaggedOptionConfig
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.JSAPXStream
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.Property
        <-- com.martiansoftware.jsap.xml.QualifiedSwitchConfig
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.SwitchConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- com.martiansoftware.jsap.xml.UnflaggedOptionConfig
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.Parameter
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.ParameterLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.ifmetric.IfPosition
        <-- fr.inria.lille.repair.nopol.patch.Patch
        <-- fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- fr.inria.lille.repair.nopol.patch.StringPatch
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.SuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.jpf.JPFUtil
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.extensions.ActiveTestSuite
        <-- junit.extensions.RepeatedTest
        <-- junit.extensions.TestDecorator
        <-- junit.framework.Assert
        <-- junit.framework.AssertionFailedError
        <-- junit.framework.ComparisonCompactor
        <-- junit.framework.ComparisonFailure
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestCaseFacade
        <-- junit.framework.TestCase
        <-- junit.framework.TestFailure
        <-- junit.framework.TestSuite
        <-- junit.framework.TestSuite$1
        <-- junit.runner.BaseTestRunner
        <-- junit.runner.TestRunListener
        <-- junit.runner.Version
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.apache.commons.io.CopyUtils
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.DirectoryWalker$CancelException
        <-- org.apache.commons.io.EndianUtils
        <-- org.apache.commons.io.FileCleaner
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
        <-- org.apache.commons.io.FileDeleteStrategy
        <-- org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOCase
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.FalseFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.NotFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SizeFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.TrueFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.commons.io.input.ClassLoaderObjectInputStream
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.input.SwappedDataInputStream
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.commons.io.output.NullWriter
        <-- org.apache.commons.io.output.ProxyWriter
        <-- org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.BasicConfigurator
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultCategoryFactory
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.EnhancedPatternLayout
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.Layout
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.NDC$DiagnosticContext
        <-- org.apache.log4j.NameValue
        <-- org.apache.log4j.PatternLayout
        <-- org.apache.log4j.Priority
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.PropertyWatchdog
        <-- org.apache.log4j.RollingCalendar
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.SimpleLayout
        <-- org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.TTCCLayout
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertyGetter$PropertyCallback
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.config.PropertySetterException
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.CyclicBuffer
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.helpers.FormattingInfo
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$CategoryPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LiteralPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$NamedPatternConverter
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.helpers.SyslogQuietWriter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.helpers.Transform
        <-- org.apache.log4j.helpers.UtilLoggingLevel
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.Log4JLogRecord
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.LogLevelFormatException
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.StartLogFactor5
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.util.Resource
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$24
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$5
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$6
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.LogTableColumnFormatException
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SMTPAppender$1
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.DefaultRenderer
        <-- org.apache.log4j.or.ObjectRenderer
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.BridgePatternParser
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.ClassNamePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.log4j.pattern.FileDatePatternConverter
        <-- org.apache.log4j.pattern.FileLocationPatternConverter
        <-- org.apache.log4j.pattern.FullLocationPatternConverter
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LineLocationPatternConverter
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.pattern.LiteralPatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.LoggerPatternConverter
        <-- org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.MessagePatternConverter
        <-- org.apache.log4j.pattern.MethodLocationPatternConverter
        <-- org.apache.log4j.pattern.NDCPatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$DropElementAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$MaxElementAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment
        <-- org.apache.log4j.pattern.NamePatternConverter
        <-- org.apache.log4j.pattern.PatternConverter
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp
        <-- org.apache.log4j.pattern.SequenceNumberPatternConverter
        <-- org.apache.log4j.pattern.ThreadPatternConverter
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.AppenderAttachable
        <-- org.apache.log4j.spi.Configurator
        <-- org.apache.log4j.spi.ErrorHandler
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggerFactory
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.RootCategory
        <-- org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.spi.ThrowableRenderer
        <-- org.apache.log4j.spi.VectorWriter
        <-- org.apache.log4j.varia.DenyAllFilter
        <-- org.apache.log4j.varia.ExternallyRolledFileAppender
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.varia.StringMatchFilter
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.log4j.xml.XMLLayout
        <-- org.apache.log4j.xml.XMLWatchdog
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.BuildEvent
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Diagnostics$1
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.DynamicAttribute
        <-- org.apache.tools.ant.DynamicAttributeNS
        <-- org.apache.tools.ant.DynamicElement
        <-- org.apache.tools.ant.DynamicElementNS
        <-- org.apache.tools.ant.Executor
        <-- org.apache.tools.ant.ExitException
        <-- org.apache.tools.ant.ExitStatusException
        <-- org.apache.tools.ant.FileScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.MagicNames
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.UnsupportedAttributeException
        <-- org.apache.tools.ant.UnsupportedElementException
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.XmlLogger$TimedElement
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContains$Contains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.ReplaceTokens$Token
        <-- org.apache.tools.ant.filters.StringInputStream
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.StripLineComments$Comment
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsString
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$Filter
        <-- org.apache.tools.ant.filters.TokenFilter$IgnoreBlank
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceString
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$Trim
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.DefaultExecutor
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.InputRequest
        <-- org.apache.tools.ant.input.MultipleChoiceInputRequest
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Ant$Reference
        <-- org.apache.tools.ant.taskdefs.Ant$TargetElement
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Available$FileDir
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$Format
        <-- org.apache.tools.ant.taskdefs.Definer$OnError
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Echo$EchoLevel
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteOn$FileDirBoth
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$AddAsisRemove
        <-- org.apache.tools.ant.taskdefs.FixCRLF$CrLf
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner$BufferLine
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DnameParam
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Get$Base64Converter
        <-- org.apache.tools.ant.taskdefs.Get$VerboseProgress
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Jar$1
        <-- org.apache.tools.ant.taskdefs.Jar$FilesetManifestConfig
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javac$ImplementationSpecificArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$1
        <-- org.apache.tools.ant.taskdefs.Javadoc$AccessType
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletParam
        <-- org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$Html
        <-- org.apache.tools.ant.taskdefs.Javadoc$JavadocOutputStream
        <-- org.apache.tools.ant.taskdefs.Javadoc$LinkArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$PackageName
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$AllHandler
        <-- org.apache.tools.ant.taskdefs.Length$EachHandler
        <-- org.apache.tools.ant.taskdefs.Length$FileMode
        <-- org.apache.tools.ant.taskdefs.Length$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.Length$When
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.ManifestTask$Mode
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PathConvert$MapEntry
        <-- org.apache.tools.ant.taskdefs.PathConvert$TargetOs
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer$ProcessDestroyerImpl
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.Recorder$ActionChoices
        <-- org.apache.tools.ant.taskdefs.Recorder$VerbosityLevelChoices
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Redirector$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$NestedString
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Rmic$ImplementationSpecificArgument
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$DelimiterType
        <-- org.apache.tools.ant.taskdefs.SQLExec$OnError
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.Tar$TarLongFileMode
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.Taskdef
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Touch$2
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Tstamp$Unit
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.WaitFor$Unit
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison
        <-- org.apache.tools.ant.taskdefs.XSLTLogger
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$OutputProperty
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Param
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.Zip$Duplicate
        <-- org.apache.tools.ant.taskdefs.Zip$WhenEmpty
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.JavacExternal
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        <-- org.apache.tools.ant.taskdefs.condition.Contains
        <-- org.apache.tools.ant.taskdefs.condition.Equals
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.IsFalse
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.IsSet
        <-- org.apache.tools.ant.taskdefs.condition.IsTrue
        <-- org.apache.tools.ant.taskdefs.condition.Not
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsUser
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.cvslib.RCSFile
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.EmailAddress
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.EmailTask$Encoding
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Assertions$BaseAssertion
        <-- org.apache.tools.ant.types.Assertions$DisabledAssertion
        <-- org.apache.tools.ant.types.Assertions$EnabledAssertion
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.Commandline$Marker
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.Environment
        <-- org.apache.tools.ant.types.Environment$Variable
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FileList$FileName
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.FilterSet$Filter
        <-- org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.FlexInteger
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Mapper$MapperType
        <-- org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.Path$PathElement
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PatternSet$NameEntry
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.PropertySet$BuiltinPropertySetName
        <-- org.apache.tools.ant.types.PropertySet$PropertyRef
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.types.ResourceFactory
        <-- org.apache.tools.ant.types.ResourceLocation
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector$TimeComparisons
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.NotSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector$FilePresence
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorScanner
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.types.selectors.SizeSelector$ByteUnits
        <-- org.apache.tools.ant.types.selectors.SizeSelector$SizeComparisons
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.TypeSelector$FileType
        <-- org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$AlgorithmName
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$CacheName
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$ComparatorName
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DOMUtils
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.ant.util.FileNameMapper
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.FlatFileNameMapper
        <-- org.apache.tools.ant.util.GlobPatternMapper
        <-- org.apache.tools.ant.util.IdentityMapper
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.MergingMapper
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.PackageNameMapper
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.SourceFileScanner
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.TaskLogger
        <-- org.apache.tools.ant.util.Tokenizer
        <-- org.apache.tools.ant.util.UnPackageNameMapper
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.ant.util.facade.FacadeTaskHelper
        <-- org.apache.tools.ant.util.facade.ImplementationSpecificArgument
        <-- org.apache.tools.ant.util.regexp.Regexp
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.ant.util.regexp.RegexpMatcher
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.mail.ErrorInQuitException
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.MailPrintStream
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarConstants
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.JarMarker
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.JDTCompilerAdapter$1
        <-- org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.core.compiler.CompilationProgress
        <-- org.eclipse.jdt.core.compiler.IProblem
        <-- org.eclipse.jdt.core.compiler.InvalidInputException
        <-- org.eclipse.jdt.core.compiler.batch.BatchCompiler
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.IElementInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileFinder
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$2
        <-- org.eclipse.jdt.internal.compiler.batch.Main$5
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        <-- org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.FloatCache
        <-- org.eclipse.jdt.internal.compiler.codegen.IntegerCache
        <-- org.eclipse.jdt.internal.compiler.codegen.LongCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ObjectCache
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        <-- org.eclipse.jdt.internal.compiler.env.AccessRestriction
        <-- org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo$AssertionFailedException
        <-- org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ByteConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CharConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-- org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-- org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-- org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-- org.eclipse.jdt.internal.compiler.impl.LongConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ShortConstant
        <-- org.eclipse.jdt.internal.compiler.impl.StringConstant
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-- org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream$Token
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfLong
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.eclipse.jdt.internal.compiler.util.ObjectVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.SuffixConstants
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.eclipse.jdt.internal.compiler.util.Util$1
        <-- org.eclipse.jdt.internal.compiler.util.Util$Displayable
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.BaseMatcher
        <-- org.hamcrest.Condition
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$NotMatched
        <-- org.hamcrest.CoreMatchers
        <-- org.hamcrest.CustomMatcher
        <-- org.hamcrest.CustomTypeSafeMatcher
        <-- org.hamcrest.Description
        <-- org.hamcrest.Description$NullDescription
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.MatcherAssert
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.core.StringContains
        <-- org.hamcrest.core.StringEndsWith
        <-- org.hamcrest.core.StringStartsWith
        <-- org.hamcrest.core.SubstringMatcher
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.Assert
        <-- org.junit.Assume
        <-- org.junit.ComparisonFailure
        <-- org.junit.ComparisonFailure$ComparisonCompactor
        <-- org.junit.Ignore
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.experimental.results.ResultMatchers
        <-- org.junit.experimental.results.ResultMatchers$1
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.experimental.theories.PotentialAssignment
        <-- org.junit.experimental.theories.PotentialAssignment$1
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.ComparisonCriteria
        <-- org.junit.internal.MethodSorter$1
        <-- org.junit.internal.MethodSorter$2
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.matchers.JUnitMatchers
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ErrorCollector$1
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.TemporaryFolder
        <-- org.junit.rules.TestName
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.manipulation.Filter
        <-- org.junit.runner.manipulation.Filter$1
        <-- org.junit.runner.manipulation.Filter$2
        <-- org.junit.runner.manipulation.Filter$3
        <-- org.junit.runner.notification.Failure
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.MethodSorters
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.SpoonException
        <-- spoon.SpoonTask
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.Property
        <-- spoon.processing.Severity
        <-- spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.code.CtBreak
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder$1
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.PersistenceProperty
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.OpCode$1
        <-- spoon.test.enums.OpCode$2
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.fieldaccesses.InternalSuperCall
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InternalClassStaticFieldInit$InternalClass
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.prettyprinter.Validation$1
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.AnonymousClass$1
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.E
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.secondaryclasses.Secondary
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.Main
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.DynamicCompilationException
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Pair
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.NumberLibrary$1
        <-- xxl.java.library.ObjectLibrary$1
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.GlobalToggle
        <-- xxl.java.support.InvocationStopwatch
        <-- xxl.java.support.Lockable
        <-- xxl.java.support.OperatingSystem
        <-- xxl.java.support.Singleton
    StringBuffer *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.FlaggedOption
        <-- com.martiansoftware.jsap.IllegalMultipleDeclarationException
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.QualifiedSwitch
        <-- com.martiansoftware.jsap.RequiredParameterMissingException
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.UnflaggedOption
        <-- com.martiansoftware.jsap.UnknownFlagException
        <-- com.martiansoftware.jsap.UnspecifiedParameterException
        <-- com.martiansoftware.jsap.ant.FlaggedOptionConfiguration
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- com.martiansoftware.jsap.ant.SwitchConfiguration
        <-- com.martiansoftware.jsap.ant.UnflaggedOptionConfiguration
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.BooleanStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.CharacterStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.PackageStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- junit.framework.TestFailure
        <-- junit.runner.BaseTestRunner
        <-- org.apache.commons.io.FileDeleteStrategy
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.IOCase
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.EnhancedPatternLayout
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.NDC$DiagnosticContext
        <-- org.apache.log4j.NameValue
        <-- org.apache.log4j.PatternLayout
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.SimpleLayout
        <-- org.apache.log4j.TTCCLayout
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.CyclicBuffer
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.helpers.FormattingInfo
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$LiteralPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.helpers.SyslogQuietWriter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.helpers.Transform
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.Log4JLogRecord
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$6
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.ClassNamePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.log4j.pattern.FileLocationPatternConverter
        <-- org.apache.log4j.pattern.FormattingInfo
        <-- org.apache.log4j.pattern.FullLocationPatternConverter
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LineLocationPatternConverter
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.pattern.LiteralPatternConverter
        <-- org.apache.log4j.pattern.LoggerPatternConverter
        <-- org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.MessagePatternConverter
        <-- org.apache.log4j.pattern.MethodLocationPatternConverter
        <-- org.apache.log4j.pattern.NDCPatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$DropElementAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$MaxElementAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$NOPAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment
        <-- org.apache.log4j.pattern.NamePatternConverter
        <-- org.apache.log4j.pattern.PatternConverter
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp
        <-- org.apache.log4j.pattern.SequenceNumberPatternConverter
        <-- org.apache.log4j.pattern.ThreadPatternConverter
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.log4j.xml.XMLLayout
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.ExitException
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.XmlLogger$TimedElement
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceString
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$Html
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$AllHandler
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PathConvert$MapEntry
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$NestedString
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsUser
        <-- org.apache.tools.ant.taskdefs.email.EmailAddress
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Assertions$BaseAssertion
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.Environment$Variable
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PatternSet$NameEntry
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.PropertySet$PropertyRef
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.NotSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.GlobPatternMapper
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LazyFileOutputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.mail.SmtpResponseReader
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.tar.TarUtils
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.FloatCache
        <-- org.eclipse.jdt.internal.compiler.codegen.IntegerCache
        <-- org.eclipse.jdt.internal.compiler.codegen.LongCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ObjectCache
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        <-- org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ByteConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CharConstant
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-- org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-- org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-- org.eclipse.jdt.internal.compiler.impl.LongConstant
        <-- org.eclipse.jdt.internal.compiler.impl.ShortConstant
        <-- org.eclipse.jdt.internal.compiler.impl.StringConstant
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream$Token
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingError
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfLong
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.ObjectVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.runner.notification.Failure
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.visitor.SignaturePrinter
    StringBuilder *
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.ifmetric.IfPosition
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatement
        <-- fr.inria.lille.repair.nopol.synth.AngelicExecution
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.extensions.RepeatedTest
        <-- junit.framework.Assert
        <-- junit.framework.ComparisonCompactor
        <-- junit.framework.TestCase
        <-- junit.framework.TestFailure
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.Assert
        <-- org.junit.ComparisonFailure$ComparisonCompactor
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.results.ResultMatchers$1
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.ComparisonCriteria
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.TemporaryFolder
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.manipulation.Filter$3
        <-- org.junit.runner.notification.Failure
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$1
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.Main
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.GlobalToggle
        <-- xxl.java.support.OperatingSystem
    StringIndexOutOfBoundsException *
        <-- org.apache.tools.ant.types.FilterSet
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    String[] *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- xxl.java.junit.JUnitRunner
    System *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.jsap.xml.TryLoadXML
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPol$METHOD
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.ifmetric.IfBranch
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarStatementWrapperFunction
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$IsSuspicious
        <-- fr.inria.lille.repair.nopol.synth.BugKind
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer$1
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.runner.BaseTestRunner
        <-- junit.runner.Version
        <-- junit.textui.TestRunner
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.HexDump
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.ConsoleAppender$SystemErrStream
        <-- org.apache.log4j.ConsoleAppender$SystemOutStream
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.Layout
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.ReaderInputStream
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.tar.TarBuffer
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        <-- org.apache.tools.tar.TarUtils
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.UnrecognizedExtraField
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.FloatCache
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        <-- org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToIntArray
        <-- org.eclipse.jdt.internal.compiler.util.ObjectVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.internal.RealSystem
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Result$Listener
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.processing.Severity
        <-- spoon.processing.TraversalStrategy
        <-- spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.control.Ifs
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.filters.Foo
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.main.MainTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.prettyprinter.Validation$1
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.Foo
        <-- spoon.test.secondaryclasses.E
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.strings.Main
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.Main
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.support.InvocationStopwatch
        <-- xxl.java.support.OperatingSystem
    Thread *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- junit.extensions.ActiveTestSuite
        <-- junit.extensions.ActiveTestSuite$1
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$1
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Exec$StreamPumper
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$1
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer$ProcessDestroyerImpl
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.SampleClass
        <-- spoon.test.SampleClass$1
        <-- spoon.test.SampleClass$2
        <-- spoon.test.SampleClass$3
        <-- spoon.test.SampleClass$4
        <-- spoon.test.SampleClass$5
        <-- spoon.test.processing.SampleForInsertBefore
        <-- spoon.test.processing.SampleForInsertBefore$1
        <-- spoon.test.processing.SampleForInsertBefore$2
        <-- spoon.test.processing.SampleForInsertBefore$3
        <-- spoon.test.processing.SampleForInsertBefore$4
        <-- spoon.test.processing.SampleForInsertBefore$5
        <-- xxl.java.junit.CustomClassLoaderThreadFactory
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.support.GlobalToggle
    ThreadDeath *
        <-- junit.framework.TestResult
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
    ThreadGroup *
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Redirector
    ThreadLocal *
        <-- org.apache.tools.ant.taskdefs.Definer$ResourceStack
    Throwable *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPException
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.ParseException
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.ByteStringParser
        <-- com.martiansoftware.jsap.stringparsers.ClassStringParser
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- com.martiansoftware.jsap.stringparsers.DoubleStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.stringparsers.FileStringParser
        <-- com.martiansoftware.jsap.stringparsers.FloatStringParser
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- com.martiansoftware.jsap.stringparsers.IntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongStringParser
        <-- com.martiansoftware.jsap.stringparsers.ShortStringParser
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.JSAPXStream
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- junit.framework.Protectable
        <-- junit.framework.TestCase
        <-- junit.framework.TestFailure
        <-- junit.framework.TestListener
        <-- junit.framework.TestResult
        <-- junit.framework.TestResult$1
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.CategoryKey
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.config.PropertySetterException
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.RootCategory
        <-- org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.spi.ThrowableRenderer
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.BuildEvent
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskRunnable
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.StringDescription
        <-- org.junit.Assume
        <-- org.junit.Test$None
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.max.CouldNotReadCoreException
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.runners.Enclosed
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.builders.JUnit3Builder
        <-- org.junit.internal.builders.JUnit4Builder
        <-- org.junit.internal.builders.NullBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.internal.runners.model.ReflectiveCallable
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.internal.runners.statements.Fail
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- org.junit.internal.runners.statements.InvokeMethod
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedException$ExpectedExceptionStatement
        <-- org.junit.rules.ExternalResource
        <-- org.junit.rules.ExternalResource$1
        <-- org.junit.rules.RunRules
        <-- org.junit.rules.TemporaryFolder
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.rules.TestWatchman
        <-- org.junit.rules.TestWatchman$1
        <-- org.junit.rules.Verifier
        <-- org.junit.rules.Verifier$1
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Computer$1
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.notification.Failure
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.AllTests
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.BlockJUnit4ClassRunner$1
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.FrameworkMethod$1
        <-- org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.Statement
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.generics.SimilarSignatureMethodes
        <-- spoon.test.trycatch.Main
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.JavaLibrary
    UnsatisfiedLinkError *
        <-- org.apache.log4j.nt.NTEventLogAppender
    UnsupportedClassVersionError *
        <-- org.eclipse.jdt.internal.compiler.batch.Main
    UnsupportedOperationException *
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.repair.nopol.patch.Patch$NoPatch
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.input.NullInputStream
        <-- org.apache.commons.io.input.NullReader
        <-- org.apache.commons.io.input.SwappedDataInputStream
        <-- org.apache.log4j.pattern.PatternParser$ReadOnlyMap
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.hamcrest.internal.ArrayIterator
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.test.generics.BugCollection$Foo
    Void *
        <-- junit.framework.TestSuite
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.runners.model.FrameworkMethod
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.BlockTemplate
        <-- spoon.template.StatementTemplate
java.lang.annotation *
    Annotation *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.hamcrest.Factory
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.categories.Categories$ExcludeCategory
        <-- org.junit.experimental.categories.Categories$IncludeCategory
        <-- org.junit.experimental.categories.Category
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.theories.DataPoint
        <-- org.junit.experimental.theories.DataPoints
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.ParametersSuppliedBy
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theory
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOn
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.IgnoredBuilder
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.Suite$SuiteClasses
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.TestClass
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Property
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Bound
        <-- spoon.test.annotation.PersistenceProperty
    ElementType *
        <-- org.hamcrest.Factory
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Suite$SuiteClasses
        <-- spoon.processing.Property
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.test.annotation.Bound
    Inherited *
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.Suite$SuiteClasses
    Retention *
        <-- org.hamcrest.Factory
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.experimental.categories.Categories$ExcludeCategory
        <-- org.junit.experimental.categories.Categories$IncludeCategory
        <-- org.junit.experimental.categories.Category
        <-- org.junit.experimental.theories.DataPoint
        <-- org.junit.experimental.theories.DataPoints
        <-- org.junit.experimental.theories.ParametersSuppliedBy
        <-- org.junit.experimental.theories.Theory
        <-- org.junit.experimental.theories.suppliers.TestedOn
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Suite$SuiteClasses
        <-- spoon.processing.Property
        <-- spoon.template.Parameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.PersistenceProperty
    RetentionPolicy *
        <-- org.hamcrest.Factory
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.experimental.categories.Categories$ExcludeCategory
        <-- org.junit.experimental.categories.Categories$IncludeCategory
        <-- org.junit.experimental.categories.Category
        <-- org.junit.experimental.theories.DataPoint
        <-- org.junit.experimental.theories.DataPoints
        <-- org.junit.experimental.theories.ParametersSuppliedBy
        <-- org.junit.experimental.theories.Theory
        <-- org.junit.experimental.theories.suppliers.TestedOn
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Suite$SuiteClasses
        <-- spoon.processing.Property
        <-- spoon.template.Parameter
        <-- spoon.test.annotation.PersistenceProperty
    Target *
        <-- org.hamcrest.Factory
        <-- org.junit.After
        <-- org.junit.AfterClass
        <-- org.junit.Before
        <-- org.junit.BeforeClass
        <-- org.junit.ClassRule
        <-- org.junit.FixMethodOrder
        <-- org.junit.Ignore
        <-- org.junit.Rule
        <-- org.junit.Test
        <-- org.junit.runner.RunWith
        <-- org.junit.runners.Parameterized$Parameter
        <-- org.junit.runners.Parameterized$Parameters
        <-- org.junit.runners.Suite$SuiteClasses
        <-- spoon.processing.Property
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Bound
        <-- spoon.test.annotation.PersistenceProperty
java.lang.ref *
    PhantomReference *
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
    Reference *
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
    ReferenceQueue *
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
    WeakReference *
        <-- org.apache.tools.ant.ComponentHelper
java.lang.reflect *
    AnnotatedElement *
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Array *
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.internal.ComparisonCriteria
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- xxl.java.container.classic.MetaCollection
    Constructor *
        <-- junit.framework.TestSuite
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.model.TestClass
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Field *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.TestClass
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    Field[] *
        <-- spoon.support.util.RtHelper
    GenericArrayType *
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
    InvocationHandler *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
    InvocationTargetException *
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.model.ReflectiveCallable
        <-- spoon.support.util.RtHelper
    Member *
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
    Method *
        <-- com.martiansoftware.jsap.stringparsers.ForNameStringParser
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.MethodUnion
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$1
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$2
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.MethodSorter$1
        <-- org.junit.internal.MethodSorter$2
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$2
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.FrameworkMethod$1
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.TestClass
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.util.RtHelper
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.support.InvocationStopwatch
        <-- xxl.java.support.Singleton
    Method[] *
        <-- spoon.support.util.RtHelper
    Modifier *
        <-- junit.framework.TestCase
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Project
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.TestClass
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
        <-- xxl.java.library.ClassLibrary
    ParameterizedType *
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
    Proxy *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
    Type *
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
    TypeVariable *
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
    WildcardType *
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
java.math *
    BigDecimal *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.BigDecimalStringParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- xxl.java.library.StringLibrary
    BigDecimal[] *
        <-- com.martiansoftware.jsap.JSAPResult
    BigInteger *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.BigIntegerStringParser
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    BigInteger[] *
        <-- com.martiansoftware.jsap.JSAPResult
java.net *
    ConnectException *
        <-- org.apache.log4j.net.SocketAppender$Connector
    DatagramPacket *
        <-- org.apache.log4j.helpers.SyslogWriter
    DatagramSocket *
        <-- org.apache.log4j.helpers.SyslogWriter
    HttpURLConnection *
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.condition.Http
    InetAddress *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.tools.mail.MailMessage
    InetAddress[] *
        <-- com.martiansoftware.jsap.JSAPResult
    MalformedURLException *
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.library.FileLibrary
    ServerSocket *
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.varia.HUP
    Socket *
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.mail.MailMessage
    SocketException *
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
    SocketPermission *
        <-- org.apache.tools.ant.types.Permissions
    URI *
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
        <-- xxl.java.library.FileLibrary
    URISyntaxException *
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    URL *
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.URLStringParser
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.lf5.util.Resource
        <-- org.apache.log4j.lf5.util.ResourceUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.spi.Configurator
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$1
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.types.ResourceLocation
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
    URLClassLoader *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.library.JavaLibrary
    URLConnection *
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.condition.Http
    URL[] *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.library.JavaLibrary
    UnknownHostException *
        <-- com.martiansoftware.jsap.stringparsers.InetAddressStringParser
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.net.SyslogAppender
java.nio *
    Buffer *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    ByteBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    CharBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
java.nio.charset *
    Charset *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- xxl.java.compiler.DynamicClassCompiler
    CharsetDecoder *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    CoderResult *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    CodingErrorAction *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    IllegalCharsetNameException *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
    UnsupportedCharsetException *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util
java.rmi *
    Remote *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
java.security *
    AccessController *
        <-- spoon.test.prettyprinter.Validation
    CodeSource *
        <-- org.apache.log4j.EnhancedThrowableRenderer
    DigestInputStream *
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
    MessageDigest *
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
    NoSuchAlgorithmException *
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
    NoSuchProviderException *
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
    Permission *
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.types.Permissions$Permission
    Permissions *
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
    PrivilegedAction *
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.prettyprinter.Validation$1
    ProtectionDomain *
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.tools.ant.loader.AntClassLoader2
    UnresolvedPermission *
        <-- org.apache.tools.ant.types.Permissions
java.security.cert *
    Certificate *
        <-- org.apache.tools.ant.types.Permissions
java.sql *
    Connection *
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.SQLExec
    DatabaseMetaData *
        <-- org.apache.tools.ant.taskdefs.JDBCTask
    Driver *
        <-- org.apache.tools.ant.taskdefs.JDBCTask
    DriverManager *
        <-- org.apache.log4j.jdbc.JDBCAppender
    ResultSet *
        <-- org.apache.tools.ant.taskdefs.SQLExec
    ResultSetMetaData *
        <-- org.apache.tools.ant.taskdefs.SQLExec
    SQLException *
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SQLExec$Transaction
    SQLWarning *
        <-- org.apache.tools.ant.taskdefs.SQLExec
    Statement *
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.tools.ant.taskdefs.SQLExec
java.text *
    CharacterIterator *
        <-- org.apache.tools.ant.util.FileUtils
    ChoiceFormat *
        <-- org.apache.tools.ant.util.DateUtils
    DateFormat *
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Touch$1
        <-- org.apache.tools.ant.taskdefs.Touch$2
        <-- org.apache.tools.ant.taskdefs.Touch$DateFormatFactory
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
    DateFormatSymbols *
        <-- org.apache.log4j.helpers.DateTimeDateFormat
    DecimalFormat *
        <-- org.apache.tools.ant.util.FileUtils
        <-- xxl.java.library.StringLibrary
    DecimalFormatSymbols *
        <-- xxl.java.library.StringLibrary
    FieldPosition *
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
    Format *
        <-- org.apache.tools.ant.util.DateUtils
    MessageFormat *
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.junit.runners.Parameterized
    NumberFormat *
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.junit.internal.TextListener
    ParseException *
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
    ParsePosition *
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
    SimpleDateFormat *
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.tools.ant.taskdefs.Touch$2
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
    StringCharacterIterator *
        <-- org.apache.tools.ant.util.FileUtils
java.util *
    ArrayList *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.TestResult
        <-- junit.framework.TestSuite
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.helpers.UtilLoggingLevel
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MacroInstance$Element
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileFinder
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Result
        <-- org.junit.runner.manipulation.Filter$2
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.api.APITest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.initializers.InstanceInitializers$1
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.library.StringLibrary
    Arrays *
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- junit.framework.JUnit4TestAdapterCache
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.xml.XMLLayout
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.tar.TarBuffer
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFilePool
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.junit.Assume
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.runner.Description
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.model.InitializationError
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.StringLibrary
    Calendar *
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.zip.ZipFile
    Collection *
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAPResult
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer
        <-- fr.inria.lille.repair.nopol.synth.Synthesizer$1
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.framework.TestResult
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.pattern.PatternParser$ReadOnlyMap
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
        <-- org.junit.rules.RuleChain
        <-- org.junit.runner.Description
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.MultipleFailureException
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.processing.TestProcessor
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.Observable
    Collections *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- junit.framework.TestResult
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.rules.RuleChain
        <-- org.junit.runner.Result
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.MultipleFailureException
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- xxl.java.container.classic.MetaCollection
    Comparator *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements$1
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$1
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Jar$1
        <-- org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.JDTCompilerAdapter$1
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFile$1
        <-- org.eclipse.jdt.internal.compiler.ClassFile$2
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.CompilationResult$1
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$TestComparator
        <-- org.junit.internal.MethodSorter
        <-- org.junit.internal.MethodSorter$1
        <-- org.junit.internal.MethodSorter$2
        <-- org.junit.internal.requests.SortingRequest
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$2
        <-- org.junit.runner.Request
        <-- org.junit.runner.manipulation.Sorter
        <-- org.junit.runner.manipulation.Sorter$1
        <-- org.junit.runners.MethodSorters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$4
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.util.SortedList
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
    ConcurrentModificationException *
        <-- spoon.support.visitor.ProcessingVisitor
    Date *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.DateStringParser
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.filefilter.AgeFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.RollingCalendar
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.RelativeTimeDateFormat
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.tar.TarEntry
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
    Date[] *
        <-- com.martiansoftware.jsap.JSAPResult
    Dictionary *
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.util.CollectionUtils
    EnumSet *
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
    Enumeration *
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- junit.framework.TestResult
        <-- junit.framework.TestSuite
        <-- junit.textui.ResultPrinter
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.helpers.NullEnumeration
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.AppenderAttachable
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$1
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Sequential
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.condition.And
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.taskdefs.condition.Not
        <-- org.apache.tools.ant.taskdefs.condition.Or
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.CollectionUtils
        <-- org.apache.tools.ant.util.CollectionUtils$CompoundEnumeration
        <-- org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
        <-- org.apache.tools.ant.util.LazyHashtable
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.apache.tools.ant.util.facade.FacadeTaskHelper
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.zip.ZipFile
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- spoon.support.gui.SpoonModelTree
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaSet
    EventListener *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.tools.ant.BuildListener
    EventObject *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.tools.ant.BuildEvent
    GregorianCalendar *
        <-- org.apache.log4j.RollingCalendar
    HashMap *
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- junit.framework.JUnit4TestAdapterCache
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Definer$ResourceStack
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.runners.model.TestClass
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.Multimap
    HashSet *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.runners.model.RunnerBuilder
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
    Hashtable *
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.MDC
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.ThreadLocalMap
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Project$AntRefTable
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Tstamp$Unit
        <-- org.apache.tools.ant.taskdefs.WaitFor$Unit
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.util.LazyHashtable
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
    IdentityHashMap *
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.Multimap
    Iterator *
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.TestResult
        <-- junit.framework.TestSuite
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.selectors.modifiedselector.Cache
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.internal.ArrayIterator
        <-- org.hamcrest.internal.SelfDescribingValueIterator
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.RunRules
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.manipulation.Filter$2
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.SortedList
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
    LinkedHashMap *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.Multimap
    LinkedHashSet *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- xxl.java.container.classic.MetaSet
    LinkedList *
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.util.StringUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.lf5.viewer.configure.MRUFileManager
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Permissions
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.util.SortedList
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.StringLibrary
    List *
        <-- com.martiansoftware.jsap.CommandLineTokenizer
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- com.martiansoftware.jsap.Option
        <-- com.martiansoftware.jsap.Parameter
        <-- com.martiansoftware.jsap.Parser
        <-- com.martiansoftware.jsap.SimpleJSAP
        <-- com.martiansoftware.jsap.Switch
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- com.martiansoftware.jsap.xml.JSAPConfig
        <-- com.martiansoftware.jsap.xml.ParameterConfig
        <-- com.martiansoftware.jsap.xml.StringParserConfig
        <-- com.martiansoftware.jsap.xml.TryDumpXML
        <-- com.martiansoftware.util.StringUtils
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.OperationCodeLine
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.WellFormedProgramConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.synthesis.theory.OperatorTheory
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.common.Fixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.NoPolLauncher
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.sps.SuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.TestResult
        <-- junit.framework.TestSuite
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.ConditionalFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
        <-- org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.helpers.UtilLoggingLevel
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.StartLogFactor5
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MacroInstance$Element
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.junit.Assume
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.experimental.max.MaxCore$1$1
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.ParameterSupplier
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.internal.ParameterizedAssertionError
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
        <-- org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.internal.runners.model.MultipleFailureException
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Result
        <-- org.junit.runner.Result$Listener
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.MultipleFailureException
        <-- org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.RunnerBuilder
        <-- org.junit.runners.model.TestClass
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.FileGenerator
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtEnum
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.template.TemplateMatcher$2
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.api.APITest$1
        <-- spoon.test.api.APITest$1$1
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaList$1
        <-- xxl.java.container.classic.MetaList$2
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.FileLibrary
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
    ListIterator *
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
    Locale *
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.RollingCalendar
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Touch$1
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.DateUtils
        <-- org.apache.tools.tar.TarEntry
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages
        <-- spoon.reflect.declaration.ModifierKind
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.library.StringLibrary
    Map *
        <-- com.martiansoftware.jsap.IDMap
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.NullCodeGenesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.Specification
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PatternParser$ReadOnlyMap
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$ResourceStack
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.runners.model.TestClass
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.secondaryclasses.Secondary
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaMap$1
        <-- xxl.java.container.classic.MetaMap$2
        <-- xxl.java.container.classic.MetaMap$3
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.container.various.NullBag
        <-- xxl.java.container.various.Table
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.Singleton
    Map$Entry *
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.InstanceOfMapEntryGeneric
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.container.map.Multimap
    MissingResourceException *
        <-- org.apache.log4j.Category
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    NoSuchElementException *
        <-- org.apache.commons.io.LineIterator
        <-- org.apache.log4j.helpers.NullEnumeration
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.taskdefs.Definer$1
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.util.CollectionUtils$CompoundEnumeration
        <-- org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
        <-- org.apache.tools.zip.ZipEntry
        <-- xxl.java.container.classic.MetaCollection
    Properties *
        <-- com.martiansoftware.jsap.PropertyStringParser
        <-- com.martiansoftware.jsap.defaultsources.PropertyDefaultSource
        <-- junit.runner.BaseTestRunner
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.UnrecognizedElementHandler
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper$MapperType
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
    PropertyPermission *
        <-- org.apache.tools.ant.types.Permissions
    Queue *
        <-- spoon.support.QueueProcessingManager
    Random *
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.util.FileUtils
    ResourceBundle *
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- spoon.Launcher
    ServiceConfigurationError *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
    ServiceLoader *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
    Set *
        <-- com.martiansoftware.jsap.Defaults
        <-- com.martiansoftware.jsap.JSAP
        <-- com.martiansoftware.jsap.JSAPResult
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.CentralLoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser$ReadOnlyMap
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.XMLLayout
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.junit.runners.model.RunnerBuilder
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.casts.CastTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.classic.MetaSet$1
        <-- xxl.java.container.classic.MetaSet$2
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.container.various.Table
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
    SortedSet *
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
    Stack *
        <-- org.apache.commons.io.FilenameUtils
        <-- org.apache.log4j.NDC
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.util.FileUtils
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.util.Timer
        <-- spoon.test.enums.OpCode$1
        <-- spoon.test.enums.OpCode$2
        <-- spoon.test.enums.Performable
    StringTokenizer *
        <-- com.martiansoftware.jsap.stringparsers.ColorStringParser
        <-- com.martiansoftware.jsap.stringparsers.EnumeratedStringParser
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.Permissions$Permission
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.Options
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Options
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.JavaIdentifiers
    TimeZone *
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.RollingCalendar
        <-- org.apache.log4j.TTCCLayout
        <-- org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.lf5.util.DateFormatManager
        <-- org.apache.log4j.pattern.CachedDateFormat
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.util.DateUtils
    TreeMap *
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.types.PropertySet
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
    TreeSet *
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
    UUID *
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
    Vector *
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        <-- com.martiansoftware.jsap.ant.OptionConfiguration
        <-- com.martiansoftware.jsap.ant.ParameterConfiguration
        <-- junit.framework.TestSuite
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.ProvisionNode
        <-- org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.VectorWriter
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.MultipleChoiceInputRequest
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Sequential
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.Commandline$Marker
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.Environment
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
        <-- org.apache.tools.ant.util.CollectionUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
        <-- org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.Watchdog
        <-- org.apache.tools.ant.util.facade.FacadeTaskHelper
        <-- org.apache.tools.ant.util.regexp.RegexpMatcher
        <-- org.apache.tools.mail.MailMessage
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipOutputStream
        <-- spoon.SpoonTask
        <-- spoon.test.secondaryclasses.TopLevel$InnerClass
    WeakHashMap *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
java.util.concurrent *
    Callable *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodRoadie$1$1
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ErrorCollector$1
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestSuiteExecution
    ExecutionException *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- xxl.java.junit.TestSuiteExecution
    ExecutorService *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- xxl.java.junit.TestSuiteExecution
    Executors *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- xxl.java.junit.TestSuiteExecution
    Future *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- xxl.java.junit.TestSuiteExecution
    ThreadFactory *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- xxl.java.junit.CustomClassLoaderThreadFactory
        <-- xxl.java.junit.TestSuiteExecution
    TimeUnit *
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- xxl.java.junit.TestSuiteExecution
    TimeoutException *
        <-- org.junit.internal.runners.MethodRoadie$1
        <-- xxl.java.junit.TestSuiteExecution
java.util.concurrent.atomic *
    AtomicInteger *
        <-- org.junit.runner.Result
        <-- org.junit.runner.Result$Listener
java.util.jar *
    Attributes *
        <-- org.apache.tools.ant.loader.AntClassLoader2
    Attributes$Name *
        <-- org.apache.tools.ant.loader.AntClassLoader2
    JarFile *
        <-- org.apache.tools.ant.loader.AntClassLoader2
    JarOutputStream *
        <-- xxl.java.compiler.JarPackage
    Manifest *
        <-- org.apache.tools.ant.loader.AntClassLoader2
java.util.regex *
    Matcher *
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.hamcrest.core.DescribedAs
        <-- org.junit.runner.Description
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
    Pattern *
        <-- com.martiansoftware.jsap.stringparsers.LongSizeStringParser
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.hamcrest.core.DescribedAs
        <-- org.junit.runner.Description
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
java.util.zip *
    CRC32 *
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ZipOutputStream
    CheckedInputStream *
        <-- org.apache.commons.io.FileUtils
    Checksum *
        <-- org.apache.commons.io.FileUtils
    Deflater *
        <-- org.apache.tools.zip.ZipOutputStream
    GZIPInputStream *
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
    GZIPOutputStream *
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
    Inflater *
        <-- org.apache.tools.zip.ZipFile
    InflaterInputStream *
        <-- org.apache.tools.zip.ZipFile
    ZipEntry *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.zip.ZipEntry
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.ZipFolder
        <-- xxl.java.compiler.JarPackage
    ZipException *
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.JarMarker
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipExtraField
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    ZipFile *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.util.Util
    ZipInputStream *
        <-- spoon.support.compiler.ZipFolder
javax.annotation *
    Nonnull *
        <-- xxl.java.junit.JUnitRunner
javax.annotation.processing *
    Filer *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
    FilerException *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
    Messager *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
    ProcessingEnvironment *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
    Processor *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    RoundEnvironment *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
javax.jms *
    Destination *
        <-- org.apache.log4j.or.jms.MessageRenderer
    JMSException *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.or.jms.MessageRenderer
    Message *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.or.jms.MessageRenderer
    MessageListener *
        <-- org.apache.log4j.net.JMSSink
    ObjectMessage *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    Topic *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    TopicConnection *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    TopicConnectionFactory *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    TopicPublisher *
        <-- org.apache.log4j.net.JMSAppender
    TopicSession *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    TopicSubscriber *
        <-- org.apache.log4j.net.JMSSink
javax.lang.model *
    SourceVersion *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
javax.lang.model.element *
    AnnotationMirror *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
    AnnotationValue *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
    AnnotationValueVisitor *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
    Element *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    ElementKind *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    ElementVisitor *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    ExecutableElement *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
    Modifier *
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    Name *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    NestingKind *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    PackageElement *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    TypeElement *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    TypeParameterElement *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
    VariableElement *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
javax.lang.model.type *
    ArrayType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    DeclaredType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    ErrorType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
    ExecutableType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    MirroredTypeException *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
    MirroredTypesException *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
    NoType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    NullType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    PrimitiveType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    TypeKind *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
    TypeMirror *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
    TypeVariable *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
    TypeVisitor *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
    WildcardType *
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
javax.lang.model.util *
    ElementFilter *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
    Elements *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
    Types *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
javax.mail *
    Address *
        <-- org.apache.log4j.net.SMTPAppender
    Authenticator *
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SMTPAppender$1
    BodyPart *
        <-- org.apache.log4j.net.SMTPAppender
    Message *
        <-- org.apache.log4j.net.SMTPAppender
    Message$RecipientType *
        <-- org.apache.log4j.net.SMTPAppender
    MessagingException *
        <-- org.apache.log4j.net.SMTPAppender
    Multipart *
        <-- org.apache.log4j.net.SMTPAppender
    PasswordAuthentication *
        <-- org.apache.log4j.net.SMTPAppender$1
    Session *
        <-- org.apache.log4j.net.SMTPAppender
    Transport *
        <-- org.apache.log4j.net.SMTPAppender
javax.mail.internet *
    AddressException *
        <-- org.apache.log4j.net.SMTPAppender
    InternetAddress *
        <-- org.apache.log4j.net.SMTPAppender
    InternetHeaders *
        <-- org.apache.log4j.net.SMTPAppender
    MimeBodyPart *
        <-- org.apache.log4j.net.SMTPAppender
    MimeMessage *
        <-- org.apache.log4j.net.SMTPAppender
    MimeMultipart *
        <-- org.apache.log4j.net.SMTPAppender
    MimeUtility *
        <-- org.apache.log4j.net.SMTPAppender
javax.management *
    Attribute *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    AttributeList *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    AttributeNotFoundException *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    DynamicMBean *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    InstanceAlreadyExistsException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    InstanceNotFoundException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    InvalidAttributeValueException *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    JMException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    ListenerNotFoundException *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    MBeanAttributeInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanConstructorInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanException *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanNotificationInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanOperationInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanParameterInfo *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanRegistration *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    MBeanRegistrationException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    MBeanServer *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    MBeanServerFactory *
        <-- org.apache.log4j.jmx.Agent
    MalformedObjectNameException *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    NotCompliantMBeanException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
    Notification *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    NotificationBroadcaster *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    NotificationBroadcasterSupport *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    NotificationFilter *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    NotificationFilterSupport *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    NotificationListener *
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    ObjectInstance *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
    ObjectName *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    ReflectionException *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    RuntimeOperationsException *
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
javax.naming *
    Context *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    InitialContext *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    NameNotFoundException *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
    NamingException *
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
javax.swing *
    AbstractAction *
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
    BorderFactory *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    Icon *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    ImageIcon *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    JButton *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- spoon.test.secondaryclasses.AnonymousClass
    JCheckBox *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    JCheckBoxMenuItem *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    JColorChooser *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JComboBox *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
    JComponent *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils$1
    JDialog *
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
    JEditorPane *
        <-- org.apache.log4j.chainsaw.DetailPanel
    JFileChooser *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- spoon.support.gui.SpoonModelTree$1
    JFrame *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JLabel *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
    JMenu *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JMenuBar *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JMenuItem *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonModelTree
    JOptionPane *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.test.secondaryclasses.AnonymousClass$1
    JPanel *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JPopupMenu *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonModelTree
    JRootPane *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JScrollBar *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JScrollPane *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JSplitPane *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JTable *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JTextArea *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
    JTextField *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
    JToolBar *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    JTree *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$2
    KeyStroke *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    ListSelectionModel *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
    SwingUtilities *
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
    UIManager *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
javax.swing.border *
    Border *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
    TitledBorder *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.Main
javax.swing.event *
    CellEditorListener *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
    ChangeEvent *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
    DocumentEvent *
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
    DocumentListener *
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
    EventListenerList *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
    ListSelectionEvent *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
    ListSelectionListener *
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
    TreeModelEvent *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter
    TreeModelListener *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter
javax.swing.table *
    AbstractTableModel *
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
    DefaultTableCellRenderer *
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
    DefaultTableModel *
        <-- org.apache.log4j.lf5.viewer.LogTableModel
    TableCellEditor *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
    TableCellRenderer *
        <-- org.apache.log4j.lf5.viewer.LogTable
    TableColumn *
        <-- org.apache.log4j.lf5.viewer.LogTable
    TableColumnModel *
        <-- org.apache.log4j.lf5.viewer.LogTable
    TableModel *
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- spoon.support.gui.SpoonObjectFieldsTable
javax.swing.text *
    Document *
        <-- org.apache.log4j.chainsaw.ControlPanel
javax.swing.tree *
    DefaultMutableTreeNode *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$2
        <-- spoon.support.gui.SpoonModelTree$3
        <-- spoon.support.gui.SpoonModelTree$4
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$1
    DefaultTreeCellEditor *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
    DefaultTreeCellRenderer *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    DefaultTreeModel *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
    MutableTreeNode *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonTreeBuilder
    TreeCellEditor *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
    TreeCellRenderer *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
    TreeModel *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
    TreeNode *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- spoon.support.gui.SpoonModelTree
    TreePath *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- spoon.support.gui.SpoonModelTree
javax.tools *
    Diagnostic *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- xxl.java.compiler.DynamicClassCompiler
    Diagnostic$Kind *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
    DiagnosticCollector *
        <-- xxl.java.compiler.DynamicClassCompiler
    DiagnosticListener *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        <-- xxl.java.compiler.DynamicClassCompiler
    FileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        <-- xxl.java.compiler.VirtualFileObjectManager
    ForwardingJavaFileManager *
        <-- xxl.java.compiler.VirtualFileObjectManager
    ForwardingJavaFileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
    JavaCompiler *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- xxl.java.compiler.DynamicClassCompiler
    JavaCompiler$CompilationTask *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-- xxl.java.compiler.DynamicClassCompiler
    JavaFileManager *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
    JavaFileManager$Location *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
    JavaFileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
    JavaFileObject$Kind *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
    SimpleJavaFileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualSourceFileObject
    StandardJavaFileManager *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.compiler.DynamicClassCompiler
    StandardLocation *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
    ToolProvider *
        <-- xxl.java.compiler.DynamicClassCompiler
javax.xml.parsers *
    DocumentBuilder *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.DOMConfigurator$ParseAction
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.util.DOMUtils
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- spoon.processing.XMLAnnotationProcessor
    DocumentBuilderFactory *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- spoon.processing.XMLAnnotationProcessor
    FactoryConfigurationError *
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.util.JAXPUtils
    ParserConfigurationException *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- spoon.processing.XMLAnnotationProcessor
    SAXParser *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.JAXPUtils
    SAXParserFactory *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.JAXPUtils
javax.xml.transform *
    Source *
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
    TransformerException *
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
    URIResolver *
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
javax.xml.transform.sax *
    SAXSource *
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
junit.extensions
    ActiveTestSuite
        --> java.lang.Class *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        <-> junit.extensions.ActiveTestSuite$1
        --> junit.framework.Test
        --> junit.framework.TestResult
        --> junit.framework.TestSuite
    ActiveTestSuite$1
        --> java.lang.Thread *
        <-> junit.extensions.ActiveTestSuite
        --> junit.framework.Test
        --> junit.framework.TestResult
    RepeatedTest
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> junit.extensions.TestDecorator
        --> junit.framework.Test
        --> junit.framework.TestResult
    TestDecorator
        --> java.lang.Object *
        --> java.lang.String *
        <-- junit.extensions.RepeatedTest
        <-- junit.extensions.TestSetup
        --> junit.framework.Assert
        --> junit.framework.Test
        --> junit.framework.TestResult
        <-- org.junit.internal.runners.JUnit38ClassRunner
    TestSetup
        --> java.lang.Exception *
        --> junit.extensions.TestDecorator
        <-> junit.extensions.TestSetup$1
        --> junit.framework.Protectable
        --> junit.framework.Test
        --> junit.framework.TestResult
    TestSetup$1
        --> java.lang.Exception *
        --> java.lang.Object *
        <-> junit.extensions.TestSetup
        --> junit.framework.Protectable
        --> junit.framework.TestResult
    package-info
        --> java.lang.Object *
junit.framework
    Assert
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Deprecated *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        <-- junit.extensions.TestDecorator
        --> junit.framework.AssertionFailedError
        <-- junit.framework.ComparisonCompactor
        --> junit.framework.ComparisonFailure
        <-- junit.framework.TestCase
    AssertionFailedError
        --> java.lang.AssertionError *
        --> java.lang.Object *
        --> java.lang.String *
        <-- junit.framework.Assert
        <-- junit.framework.ComparisonFailure
        <-- junit.framework.TestFailure
        <-- junit.framework.TestListener
        <-- junit.framework.TestResult
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
    ComparisonCompactor
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> junit.framework.Assert
        <-- junit.framework.ComparisonFailure
    ComparisonFailure
        --> java.lang.String *
        <-- junit.framework.Assert
        --> junit.framework.AssertionFailedError
        --> junit.framework.ComparisonCompactor
    JUnit4TestAdapter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        <-> junit.framework.JUnit4TestAdapterCache
        --> junit.framework.Test
        --> junit.framework.TestResult
        --> org.junit.Ignore
        --> org.junit.runner.Describable
        --> org.junit.runner.Description
        --> org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.Filterable
        --> org.junit.runner.manipulation.NoTestsRemainException
        --> org.junit.runner.manipulation.Sortable
        --> org.junit.runner.manipulation.Sorter
        --> org.junit.runner.notification.RunNotifier
    JUnit4TestAdapterCache
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        <-> junit.framework.JUnit4TestAdapter
        <-> junit.framework.JUnit4TestAdapterCache$1
        --> junit.framework.JUnit4TestCaseFacade
        --> junit.framework.Test
        --> junit.framework.TestResult
        --> junit.framework.TestSuite
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
        --> org.junit.runner.notification.RunNotifier
    JUnit4TestAdapterCache$1
        --> java.lang.Exception *
        --> java.lang.Throwable *
        <-> junit.framework.JUnit4TestAdapterCache
        --> junit.framework.Test
        --> junit.framework.TestResult
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
    JUnit4TestCaseFacade
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        <-- junit.framework.JUnit4TestAdapterCache
        --> junit.framework.Test
        --> junit.framework.TestResult
        --> org.junit.runner.Describable
        --> org.junit.runner.Description
    Protectable
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-- junit.extensions.TestSetup
        <-- junit.extensions.TestSetup$1
        <-- junit.framework.TestResult
        <-- junit.framework.TestResult$1
    Test
        --> java.lang.Object *
        <-- junit.extensions.ActiveTestSuite
        <-- junit.extensions.ActiveTestSuite$1
        <-- junit.extensions.RepeatedTest
        <-- junit.extensions.TestDecorator
        <-- junit.extensions.TestSetup
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- junit.framework.JUnit4TestCaseFacade
        <-- junit.framework.TestCase
        <-- junit.framework.TestFailure
        <-- junit.framework.TestListener
        <-> junit.framework.TestResult
        <-- junit.framework.TestSuite
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.SuiteMethod
        <-- org.junit.runner.JUnitCore
    TestCase
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> junit.framework.Assert
        --> junit.framework.Test
        <-> junit.framework.TestResult
        <-- junit.framework.TestResult$1
        <-- junit.framework.TestSuite
        <-- junit.framework.TestSuite$1
        <-- junit.textui.TestRunner
        <-- org.junit.internal.builders.JUnit3Builder
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
    TestFailure
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> junit.framework.AssertionFailedError
        --> junit.framework.Test
        <-- junit.framework.TestResult
        <-- junit.textui.ResultPrinter
    TestListener
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> junit.framework.AssertionFailedError
        --> junit.framework.Test
        <-- junit.framework.TestResult
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
    TestResult
        --> java.lang.Object *
        --> java.lang.ThreadDeath *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        <-- junit.extensions.ActiveTestSuite
        <-- junit.extensions.ActiveTestSuite$1
        <-- junit.extensions.RepeatedTest
        <-- junit.extensions.TestDecorator
        <-- junit.extensions.TestSetup
        <-- junit.extensions.TestSetup$1
        --> junit.framework.AssertionFailedError
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- junit.framework.JUnit4TestCaseFacade
        --> junit.framework.Protectable
        <-> junit.framework.Test
        <-> junit.framework.TestCase
        --> junit.framework.TestFailure
        --> junit.framework.TestListener
        <-> junit.framework.TestResult$1
        <-- junit.framework.TestSuite
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
    TestResult$1
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> junit.framework.Protectable
        --> junit.framework.TestCase
        <-> junit.framework.TestResult
    TestSuite
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Vector *
        <-- junit.extensions.ActiveTestSuite
        <-- junit.framework.JUnit4TestAdapterCache
        --> junit.framework.Test
        --> junit.framework.TestCase
        --> junit.framework.TestResult
        --> junit.framework.TestSuite$1
        <-- junit.runner.BaseTestRunner
        <-- junit.textui.TestRunner
        <-- org.junit.experimental.max.MaxCore
        --> org.junit.internal.MethodSorter
        <-- org.junit.internal.runners.JUnit38ClassRunner
    TestSuite$1
        --> java.lang.String *
        --> junit.framework.TestCase
        <-- junit.framework.TestSuite
    package-info
        --> java.lang.Object *
junit.runner
    BaseTestRunner
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.text.NumberFormat *
        --> java.util.Properties *
        --> junit.framework.AssertionFailedError
        --> junit.framework.Test
        --> junit.framework.TestListener
        --> junit.framework.TestSuite
        <-- junit.textui.ResultPrinter
        <-- junit.textui.TestRunner
    TestRunListener
        --> java.lang.Object *
        --> java.lang.String *
    Version
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- junit.textui.TestRunner
        <-- org.junit.runner.JUnitCore
    package-info
        --> java.lang.Object *
junit.textui
    ResultPrinter
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.text.NumberFormat *
        --> java.util.Enumeration *
        --> junit.framework.AssertionFailedError
        --> junit.framework.Test
        --> junit.framework.TestFailure
        --> junit.framework.TestListener
        --> junit.framework.TestResult
        --> junit.runner.BaseTestRunner
        <-- junit.textui.TestRunner
    TestRunner
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> junit.framework.Test
        --> junit.framework.TestCase
        --> junit.framework.TestListener
        --> junit.framework.TestResult
        --> junit.framework.TestSuite
        --> junit.runner.BaseTestRunner
        --> junit.runner.Version
        --> junit.textui.ResultPrinter
    package-info
        --> java.lang.Object *
org.apache.bcel.classfile *
    ClassParser *
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
    ConstantValue *
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
    Field *
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
    JavaClass *
        <-- org.apache.tools.ant.filters.util.JavaClassHelper
org.apache.bsf *
    BSFException *
        <-- org.apache.tools.ant.util.ScriptRunner
    BSFManager *
        <-- org.apache.tools.ant.util.ScriptRunner
org.apache.commons.io
    CopyUtils
        --> java.io.ByteArrayInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
    DirectoryWalker
        --> java.io.File *
        --> java.io.FileFilter *
        --> java.io.IOException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> org.apache.commons.io.DirectoryWalker$CancelException
        --> org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.TrueFileFilter
    DirectoryWalker$CancelException
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.String *
        <-- org.apache.commons.io.DirectoryWalker
    EndianUtils
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.commons.io.input.SwappedDataInputStream
    FileCleaner
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.commons.io.FileCleaningTracker
        --> org.apache.commons.io.FileDeleteStrategy
    FileCleaningTracker
        --> java.io.File *
        --> java.lang.IllegalStateException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.ref.ReferenceQueue *
        --> java.util.Collection *
        --> java.util.Vector *
        <-- org.apache.commons.io.FileCleaner
        <-> org.apache.commons.io.FileCleaningTracker$Reaper
        --> org.apache.commons.io.FileCleaningTracker$Tracker
        --> org.apache.commons.io.FileDeleteStrategy
    FileCleaningTracker$Reaper
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.ref.Reference *
        --> java.lang.ref.ReferenceQueue *
        --> java.util.Collection *
        <-> org.apache.commons.io.FileCleaningTracker
        --> org.apache.commons.io.FileCleaningTracker$Tracker
    FileCleaningTracker$Tracker
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.ref.PhantomReference *
        --> java.lang.ref.ReferenceQueue *
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Reaper
        --> org.apache.commons.io.FileDeleteStrategy
    FileDeleteStrategy
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.commons.io.FileCleaner
        <-- org.apache.commons.io.FileCleaningTracker
        <-- org.apache.commons.io.FileCleaningTracker$Tracker
        <-> org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy
    FileDeleteStrategy$ForceFileDeleteStrategy
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.String *
        <-> org.apache.commons.io.FileDeleteStrategy
        --> org.apache.commons.io.FileUtils
    FileSystemUtils
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.lang.Character *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> org.apache.commons.io.FilenameUtils
        --> org.apache.commons.io.IOUtils
    FileUtils
        --> java.io.File *
        --> java.io.FileFilter *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.File[] *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.net.URL *
        --> java.util.Collection *
        --> java.util.Date *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.zip.CRC32 *
        --> java.util.zip.CheckedInputStream *
        --> java.util.zip.Checksum *
        <-- org.apache.commons.io.FileDeleteStrategy$ForceFileDeleteStrategy
        --> org.apache.commons.io.IOUtils
        --> org.apache.commons.io.LineIterator
        <-- org.apache.commons.io.filefilter.AgeFileFilter
        --> org.apache.commons.io.filefilter.DirectoryFileFilter
        --> org.apache.commons.io.filefilter.FalseFileFilter
        --> org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.SuffixFileFilter
        --> org.apache.commons.io.filefilter.TrueFileFilter
        <-- org.apache.commons.io.output.LockableFileWriter
        --> org.apache.commons.io.output.NullOutputStream
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    FilenameUtils
        --> I[] *
        --> java.io.File *
        --> java.lang.Character *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Stack *
        <-- org.apache.commons.io.FileSystemUtils
        <-> org.apache.commons.io.IOCase
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
    HexDump
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
    IOCase
        --> java.io.Serializable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.commons.io.FilenameUtils
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
    IOUtils
        --> java.io.BufferedInputStream *
        --> java.io.BufferedReader *
        --> java.io.ByteArrayInputStream *
        --> java.io.CharArrayWriter *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.apache.commons.io.FileSystemUtils
        <-- org.apache.commons.io.FileUtils
        <-> org.apache.commons.io.LineIterator
        --> org.apache.commons.io.output.ByteArrayOutputStream
        <-- org.apache.commons.io.output.DeferredFileOutputStream
        <-- org.apache.commons.io.output.LockableFileWriter
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    LineIterator
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Iterator *
        --> java.util.NoSuchElementException *
        <-- org.apache.commons.io.FileUtils
        <-> org.apache.commons.io.IOUtils
org.apache.commons.io.filefilter
    AbstractFileFilter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.commons.io.filefilter.AgeFileFilter
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        <-- org.apache.commons.io.filefilter.CanWriteFileFilter
        <-- org.apache.commons.io.filefilter.DelegateFileFilter
        <-- org.apache.commons.io.filefilter.DirectoryFileFilter
        <-- org.apache.commons.io.filefilter.EmptyFileFilter
        <-- org.apache.commons.io.filefilter.FileFileFilter
        <-- org.apache.commons.io.filefilter.HiddenFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.commons.io.filefilter.NameFileFilter
        <-- org.apache.commons.io.filefilter.NotFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.PrefixFileFilter
        <-- org.apache.commons.io.filefilter.SizeFileFilter
        <-- org.apache.commons.io.filefilter.SuffixFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFileFilter
        <-- org.apache.commons.io.filefilter.WildcardFilter
    AgeFileFilter
        --> java.io.File *
        --> java.util.Date *
        --> org.apache.commons.io.FileUtils
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    AndFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        --> org.apache.commons.io.filefilter.ConditionalFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    CanReadFileFilter
        --> java.io.File *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        --> org.apache.commons.io.filefilter.AndFileFilter
        --> org.apache.commons.io.filefilter.CanWriteFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.NotFileFilter
    CanWriteFileFilter
        --> java.io.File *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.NotFileFilter
    ConditionalFileFilter
        --> java.lang.Object *
        --> java.util.List *
        <-- org.apache.commons.io.filefilter.AndFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
    DelegateFileFilter
        --> java.io.File *
        --> java.io.FileFilter *
        --> java.io.FilenameFilter *
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    DirectoryFileFilter
        --> java.io.File *
        <-- org.apache.commons.io.FileUtils
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    EmptyFileFilter
        --> java.io.File *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.NotFileFilter
    FalseFileFilter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    FileFileFilter
        --> java.io.File *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    FileFilterUtils
        --> java.io.File *
        --> java.io.FileFilter *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Date *
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileUtils
        --> org.apache.commons.io.filefilter.AgeFileFilter
        --> org.apache.commons.io.filefilter.AndFileFilter
        --> org.apache.commons.io.filefilter.DelegateFileFilter
        --> org.apache.commons.io.filefilter.DirectoryFileFilter
        --> org.apache.commons.io.filefilter.FalseFileFilter
        --> org.apache.commons.io.filefilter.FileFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.NameFileFilter
        --> org.apache.commons.io.filefilter.NotFileFilter
        --> org.apache.commons.io.filefilter.OrFileFilter
        --> org.apache.commons.io.filefilter.PrefixFileFilter
        --> org.apache.commons.io.filefilter.SizeFileFilter
        --> org.apache.commons.io.filefilter.SuffixFileFilter
        --> org.apache.commons.io.filefilter.TrueFileFilter
    HiddenFileFilter
        --> java.io.File *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
        --> org.apache.commons.io.filefilter.NotFileFilter
    IOFileFilter
        --> java.io.File *
        --> java.io.FileFilter *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.AndFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        <-- org.apache.commons.io.filefilter.CanWriteFileFilter
        <-- org.apache.commons.io.filefilter.ConditionalFileFilter
        <-- org.apache.commons.io.filefilter.DirectoryFileFilter
        <-- org.apache.commons.io.filefilter.EmptyFileFilter
        <-- org.apache.commons.io.filefilter.FalseFileFilter
        <-- org.apache.commons.io.filefilter.FileFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.HiddenFileFilter
        <-- org.apache.commons.io.filefilter.NotFileFilter
        <-- org.apache.commons.io.filefilter.OrFileFilter
        <-- org.apache.commons.io.filefilter.TrueFileFilter
    NameFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.List *
        --> org.apache.commons.io.IOCase
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    NotFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.CanReadFileFilter
        <-- org.apache.commons.io.filefilter.CanWriteFileFilter
        <-- org.apache.commons.io.filefilter.EmptyFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        <-- org.apache.commons.io.filefilter.HiddenFileFilter
        --> org.apache.commons.io.filefilter.IOFileFilter
    OrFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        --> org.apache.commons.io.filefilter.ConditionalFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    PrefixFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.List *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    SizeFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    SuffixFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.List *
        <-- org.apache.commons.io.FileUtils
        --> org.apache.commons.io.filefilter.AbstractFileFilter
        <-- org.apache.commons.io.filefilter.FileFilterUtils
    TrueFileFilter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.commons.io.DirectoryWalker
        <-- org.apache.commons.io.FileUtils
        <-- org.apache.commons.io.filefilter.FileFilterUtils
        --> org.apache.commons.io.filefilter.IOFileFilter
    WildcardFileFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.List *
        --> org.apache.commons.io.FilenameUtils
        --> org.apache.commons.io.IOCase
        --> org.apache.commons.io.filefilter.AbstractFileFilter
    WildcardFilter
        --> java.io.File *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.List *
        --> org.apache.commons.io.FilenameUtils
        --> org.apache.commons.io.filefilter.AbstractFileFilter
org.apache.commons.io.input
    ClassLoaderObjectInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectStreamClass *
        --> java.io.StreamCorruptedException *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.String *
    CountingInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.ArithmeticException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.commons.io.input.ProxyInputStream
    DemuxInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.InheritableThreadLocal *
        --> java.lang.Object *
    NullInputStream
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.UnsupportedOperationException *
    NullReader
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.UnsupportedOperationException *
    ProxyInputStream
        --> java.io.FilterInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        <-- org.apache.commons.io.input.CountingInputStream
        <-- org.apache.commons.io.input.SwappedDataInputStream
    ProxyReader
        --> java.io.FilterReader *
        --> java.io.IOException *
        --> java.io.Reader *
    SwappedDataInputStream
        --> java.io.DataInput *
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> org.apache.commons.io.EndianUtils
        --> org.apache.commons.io.input.ProxyInputStream
org.apache.commons.io.output
    ByteArrayOutputStream
        --> B[] *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IndexOutOfBoundsException *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
        <-- org.apache.commons.io.IOUtils
        <-- org.apache.commons.io.output.DeferredFileOutputStream
    CountingOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.ArithmeticException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.commons.io.output.ProxyOutputStream
    DeferredFileOutputStream
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.String *
        --> org.apache.commons.io.IOUtils
        --> org.apache.commons.io.output.ByteArrayOutputStream
        --> org.apache.commons.io.output.ThresholdingOutputStream
    DemuxOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.InheritableThreadLocal *
        --> java.lang.Object *
    LockableFileWriter
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.commons.io.FileUtils
        --> org.apache.commons.io.IOUtils
    NullOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-- org.apache.commons.io.FileUtils
    NullWriter
        --> java.io.Writer *
        --> java.lang.String *
    ProxyOutputStream
        --> java.io.FilterOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-- org.apache.commons.io.output.CountingOutputStream
        <-- org.apache.commons.io.output.TeeOutputStream
    ProxyWriter
        --> java.io.FilterWriter *
        --> java.io.IOException *
        --> java.io.Writer *
        --> java.lang.String *
    TeeOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> org.apache.commons.io.output.ProxyOutputStream
    ThresholdingOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-- org.apache.commons.io.output.DeferredFileOutputStream
org.apache.log4j
    Appender
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.BasicConfigurator
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        --> org.apache.log4j.Layout
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.AppenderAttachable
        <-> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.Filter
        <-- org.apache.log4j.spi.HierarchyEventListener
        <-- org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.xml.DOMConfigurator
    AppenderSkeleton
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.Appender
        <-- org.apache.log4j.AsyncAppender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.WriterAppender
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.rewrite.RewriteAppender
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.varia.NullAppender
    AsyncAppender
        --> java.lang.InterruptedException *
        --> java.lang.NegativeArraySizeException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.AsyncAppender$DiscardSummary
        <-> org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.Dispatcher
        --> org.apache.log4j.helpers.AppenderAttachableImpl
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.AppenderAttachable
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    AsyncAppender$DiscardSummary
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.text.MessageFormat *
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.LoggingEvent
    AsyncAppender$Dispatcher
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Thread *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        <-> org.apache.log4j.AsyncAppender
        --> org.apache.log4j.AsyncAppender$DiscardSummary
        --> org.apache.log4j.helpers.AppenderAttachableImpl
        --> org.apache.log4j.spi.LoggingEvent
    BasicConfigurator
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.ConsoleAppender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.PatternLayout
        <-- org.apache.log4j.varia.Roller
    Category
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.MessageFormat *
        --> java.util.Enumeration *
        --> java.util.MissingResourceException *
        --> java.util.ResourceBundle *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-> org.apache.log4j.Hierarchy
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        --> org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.config.PropertyPrinter
        --> org.apache.log4j.helpers.AppenderAttachableImpl
        --> org.apache.log4j.helpers.NullEnumeration
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        --> org.apache.log4j.spi.AppenderAttachable
        <-> org.apache.log4j.spi.HierarchyEventListener
        <-> org.apache.log4j.spi.LoggerRepository
        <-> org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.ThrowableInformation
    CategoryKey
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.apache.log4j.Hierarchy
    ConsoleAppender
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintStream *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.log4j.BasicConfigurator
        --> org.apache.log4j.ConsoleAppender$SystemErrStream
        --> org.apache.log4j.ConsoleAppender$SystemOutStream
        --> org.apache.log4j.Layout
        --> org.apache.log4j.WriterAppender
        --> org.apache.log4j.helpers.LogLog
    ConsoleAppender$SystemErrStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.System *
        <-- org.apache.log4j.ConsoleAppender
    ConsoleAppender$SystemOutStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.System *
        <-- org.apache.log4j.ConsoleAppender
    DailyRollingFileAppender
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Locale *
        --> java.util.TimeZone *
        --> org.apache.log4j.FileAppender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.RollingCalendar
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
    DefaultCategoryFactory
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.Hierarchy
        --> org.apache.log4j.Logger
        <-- org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.spi.LoggerFactory
    DefaultThrowableRenderer
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.LineNumberReader *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.spi.ThrowableInformation
        --> org.apache.log4j.spi.ThrowableRenderer
    Dispatcher
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> org.apache.log4j.AsyncAppender
        --> org.apache.log4j.helpers.AppenderAttachableImpl
        --> org.apache.log4j.helpers.BoundedFIFO
        --> org.apache.log4j.spi.LoggingEvent
    EnhancedPatternLayout
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.helpers.PatternConverter
        --> org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.pattern.BridgePatternConverter
        --> org.apache.log4j.pattern.BridgePatternParser
        --> org.apache.log4j.spi.LoggingEvent
    EnhancedThrowableRenderer
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.Package *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.net.URL *
        --> java.security.CodeSource *
        --> java.security.ProtectionDomain *
        --> java.util.HashMap *
        --> java.util.Map *
        --> org.apache.log4j.DefaultThrowableRenderer
        --> org.apache.log4j.spi.ThrowableRenderer
    FileAppender
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        <-- org.apache.log4j.DailyRollingFileAppender
        --> org.apache.log4j.Layout
        <-- org.apache.log4j.RollingFileAppender
        --> org.apache.log4j.WriterAppender
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.QuietWriter
        --> org.apache.log4j.spi.ErrorHandler
    HTMLLayout
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Date *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        --> org.apache.log4j.helpers.Transform
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    Hierarchy
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.ResourceBundle *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        <-> org.apache.log4j.Category
        --> org.apache.log4j.CategoryKey
        --> org.apache.log4j.DefaultCategoryFactory
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.ProvisionNode
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.net.SocketServer
        --> org.apache.log4j.or.ObjectRenderer
        --> org.apache.log4j.or.RendererMap
        --> org.apache.log4j.spi.HierarchyEventListener
        --> org.apache.log4j.spi.LoggerFactory
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.RendererSupport
        --> org.apache.log4j.spi.ThrowableRenderer
        --> org.apache.log4j.spi.ThrowableRendererSupport
    Layout
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.BasicConfigurator
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.EnhancedPatternLayout
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.PatternLayout
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.SimpleLayout
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.XMLLayout
    Level
        --> java.io.IOException *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.ObjectStreamException *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-> org.apache.log4j.Priority
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.SimpleLayout
        <-- org.apache.log4j.TTCCLayout
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.helpers.UtilLoggingLevel
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.net.DefaultEvaluator
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.RootCategory
        <-- org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.LevelRangeFilter
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.XMLLayout
    LogMF
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.text.MessageFormat *
        --> java.text.NumberFormat *
        --> java.util.Date *
        --> java.util.Locale *
        --> java.util.ResourceBundle *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogXF
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.LoggingEvent
    LogManager
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.Enumeration *
        <-- org.apache.log4j.BasicConfigurator
        <-- org.apache.log4j.Category
        --> org.apache.log4j.Hierarchy
        --> org.apache.log4j.Level
        <-> org.apache.log4j.Logger
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.PropertyWatchdog
        <-- org.apache.log4j.config.PropertyPrinter
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        --> org.apache.log4j.spi.DefaultRepositorySelector
        --> org.apache.log4j.spi.LoggerFactory
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.NOPLoggerRepository
        --> org.apache.log4j.spi.RepositorySelector
        --> org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.XMLWatchdog
    LogSF
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.ResourceBundle *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogXF
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.LoggingEvent
    LogXF
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.LoggingEvent
    Logger
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.BasicConfigurator
        <-> org.apache.log4j.Category
        <-- org.apache.log4j.DefaultCategoryFactory
        <-- org.apache.log4j.Hierarchy
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-> org.apache.log4j.LogManager
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.ProvisionNode
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.config.PropertyPrinter
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.ErrorHandler
        <-> org.apache.log4j.spi.LoggerFactory
        <-> org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.RootCategory
        <-- org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.Roller
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    MDC
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Hashtable *
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.ThreadLocalMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
    NDC
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.log4j.NDC$DiagnosticContext
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
    NDC$DiagnosticContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.NDC
    NameValue
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.PropertyConfigurator
    PatternLayout
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.BasicConfigurator
        --> org.apache.log4j.Layout
        --> org.apache.log4j.helpers.PatternConverter
        --> org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jdbc.JDBCAppender
        --> org.apache.log4j.spi.LoggingEvent
    Priority
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.HTMLLayout
        <-> org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        <-- org.apache.log4j.Logger
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.net.DefaultEvaluator
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.varia.LevelRangeFilter
    PropertyConfigurator
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.net.URLConnection *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Map$Entry *
        --> java.util.Properties *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.DefaultCategoryFactory
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.NameValue
        <-> org.apache.log4j.PropertyWatchdog
        --> org.apache.log4j.SortedKeyEnumeration
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.config.PropertySetter
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        --> org.apache.log4j.or.RendererMap
        --> org.apache.log4j.spi.Configurator
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggerFactory
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.OptionHandler
        --> org.apache.log4j.spi.RendererSupport
        --> org.apache.log4j.spi.ThrowableRenderer
        --> org.apache.log4j.spi.ThrowableRendererSupport
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
    PropertyWatchdog
        --> java.lang.String *
        --> org.apache.log4j.LogManager
        <-> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.helpers.FileWatchdog
        --> org.apache.log4j.spi.LoggerRepository
    ProvisionNode
        --> java.lang.Object *
        --> java.util.Vector *
        <-- org.apache.log4j.Hierarchy
        --> org.apache.log4j.Logger
    RollingCalendar
        --> java.lang.IllegalStateException *
        --> java.lang.String *
        --> java.util.Date *
        --> java.util.GregorianCalendar *
        --> java.util.Locale *
        --> java.util.TimeZone *
        <-- org.apache.log4j.DailyRollingFileAppender
    RollingFileAppender
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> org.apache.log4j.FileAppender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.helpers.CountingQuietWriter
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.helpers.QuietWriter
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.varia.ExternallyRolledFileAppender
    SimpleLayout
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.spi.LoggingEvent
    SortedKeyEnumeration
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        <-- org.apache.log4j.PropertyConfigurator
    TTCCLayout
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.TimeZone *
        --> org.apache.log4j.Level
        --> org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.nt.NTEventLogAppender
        --> org.apache.log4j.spi.LoggingEvent
    WriterAppender
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.FileAppender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.QuietWriter
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
org.apache.log4j.chainsaw
    ControlPanel
        --> java.awt.Component *
        --> java.awt.GridBagConstraints *
        --> java.awt.GridBagLayout *
        --> java.awt.LayoutManager *
        --> java.awt.event.ActionListener *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> javax.swing.BorderFactory *
        --> javax.swing.JButton *
        --> javax.swing.JComboBox *
        --> javax.swing.JLabel *
        --> javax.swing.JPanel *
        --> javax.swing.JTextField *
        --> javax.swing.border.Border *
        --> javax.swing.border.TitledBorder *
        --> javax.swing.event.DocumentListener *
        --> javax.swing.text.Document *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        <-> org.apache.log4j.chainsaw.ControlPanel$1
        <-> org.apache.log4j.chainsaw.ControlPanel$2
        <-> org.apache.log4j.chainsaw.ControlPanel$3
        <-> org.apache.log4j.chainsaw.ControlPanel$4
        <-> org.apache.log4j.chainsaw.ControlPanel$5
        <-> org.apache.log4j.chainsaw.ControlPanel$6
        <-> org.apache.log4j.chainsaw.ControlPanel$7
        --> org.apache.log4j.chainsaw.ExitAction
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$1
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JComboBox *
        --> org.apache.log4j.Priority
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$2
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTextField *
        --> javax.swing.event.DocumentEvent *
        --> javax.swing.event.DocumentListener *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$3
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTextField *
        --> javax.swing.event.DocumentEvent *
        --> javax.swing.event.DocumentListener *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$4
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTextField *
        --> javax.swing.event.DocumentEvent *
        --> javax.swing.event.DocumentListener *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$5
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTextField *
        --> javax.swing.event.DocumentEvent *
        --> javax.swing.event.DocumentListener *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$6
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    ControlPanel$7
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JButton *
        <-> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.MyTableModel
    DetailPanel
        --> java.awt.BorderLayout *
        --> java.awt.Component *
        --> java.awt.LayoutManager *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.MessageFormat *
        --> java.util.Date *
        --> javax.swing.BorderFactory *
        --> javax.swing.JEditorPane *
        --> javax.swing.JPanel *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTable *
        --> javax.swing.ListSelectionModel *
        --> javax.swing.border.Border *
        --> javax.swing.border.TitledBorder *
        --> javax.swing.event.ListSelectionEvent *
        --> javax.swing.event.ListSelectionListener *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.chainsaw.MyTableModel
    EventDetails
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.chainsaw.DetailPanel
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$1
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    EventDetails[] *
        <-- org.apache.log4j.chainsaw.MyTableModel
    ExitAction
        --> java.awt.event.ActionEvent *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> javax.swing.AbstractAction *
        --> org.apache.log4j.Logger
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.Main
        <-- org.apache.log4j.chainsaw.Main$1
    LoadXMLAction
        --> java.awt.Component *
        --> java.awt.event.ActionEvent *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> javax.swing.AbstractAction *
        --> javax.swing.JFileChooser *
        --> javax.swing.JFrame *
        --> javax.swing.JOptionPane *
        --> javax.xml.parsers.ParserConfigurationException *
        --> javax.xml.parsers.SAXParser *
        --> javax.xml.parsers.SAXParserFactory *
        --> org.apache.log4j.Logger
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.chainsaw.MyTableModel
        --> org.apache.log4j.chainsaw.XMLFileHandler
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
    LoggingReceiver
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> org.apache.log4j.Logger
        <-> org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.chainsaw.MyTableModel
    LoggingReceiver$Slurper
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Throwable *
        --> java.net.Socket *
        --> java.net.SocketException *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.chainsaw.EventDetails
        <-> org.apache.log4j.chainsaw.LoggingReceiver
        --> org.apache.log4j.chainsaw.MyTableModel
        --> org.apache.log4j.spi.LoggingEvent
    Main
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.Dimension *
        --> java.awt.event.ActionListener *
        --> java.awt.event.WindowListener *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Properties *
        --> javax.swing.BorderFactory *
        --> javax.swing.JFrame *
        --> javax.swing.JMenu *
        --> javax.swing.JMenuBar *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPanel *
        --> javax.swing.JScrollPane *
        --> javax.swing.JSplitPane *
        --> javax.swing.JTable *
        --> javax.swing.border.Border *
        --> javax.swing.border.TitledBorder *
        --> javax.swing.table.TableModel *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.chainsaw.ControlPanel
        --> org.apache.log4j.chainsaw.DetailPanel
        --> org.apache.log4j.chainsaw.ExitAction
        --> org.apache.log4j.chainsaw.LoadXMLAction
        --> org.apache.log4j.chainsaw.LoggingReceiver
        <-> org.apache.log4j.chainsaw.Main$1
        --> org.apache.log4j.chainsaw.MyTableModel
    Main$1
        --> java.awt.event.ActionEvent *
        --> java.awt.event.WindowAdapter *
        --> java.awt.event.WindowEvent *
        --> org.apache.log4j.chainsaw.ExitAction
        <-> org.apache.log4j.chainsaw.Main
    MyTableModel
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.util.ArrayList *
        --> java.util.Comparator *
        --> java.util.Date *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.SortedSet *
        --> java.util.TreeSet *
        --> javax.swing.table.AbstractTableModel *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.chainsaw.ControlPanel
        <-- org.apache.log4j.chainsaw.ControlPanel$1
        <-- org.apache.log4j.chainsaw.ControlPanel$2
        <-- org.apache.log4j.chainsaw.ControlPanel$3
        <-- org.apache.log4j.chainsaw.ControlPanel$4
        <-- org.apache.log4j.chainsaw.ControlPanel$5
        <-- org.apache.log4j.chainsaw.ControlPanel$6
        <-- org.apache.log4j.chainsaw.ControlPanel$7
        <-- org.apache.log4j.chainsaw.DetailPanel
        --> org.apache.log4j.chainsaw.EventDetails
        --> org.apache.log4j.chainsaw.EventDetails[] *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.LoggingReceiver
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.chainsaw.Main
        --> org.apache.log4j.chainsaw.MyTableModel$1
        <-> org.apache.log4j.chainsaw.MyTableModel$Processor
        <-- org.apache.log4j.chainsaw.XMLFileHandler
    MyTableModel$1
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.MyTableModel
        <-- org.apache.log4j.chainsaw.MyTableModel$Processor
    MyTableModel$Processor
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Thread *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.SortedSet *
        --> org.apache.log4j.chainsaw.EventDetails
        <-> org.apache.log4j.chainsaw.MyTableModel
        --> org.apache.log4j.chainsaw.MyTableModel$1
    XMLFileHandler
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.StringTokenizer *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        --> org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        --> org.apache.log4j.chainsaw.MyTableModel
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
org.apache.log4j.config
    PropertyGetter
        --> java.beans.BeanInfo *
        --> java.beans.IntrospectionException *
        --> java.beans.Introspector *
        --> java.beans.PropertyDescriptor *
        --> java.io.InterruptedIOException *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.log4j.config.PropertyGetter$PropertyCallback
        <-- org.apache.log4j.config.PropertyPrinter
        --> org.apache.log4j.helpers.LogLog
    PropertyGetter$PropertyCallback
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertyPrinter
    PropertyPrinter
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Category
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.config.PropertyGetter
        --> org.apache.log4j.config.PropertyGetter$PropertyCallback
    PropertySetter
        --> java.beans.BeanInfo *
        --> java.beans.IntrospectionException *
        --> java.beans.Introspector *
        --> java.beans.PropertyDescriptor *
        --> java.io.InterruptedIOException *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Level
        <-- org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.config.PropertySetterException
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.xml.DOMConfigurator
    PropertySetterException
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.apache.log4j.config.PropertySetter
org.apache.log4j.helpers
    AbsoluteTimeDateFormat
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormat *
        --> java.text.FieldPosition *
        --> java.text.ParsePosition *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.TimeZone *
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.DateTimeDateFormat
        <-- org.apache.log4j.helpers.ISO8601DateFormat
        <-- org.apache.log4j.helpers.PatternParser
    AppenderAttachableImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.rewrite.RewriteAppender
        --> org.apache.log4j.spi.AppenderAttachable
        --> org.apache.log4j.spi.LoggingEvent
    BoundedFIFO
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.log4j.Dispatcher
        --> org.apache.log4j.spi.LoggingEvent
    CountingQuietWriter
        --> java.io.IOException *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.String *
        <-- org.apache.log4j.RollingFileAppender
        --> org.apache.log4j.helpers.QuietWriter
        --> org.apache.log4j.spi.ErrorHandler
    CyclicBuffer
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        --> org.apache.log4j.spi.LoggingEvent
    DateLayout
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormat *
        --> java.text.FieldPosition *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.TimeZone *
        --> org.apache.log4j.Layout
        <-- org.apache.log4j.TTCCLayout
        --> org.apache.log4j.helpers.AbsoluteTimeDateFormat
        --> org.apache.log4j.helpers.DateTimeDateFormat
        --> org.apache.log4j.helpers.ISO8601DateFormat
        --> org.apache.log4j.helpers.RelativeTimeDateFormat
        --> org.apache.log4j.spi.LoggingEvent
    DateTimeDateFormat
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormatSymbols *
        --> java.text.FieldPosition *
        --> java.text.ParsePosition *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.TimeZone *
        --> org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.PatternParser
    FileWatchdog
        --> java.io.File *
        --> java.lang.InterruptedException *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        <-- org.apache.log4j.PropertyWatchdog
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.xml.XMLWatchdog
    FormattingInfo
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$CategoryPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$NamedPatternConverter
    ISO8601DateFormat
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.FieldPosition *
        --> java.text.ParsePosition *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.TimeZone *
        --> org.apache.log4j.helpers.AbsoluteTimeDateFormat
        <-- org.apache.log4j.helpers.DateLayout
        <-- org.apache.log4j.helpers.PatternParser
    Loader
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.net.URL *
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.MDC
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
    LogLog
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.ConsoleAppender
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.NDC
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.config.PropertyGetter
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.helpers.FileWatchdog
        <-- org.apache.log4j.helpers.FormattingInfo
        <-- org.apache.log4j.helpers.Loader
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-> org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.SyslogWriter
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketAppender$Connector
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.TelnetAppender$SocketHandler
        <-- org.apache.log4j.net.ZeroConfSupport
        <-- org.apache.log4j.nt.NTEventLogAppender
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PatternParser
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LocationInfo
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.RootCategory
        <-- org.apache.log4j.spi.RootLogger
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.log4j.xml.SAXErrorHandler
    MDCKeySetExtractor
        --> java.io.ByteArrayInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.Set *
        --> org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    NullEnumeration
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.NoSuchElementException *
        <-- org.apache.log4j.Category
    OnlyOnceErrorHandler
        --> java.io.InterruptedIOException *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
    OptionConverter
        --> java.io.InputStream *
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InstantiationException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.net.URL *
        --> java.util.Properties *
        <-- org.apache.log4j.EnhancedPatternLayout
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogManager
        <-> org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.config.PropertySetter
        <-> org.apache.log4j.helpers.Loader
        <-> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.or.RendererMap
        --> org.apache.log4j.spi.Configurator
        --> org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.StringMatchFilter
        <-- org.apache.log4j.xml.DOMConfigurator
    PatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.EnhancedPatternLayout
        <-- org.apache.log4j.PatternLayout
        --> org.apache.log4j.helpers.FormattingInfo
        <-- org.apache.log4j.helpers.PatternParser
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LiteralPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$NamedPatternConverter
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.BridgePatternParser
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.text.SimpleDateFormat *
        <-- org.apache.log4j.EnhancedPatternLayout
        --> org.apache.log4j.Layout
        <-- org.apache.log4j.PatternLayout
        --> org.apache.log4j.helpers.AbsoluteTimeDateFormat
        --> org.apache.log4j.helpers.DateTimeDateFormat
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.ISO8601DateFormat
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.helpers.PatternConverter
        --> org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-> org.apache.log4j.helpers.PatternParser$CategoryPatternConverter
        <-> org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        --> org.apache.log4j.helpers.PatternParser$DatePatternConverter
        --> org.apache.log4j.helpers.PatternParser$LiteralPatternConverter
        <-> org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        --> org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.pattern.BridgePatternParser
    PatternParser$BasicPatternConverter
        --> java.lang.Long *
        --> java.lang.String *
        --> org.apache.log4j.Level
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$CategoryPatternConverter
        --> java.lang.String *
        --> org.apache.log4j.helpers.FormattingInfo
        <-> org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.helpers.PatternParser$NamedPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$ClassNamePatternConverter
        --> java.lang.String *
        --> org.apache.log4j.helpers.FormattingInfo
        <-> org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.helpers.PatternParser$NamedPatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$DatePatternConverter
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.util.Date *
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$LiteralPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$LocationPatternConverter
        --> java.lang.String *
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.PatternConverter
        <-> org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$MDCPatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    PatternParser$NamedPatternConverter
        --> java.lang.String *
        --> org.apache.log4j.helpers.FormattingInfo
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser$CategoryPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    QuietWriter
        --> java.io.FilterWriter *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.FileAppender
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.SyslogQuietWriter
        --> org.apache.log4j.spi.ErrorHandler
    RelativeTimeDateFormat
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.text.DateFormat *
        --> java.text.FieldPosition *
        --> java.text.ParsePosition *
        --> java.util.Date *
        <-- org.apache.log4j.helpers.DateLayout
    SyslogQuietWriter
        --> java.io.Writer *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.net.SyslogAppender
        --> org.apache.log4j.spi.ErrorHandler
    SyslogWriter
        --> java.io.IOException *
        --> java.io.Writer *
        --> java.lang.NullPointerException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.DatagramPacket *
        --> java.net.DatagramSocket *
        --> java.net.InetAddress *
        --> java.net.MalformedURLException *
        --> java.net.SocketException *
        --> java.net.URL *
        --> java.net.UnknownHostException *
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.net.SyslogAppender
    ThreadLocalMap
        --> java.lang.InheritableThreadLocal *
        --> java.lang.Object *
        --> java.util.Hashtable *
        <-- org.apache.log4j.MDC
    Transform
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.xml.XMLLayout
    UtilLoggingLevel
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Level
org.apache.log4j.jdbc
    JDBCAppender
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.sql.Connection *
        --> java.sql.DriverManager *
        --> java.sql.SQLException *
        --> java.sql.Statement *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Layout
        --> org.apache.log4j.PatternLayout
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
org.apache.log4j.jmx
    AbstractDynamicMBean
        --> java.lang.Boolean *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.Vector *
        --> javax.management.Attribute *
        --> javax.management.AttributeList *
        --> javax.management.DynamicMBean *
        --> javax.management.InstanceAlreadyExistsException *
        --> javax.management.InstanceNotFoundException *
        --> javax.management.JMException *
        --> javax.management.MBeanRegistration *
        --> javax.management.MBeanRegistrationException *
        --> javax.management.MBeanServer *
        --> javax.management.NotCompliantMBeanException *
        --> javax.management.ObjectInstance *
        --> javax.management.ObjectName *
        --> javax.management.RuntimeOperationsException *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Logger
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
    Agent
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> javax.management.JMException *
        --> javax.management.MBeanServer *
        --> javax.management.MBeanServerFactory *
        --> javax.management.ObjectInstance *
        --> javax.management.ObjectName *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.jmx.HierarchyDynamicMBean
    AppenderDynamicMBean
        --> java.beans.BeanInfo *
        --> java.beans.IntrospectionException *
        --> java.beans.Introspector *
        --> java.beans.PropertyDescriptor *
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> javax.management.Attribute *
        --> javax.management.AttributeNotFoundException *
        --> javax.management.InvalidAttributeValueException *
        --> javax.management.JMException *
        --> javax.management.MBeanAttributeInfo *
        --> javax.management.MBeanConstructorInfo *
        --> javax.management.MBeanException *
        --> javax.management.MBeanInfo *
        --> javax.management.MBeanNotificationInfo *
        --> javax.management.MBeanOperationInfo *
        --> javax.management.MBeanParameterInfo *
        --> javax.management.MBeanServer *
        --> javax.management.MalformedObjectNameException *
        --> javax.management.ObjectName *
        --> javax.management.ReflectionException *
        --> javax.management.RuntimeOperationsException *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.jmx.AbstractDynamicMBean
        --> org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.jmx.LoggerDynamicMBean
        --> org.apache.log4j.jmx.MethodUnion
        --> org.apache.log4j.spi.OptionHandler
    HierarchyDynamicMBean
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.util.Vector *
        --> javax.management.Attribute *
        --> javax.management.AttributeNotFoundException *
        --> javax.management.InvalidAttributeValueException *
        --> javax.management.JMException *
        --> javax.management.ListenerNotFoundException *
        --> javax.management.MBeanAttributeInfo *
        --> javax.management.MBeanConstructorInfo *
        --> javax.management.MBeanException *
        --> javax.management.MBeanInfo *
        --> javax.management.MBeanNotificationInfo *
        --> javax.management.MBeanOperationInfo *
        --> javax.management.MBeanParameterInfo *
        --> javax.management.MBeanServer *
        --> javax.management.Notification *
        --> javax.management.NotificationBroadcaster *
        --> javax.management.NotificationBroadcasterSupport *
        --> javax.management.NotificationFilter *
        --> javax.management.NotificationFilterSupport *
        --> javax.management.NotificationListener *
        --> javax.management.ObjectName *
        --> javax.management.ReflectionException *
        --> javax.management.RuntimeOperationsException *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.Agent
        --> org.apache.log4j.jmx.LoggerDynamicMBean
        --> org.apache.log4j.spi.HierarchyEventListener
        --> org.apache.log4j.spi.LoggerRepository
    LayoutDynamicMBean
        --> java.beans.BeanInfo *
        --> java.beans.IntrospectionException *
        --> java.beans.Introspector *
        --> java.beans.PropertyDescriptor *
        --> java.io.InterruptedIOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> javax.management.Attribute *
        --> javax.management.AttributeNotFoundException *
        --> javax.management.InvalidAttributeValueException *
        --> javax.management.MBeanAttributeInfo *
        --> javax.management.MBeanConstructorInfo *
        --> javax.management.MBeanException *
        --> javax.management.MBeanInfo *
        --> javax.management.MBeanNotificationInfo *
        --> javax.management.MBeanOperationInfo *
        --> javax.management.MBeanParameterInfo *
        --> javax.management.ReflectionException *
        --> javax.management.RuntimeOperationsException *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.jmx.AbstractDynamicMBean
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        --> org.apache.log4j.jmx.MethodUnion
        --> org.apache.log4j.spi.OptionHandler
    LoggerDynamicMBean
        --> java.beans.IntrospectionException *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> javax.management.Attribute *
        --> javax.management.AttributeNotFoundException *
        --> javax.management.InvalidAttributeValueException *
        --> javax.management.JMException *
        --> javax.management.MBeanAttributeInfo *
        --> javax.management.MBeanConstructorInfo *
        --> javax.management.MBeanException *
        --> javax.management.MBeanInfo *
        --> javax.management.MBeanNotificationInfo *
        --> javax.management.MBeanOperationInfo *
        --> javax.management.MBeanParameterInfo *
        --> javax.management.MBeanServer *
        --> javax.management.MalformedObjectNameException *
        --> javax.management.Notification *
        --> javax.management.NotificationListener *
        --> javax.management.ObjectName *
        --> javax.management.ReflectionException *
        --> javax.management.RuntimeOperationsException *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.jmx.AbstractDynamicMBean
        --> org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
    MethodUnion
        --> java.lang.Object *
        --> java.lang.reflect.Method *
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
org.apache.log4j.lf5
    AppenderFinalizer
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        <-- org.apache.log4j.lf5.LF5Appender
        --> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    DefaultLF5Configurator
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalStateException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.spi.Configurator
        --> org.apache.log4j.spi.LoggerRepository
    LF5Appender
        --> java.awt.Dimension *
        --> java.awt.Toolkit *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.List *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Level
        --> org.apache.log4j.lf5.AppenderFinalizer
        --> org.apache.log4j.lf5.Log4JLogRecord
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogLevelFormatException
        --> org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.StartLogFactor5
        --> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableInformation
    Log4JLogRecord
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.lf5.LF5Appender
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        --> org.apache.log4j.spi.ThrowableInformation
    LogLevel
        --> java.awt.Color *
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.Log4JLogRecord
        --> org.apache.log4j.lf5.LogLevelFormatException
        <-- org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.StartLogFactor5
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    LogLevelFormatException
        --> java.lang.Exception *
        --> java.lang.String *
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    LogRecord
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.io.Serializable *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.Log4JLogRecord
        --> org.apache.log4j.lf5.LogLevel
        <-- org.apache.log4j.lf5.LogRecordFilter
        <-- org.apache.log4j.lf5.PassingLogRecordFilter
        <-- org.apache.log4j.lf5.util.AdapterLogRecord
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
    LogRecordFilter
        --> java.lang.Object *
        --> org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.PassingLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
    PassingLogRecordFilter
        --> java.lang.Object *
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        <-- org.apache.log4j.lf5.viewer.FilteredLogTableModel
    StartLogFactor5
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.apache.log4j.lf5.LF5Appender
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.viewer.LogBrokerMonitor
org.apache.log4j.lf5.util
    AdapterLogRecord
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
    DateFormatManager
        --> java.lang.Object *
        --> java.lang.String *
        --> java.text.DateFormat *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Locale *
        --> java.util.TimeZone *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
    LogFileParser
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> javax.swing.JFrame *
        --> javax.swing.SwingUtilities *
        --> org.apache.log4j.lf5.Log4JLogRecord
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogLevelFormatException
        --> org.apache.log4j.lf5.LogRecord
        <-> org.apache.log4j.lf5.util.LogFileParser$1
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        --> org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
    LogFileParser$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-> org.apache.log4j.lf5.util.LogFileParser
    LogMonitorAdapter
        --> java.awt.Dimension *
        --> java.awt.Toolkit *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.List *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.util.AdapterLogRecord
        --> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    Resource
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        <-> org.apache.log4j.lf5.util.ResourceUtils
    ResourceUtils
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        <-> org.apache.log4j.lf5.util.Resource
    StreamUtils
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Object *
org.apache.log4j.lf5.viewer
    FilteredLogTableModel
        --> java.lang.IllegalArgumentException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Date *
        --> java.util.Iterator *
        --> java.util.List *
        --> javax.swing.table.AbstractTableModel *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        --> org.apache.log4j.lf5.PassingLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$6
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTableRowRenderer
    LF5SwingUtils
        --> java.awt.Adjustable *
        --> java.awt.event.AdjustmentListener *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> javax.swing.JComponent *
        --> javax.swing.JScrollBar *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTable *
        --> javax.swing.ListSelectionModel *
        --> javax.swing.SwingUtilities *
        --> javax.swing.table.TableModel *
        --> org.apache.log4j.lf5.viewer.LF5SwingUtils$1
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
    LF5SwingUtils$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> javax.swing.JComponent *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
    LogBrokerMonitor
        --> java.awt.Color *
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.Dimension *
        --> java.awt.FlowLayout *
        --> java.awt.Font *
        --> java.awt.GraphicsEnvironment *
        --> java.awt.Image *
        --> java.awt.LayoutManager *
        --> java.awt.Toolkit *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.awt.event.AdjustmentListener *
        --> java.awt.event.WindowListener *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> javax.swing.BorderFactory *
        --> javax.swing.Icon *
        --> javax.swing.ImageIcon *
        --> javax.swing.JButton *
        --> javax.swing.JCheckBoxMenuItem *
        --> javax.swing.JColorChooser *
        --> javax.swing.JComboBox *
        --> javax.swing.JFileChooser *
        --> javax.swing.JFrame *
        --> javax.swing.JLabel *
        --> javax.swing.JMenu *
        --> javax.swing.JMenuBar *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPanel *
        --> javax.swing.JRootPane *
        --> javax.swing.JScrollBar *
        --> javax.swing.JScrollPane *
        --> javax.swing.JSplitPane *
        --> javax.swing.JTable *
        --> javax.swing.JTextArea *
        --> javax.swing.JToolBar *
        --> javax.swing.KeyStroke *
        --> javax.swing.ListSelectionModel *
        --> javax.swing.SwingUtilities *
        --> javax.swing.border.Border *
        <-- org.apache.log4j.lf5.AppenderFinalizer
        <-- org.apache.log4j.lf5.LF5Appender
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        <-- org.apache.log4j.lf5.StartLogFactor5
        --> org.apache.log4j.lf5.util.DateFormatManager
        <-> org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.util.LogMonitorAdapter
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        --> org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$1
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$11
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$16
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$17
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$18
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$19
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$20
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$21
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$22
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$23
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$24
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$25
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$26
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$31
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$32
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$5
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$6
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor$LogBrokerMonitorWindowAdaptor
        --> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        --> org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        --> org.apache.log4j.lf5.viewer.LogTable
        --> org.apache.log4j.lf5.viewer.LogTableColumn
        --> org.apache.log4j.lf5.viewer.TrackingAdjustmentListener
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-> org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        --> org.apache.log4j.lf5.viewer.configure.MRUFileManager
    LogBrokerMonitor$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Thread *
        --> javax.swing.JFrame *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$10
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$11
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JMenuItem *
        --> org.apache.log4j.lf5.LogLevel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$12
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$13
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.util.List *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$14
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.util.List *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$15
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.util.List *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$16
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$17
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$18
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$19
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$2
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
    LogBrokerMonitor$20
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$21
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$22
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$23
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$24
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$25
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$26
        --> java.awt.Component *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JFrame *
        --> javax.swing.JOptionPane *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$27
        --> java.awt.Component *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JFrame *
        --> javax.swing.JOptionPane *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$28
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.lf5.LogRecordFilter
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$29
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.LogRecord
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
    LogBrokerMonitor$3
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JCheckBoxMenuItem *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
    LogBrokerMonitor$30
        --> java.awt.Font *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JComboBox *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$31
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JComboBox *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$32
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JComboBox *
        --> org.apache.log4j.lf5.LogLevel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$4
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JCheckBoxMenuItem *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
    LogBrokerMonitor$5
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$6
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogBrokerMonitor$7
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$8
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$9
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
    LogBrokerMonitor$LogBrokerMonitorWindowAdaptor
        --> java.awt.event.WindowAdapter *
        --> java.awt.event.WindowEvent *
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
    LogFactor5Dialog
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.Dimension *
        --> java.awt.Font *
        --> java.awt.Frame *
        --> java.awt.GridBagConstraints *
        --> java.awt.GridBagLayout *
        --> java.awt.Insets *
        --> java.awt.Label *
        --> java.awt.LayoutManager *
        --> java.awt.Toolkit *
        --> java.awt.Window *
        --> java.lang.String *
        --> javax.swing.JDialog *
        --> javax.swing.JFrame *
        <-- org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5InputDialog
        <-- org.apache.log4j.lf5.viewer.LogFactor5LoadingDialog
    LogFactor5ErrorDialog
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.FlowLayout *
        --> java.awt.GridBagLayout *
        --> java.awt.LayoutManager *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JButton *
        --> javax.swing.JFrame *
        --> javax.swing.JPanel *
        <-- org.apache.log4j.lf5.util.LogFileParser
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog$1
    LogFactor5ErrorDialog$1
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogFactor5ErrorDialog
    LogFactor5InputDialog
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.FlowLayout *
        --> java.awt.LayoutManager *
        --> java.awt.Window *
        --> java.awt.event.ActionListener *
        --> java.awt.event.KeyListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JButton *
        --> javax.swing.JFrame *
        --> javax.swing.JLabel *
        --> javax.swing.JPanel *
        --> javax.swing.JTextField *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogFactor5Dialog
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$1
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$2
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog$3
    LogFactor5InputDialog$1
        --> java.awt.event.KeyAdapter *
        --> java.awt.event.KeyEvent *
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog
    LogFactor5InputDialog$2
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog
    LogFactor5InputDialog$3
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTextField *
        <-> org.apache.log4j.lf5.viewer.LogFactor5InputDialog
    LogFactor5LoadingDialog
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.FlowLayout *
        --> java.awt.GridBagLayout *
        --> java.awt.LayoutManager *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JFrame *
        --> javax.swing.JPanel *
        <-- org.apache.log4j.lf5.util.LogFileParser
        --> org.apache.log4j.lf5.viewer.LogFactor5Dialog
    LogTable
        --> java.awt.Font *
        --> java.awt.FontMetrics *
        --> java.awt.Graphics *
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Vector *
        --> javax.swing.JTable *
        --> javax.swing.JTextArea *
        --> javax.swing.ListSelectionModel *
        --> javax.swing.event.ListSelectionListener *
        --> javax.swing.table.TableCellRenderer *
        --> javax.swing.table.TableColumn *
        --> javax.swing.table.TableColumnModel *
        --> javax.swing.table.TableModel *
        --> org.apache.log4j.lf5.util.DateFormatManager
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$10
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$12
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$13
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$14
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$15
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$27
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$28
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$30
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$7
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$8
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$9
        <-> org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        --> org.apache.log4j.lf5.viewer.LogTableColumn
        --> org.apache.log4j.lf5.viewer.LogTableRowRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    LogTable$LogTableListSelectionListener
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> javax.swing.JTable *
        --> javax.swing.JTextArea *
        --> javax.swing.ListSelectionModel *
        --> javax.swing.event.ListSelectionEvent *
        --> javax.swing.event.ListSelectionListener *
        --> javax.swing.table.TableModel *
        <-> org.apache.log4j.lf5.viewer.LogTable
        --> org.apache.log4j.lf5.viewer.LogTableColumn
    LogTableColumn
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogTable
        <-- org.apache.log4j.lf5.viewer.LogTable$LogTableListSelectionListener
        --> org.apache.log4j.lf5.viewer.LogTableColumnFormatException
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    LogTableColumnFormatException
        --> java.lang.Exception *
        --> java.lang.String *
        <-- org.apache.log4j.lf5.viewer.LogTableColumn
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    LogTableModel
        --> java.lang.Object *
        --> javax.swing.table.DefaultTableModel *
    LogTableRowRenderer
        --> java.awt.Color *
        --> java.awt.Component *
        --> java.lang.Object *
        --> java.util.Map *
        --> javax.swing.JTable *
        --> javax.swing.table.DefaultTableCellRenderer *
        --> javax.swing.table.TableModel *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.viewer.FilteredLogTableModel
        <-- org.apache.log4j.lf5.viewer.LogTable
    TrackingAdjustmentListener
        --> java.awt.Adjustable *
        --> java.awt.event.AdjustmentEvent *
        --> java.awt.event.AdjustmentListener *
        --> java.lang.Object *
        <-- org.apache.log4j.lf5.viewer.LF5SwingUtils
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
org.apache.log4j.lf5.viewer.categoryexplorer
    CategoryAbstractCellEditor
        --> java.awt.Component *
        --> java.awt.event.MouseEvent *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.EventListener *
        --> java.util.EventObject *
        --> javax.swing.JTable *
        --> javax.swing.JTree *
        --> javax.swing.event.CellEditorListener *
        --> javax.swing.event.ChangeEvent *
        --> javax.swing.event.EventListenerList *
        --> javax.swing.table.TableCellEditor *
        --> javax.swing.tree.TreeCellEditor *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryElement
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
    CategoryExplorerLogRecordFilter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> javax.swing.tree.TreeNode *
        --> org.apache.log4j.lf5.LogRecord
        --> org.apache.log4j.lf5.LogRecordFilter
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
    CategoryExplorerModel
        --> java.awt.AWTEventMulticaster *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> javax.swing.SwingUtilities *
        --> javax.swing.tree.DefaultTreeModel *
        --> javax.swing.tree.MutableTreeNode *
        --> javax.swing.tree.TreeNode *
        --> javax.swing.tree.TreePath *
        --> org.apache.log4j.lf5.LogRecord
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    CategoryExplorerModel$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> javax.swing.tree.TreeNode *
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
    CategoryExplorerTree
        --> java.awt.event.MouseEvent *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JTree *
        --> javax.swing.event.TreeModelListener *
        --> javax.swing.tree.TreeCellEditor *
        --> javax.swing.tree.TreeCellRenderer *
        --> javax.swing.tree.TreeModel *
        --> javax.swing.tree.TreeNode *
        --> javax.swing.tree.TreePath *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$2
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$29
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    CategoryExplorerTree$1
        --> javax.swing.event.TreeModelEvent *
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.TreeModelAdapter
    CategoryImmediateEditor
        --> java.awt.Dimension *
        --> java.awt.Point *
        --> java.awt.Rectangle *
        --> java.awt.event.MouseEvent *
        --> java.lang.Object *
        --> java.util.EventObject *
        --> javax.swing.Icon *
        --> javax.swing.JTree *
        --> javax.swing.tree.DefaultTreeCellEditor *
        --> javax.swing.tree.DefaultTreeCellRenderer *
        --> javax.swing.tree.TreeCellEditor *
        --> javax.swing.tree.TreePath *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    CategoryNode
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.TreeNode *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    CategoryNodeEditor
        --> java.awt.Component *
        --> java.awt.event.ActionListener *
        --> java.awt.event.MouseListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> javax.swing.JCheckBox *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPopupMenu *
        --> javax.swing.JTree *
        --> javax.swing.tree.MutableTreeNode *
        --> javax.swing.tree.TreeNode *
        --> javax.swing.tree.TreePath *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryAbstractCellEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$1
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$2
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$3
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$4
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$5
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$6
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$7
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor$8
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
    CategoryNodeEditor$1
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JCheckBox *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$2
        --> java.awt.event.MouseAdapter *
        --> java.awt.event.MouseEvent *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$3
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$4
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$5
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$6
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$7
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditor$8
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        <-> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
    CategoryNodeEditorRenderer
        --> java.awt.Component *
        --> java.lang.Object *
        --> javax.swing.JCheckBox *
        --> javax.swing.JTree *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer
    CategoryNodeRenderer
        --> java.awt.Color *
        --> java.awt.Component *
        --> java.awt.Dimension *
        --> java.awt.FlowLayout *
        --> java.awt.LayoutManager *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.URL *
        --> javax.swing.Icon *
        --> javax.swing.ImageIcon *
        --> javax.swing.JCheckBox *
        --> javax.swing.JPanel *
        --> javax.swing.JTree *
        --> javax.swing.UIManager *
        --> javax.swing.tree.DefaultTreeCellRenderer *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryImmediateEditor
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeEditorRenderer
    CategoryPath
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.LinkedList *
        --> java.util.StringTokenizer *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$3
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor$4
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryElement
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerLogRecordFilter
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
    TreeModelAdapter
        --> java.lang.Object *
        --> javax.swing.event.TreeModelEvent *
        --> javax.swing.event.TreeModelListener *
        <-- org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree$1
org.apache.log4j.lf5.viewer.configure
    ConfigurationManager
        --> java.awt.Color *
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> javax.swing.JCheckBoxMenuItem *
        --> javax.swing.tree.TreePath *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> org.apache.log4j.lf5.LogLevel
        --> org.apache.log4j.lf5.LogLevelFormatException
        <-> org.apache.log4j.lf5.viewer.LogBrokerMonitor
        --> org.apache.log4j.lf5.viewer.LogTable
        --> org.apache.log4j.lf5.viewer.LogTableColumn
        --> org.apache.log4j.lf5.viewer.LogTableColumnFormatException
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerModel
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryExplorerTree
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode
        --> org.apache.log4j.lf5.viewer.categoryexplorer.CategoryPath
        --> org.w3c.dom.Document *
        --> org.w3c.dom.NamedNodeMap *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
    MRUFileManager
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.net.URL *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        <-- org.apache.log4j.lf5.viewer.LogBrokerMonitor
org.apache.log4j.net
    DefaultEvaluator
        --> java.lang.Object *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.net.SMTPAppender
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.TriggeringEventEvaluator
    JMSAppender
        --> java.io.Serializable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> javax.jms.JMSException *
        --> javax.jms.Message *
        --> javax.jms.ObjectMessage *
        --> javax.jms.Topic *
        --> javax.jms.TopicConnection *
        --> javax.jms.TopicConnectionFactory *
        --> javax.jms.TopicPublisher *
        --> javax.jms.TopicSession *
        --> javax.naming.Context *
        --> javax.naming.InitialContext *
        --> javax.naming.NameNotFoundException *
        --> javax.naming.NamingException *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    JMSSink
        --> java.io.BufferedReader *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> javax.jms.JMSException *
        --> javax.jms.Message *
        --> javax.jms.MessageListener *
        --> javax.jms.ObjectMessage *
        --> javax.jms.Topic *
        --> javax.jms.TopicConnection *
        --> javax.jms.TopicConnectionFactory *
        --> javax.jms.TopicSession *
        --> javax.jms.TopicSubscriber *
        --> javax.naming.Context *
        --> javax.naming.InitialContext *
        --> javax.naming.NameNotFoundException *
        --> javax.naming.NamingException *
        --> org.apache.log4j.Logger
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.xml.DOMConfigurator
    SMTPAppender
        --> java.io.ByteArrayOutputStream *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Date *
        --> java.util.Properties *
        --> javax.mail.Address *
        --> javax.mail.Authenticator *
        --> javax.mail.BodyPart *
        --> javax.mail.Message *
        --> javax.mail.Message$RecipientType *
        --> javax.mail.MessagingException *
        --> javax.mail.Multipart *
        --> javax.mail.Session *
        --> javax.mail.Transport *
        --> javax.mail.internet.AddressException *
        --> javax.mail.internet.InternetAddress *
        --> javax.mail.internet.InternetHeaders *
        --> javax.mail.internet.MimeBodyPart *
        --> javax.mail.internet.MimeMessage *
        --> javax.mail.internet.MimeMultipart *
        --> javax.mail.internet.MimeUtility *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Layout
        --> org.apache.log4j.helpers.CyclicBuffer
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.net.DefaultEvaluator
        <-> org.apache.log4j.net.SMTPAppender$1
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        --> org.apache.log4j.spi.TriggeringEventEvaluator
        --> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.UnrecognizedElementHandler
        --> org.w3c.dom.Element *
    SMTPAppender$1
        --> java.lang.String *
        --> javax.mail.Authenticator *
        --> javax.mail.PasswordAuthentication *
        <-> org.apache.log4j.net.SMTPAppender
    SimpleSocketServer
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.net.SocketNode
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.xml.DOMConfigurator
    SocketAppender
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.Socket *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.net.SocketAppender$Connector
        --> org.apache.log4j.net.ZeroConfSupport
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    SocketAppender$Connector
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.net.ConnectException *
        --> java.net.InetAddress *
        --> java.net.Socket *
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.net.SocketAppender
    SocketHubAppender
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectOutputStream *
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.ServerSocket *
        --> java.util.Vector *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.helpers.CyclicBuffer
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.net.SocketHubAppender$ServerMonitor
        --> org.apache.log4j.net.ZeroConfSupport
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    SocketHubAppender$ServerMonitor
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> java.net.SocketException *
        --> java.util.Vector *
        --> org.apache.log4j.helpers.CyclicBuffer
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.net.SocketHubAppender
        --> org.apache.log4j.spi.LoggingEvent
    SocketNode
        --> java.io.BufferedInputStream *
        --> java.io.EOFException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectInputStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.Socket *
        --> java.net.SocketException *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketServer
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.LoggingEvent
    SocketServer
        --> java.io.File *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.InetAddress *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> java.util.Hashtable *
        --> org.apache.log4j.Hierarchy
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.net.SocketNode
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.RootLogger
    SyslogAppender
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.PrintStream *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.net.InetAddress *
        --> java.net.UnknownHostException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Locale *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        --> org.apache.log4j.helpers.SyslogQuietWriter
        --> org.apache.log4j.helpers.SyslogWriter
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
    TelnetAppender
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.lang.InterruptedException *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Layout
        <-> org.apache.log4j.net.TelnetAppender$SocketHandler
        --> org.apache.log4j.spi.LoggingEvent
    TelnetAppender$SocketHandler
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.Vector *
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.net.TelnetAppender
    ZeroConfSupport
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender
org.apache.log4j.nt
    NTEventLogAppender
        --> java.lang.Exception *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.UnsatisfiedLinkError *
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.TTCCLayout
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.LoggingEvent
org.apache.log4j.or
    DefaultRenderer
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.or.ObjectRenderer
        <-- org.apache.log4j.or.RendererMap
    ObjectRenderer
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.or.DefaultRenderer
        <-- org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.or.ThreadGroupRenderer
        <-- org.apache.log4j.or.jms.MessageRenderer
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.log4j.spi.RendererSupport
    RendererMap
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.or.DefaultRenderer
        --> org.apache.log4j.or.ObjectRenderer
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-> org.apache.log4j.spi.RendererSupport
        <-- org.apache.log4j.xml.DOMConfigurator
    ThreadGroupRenderer
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.ThreadGroup *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.or.ObjectRenderer
org.apache.log4j.or.jms
    MessageRenderer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> javax.jms.Destination *
        --> javax.jms.JMSException *
        --> javax.jms.Message *
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.or.ObjectRenderer
org.apache.log4j.or.sax
    AttributesRenderer
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.or.ObjectRenderer
        --> org.xml.sax.Attributes *
org.apache.log4j.pattern
    BridgePatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        <-- org.apache.log4j.EnhancedPatternLayout
        --> org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.pattern.BridgePatternParser
        --> org.apache.log4j.pattern.FormattingInfo
        --> org.apache.log4j.pattern.LiteralPatternConverter
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.pattern.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    BridgePatternParser
        --> java.lang.String *
        <-- org.apache.log4j.EnhancedPatternLayout
        --> org.apache.log4j.helpers.PatternConverter
        --> org.apache.log4j.helpers.PatternParser
        --> org.apache.log4j.pattern.BridgePatternConverter
    CachedDateFormat
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormat *
        --> java.text.FieldPosition *
        --> java.text.NumberFormat *
        --> java.text.ParsePosition *
        --> java.util.Date *
        --> java.util.TimeZone *
        <-- org.apache.log4j.pattern.DatePatternConverter
    ClassNamePatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.NamePatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    DatePatternConverter
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.TimeZone *
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.pattern.CachedDateFormat
        --> org.apache.log4j.pattern.DatePatternConverter$DefaultZoneDateFormat
        <-- org.apache.log4j.pattern.FileDatePatternConverter
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    DatePatternConverter$DefaultZoneDateFormat
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormat *
        --> java.text.FieldPosition *
        --> java.text.ParsePosition *
        --> java.util.Date *
        --> java.util.TimeZone *
        <-- org.apache.log4j.pattern.DatePatternConverter
    FileDatePatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.pattern.DatePatternConverter
        --> org.apache.log4j.pattern.PatternConverter
    FileLocationPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    FormattingInfo
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.PatternParser
    FullLocationPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    IntegerPatternConverter
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Date *
        --> org.apache.log4j.pattern.PatternConverter
    LevelPatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.Level
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    LineLocationPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    LineSeparatorPatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    LiteralPatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.BridgePatternConverter
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.PatternParser
        --> org.apache.log4j.spi.LoggingEvent
    LogEvent
        --> java.io.IOException *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.MDC
        --> org.apache.log4j.NDC
        --> org.apache.log4j.Priority
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        --> org.apache.log4j.or.RendererMap
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.RendererSupport
        --> org.apache.log4j.spi.ThrowableInformation
    LoggerPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.NamePatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    LoggingEventPatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.FileLocationPatternConverter
        <-- org.apache.log4j.pattern.FullLocationPatternConverter
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LineLocationPatternConverter
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.pattern.LiteralPatternConverter
        <-- org.apache.log4j.pattern.MessagePatternConverter
        <-- org.apache.log4j.pattern.MethodLocationPatternConverter
        <-- org.apache.log4j.pattern.NDCPatternConverter
        <-- org.apache.log4j.pattern.NamePatternConverter
        --> org.apache.log4j.pattern.PatternConverter
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
        <-- org.apache.log4j.pattern.SequenceNumberPatternConverter
        <-- org.apache.log4j.pattern.ThreadPatternConverter
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    MessagePatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    MethodLocationPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    NDCPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    NameAbbreviator
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.List *
        <-> org.apache.log4j.pattern.NameAbbreviator$DropElementAbbreviator
        <-> org.apache.log4j.pattern.NameAbbreviator$MaxElementAbbreviator
        <-> org.apache.log4j.pattern.NameAbbreviator$NOPAbbreviator
        <-> org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
        --> org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment
        <-- org.apache.log4j.pattern.NamePatternConverter
    NameAbbreviator$DropElementAbbreviator
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.log4j.pattern.NameAbbreviator
    NameAbbreviator$MaxElementAbbreviator
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.log4j.pattern.NameAbbreviator
    NameAbbreviator$NOPAbbreviator
        --> java.lang.StringBuffer *
        <-> org.apache.log4j.pattern.NameAbbreviator
    NameAbbreviator$PatternAbbreviator
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.List *
        <-> org.apache.log4j.pattern.NameAbbreviator
        --> org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment
    NameAbbreviator$PatternAbbreviatorFragment
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.NameAbbreviator
        <-- org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator
    NamePatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.ClassNamePatternConverter
        <-- org.apache.log4j.pattern.LoggerPatternConverter
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.pattern.NameAbbreviator
    PatternConverter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.FileDatePatternConverter
        <-- org.apache.log4j.pattern.IntegerPatternConverter
        <-- org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.PatternParser
    PatternParser
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.pattern.BridgePatternConverter
        --> org.apache.log4j.pattern.FormattingInfo
        --> org.apache.log4j.pattern.LiteralPatternConverter
        --> org.apache.log4j.pattern.PatternConverter
        --> org.apache.log4j.pattern.PatternParser$ReadOnlyMap
    PatternParser$ReadOnlyMap
        --> java.lang.Object *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Set *
        <-- org.apache.log4j.pattern.PatternParser
    PropertiesPatternConverter
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.Set *
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.MDCKeySetExtractor
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    RelativeTimePatternConverter
        --> java.lang.Long *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.pattern.RelativeTimePatternConverter$CachedTimestamp
        --> org.apache.log4j.spi.LoggingEvent
    RelativeTimePatternConverter$CachedTimestamp
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
    SequenceNumberPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    ThreadPatternConverter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
    ThrowableInformationPatternConverter
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.pattern.LoggingEventPatternConverter
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableInformation
org.apache.log4j.rewrite
    MapRewritePolicy
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.rewrite.RewritePolicy
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableInformation
    PropertyRewritePolicy
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.rewrite.RewritePolicy
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableInformation
    ReflectionRewritePolicy
        --> java.beans.BeanInfo *
        --> java.beans.Introspector *
        --> java.beans.PropertyDescriptor *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.HashMap *
        --> java.util.Map *
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.rewrite.RewritePolicy
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableInformation
    RewriteAppender
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.helpers.AppenderAttachableImpl
        --> org.apache.log4j.rewrite.RewritePolicy
        --> org.apache.log4j.spi.AppenderAttachable
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        --> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.UnrecognizedElementHandler
        --> org.w3c.dom.Element *
    RewritePolicy
        --> java.lang.Object *
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        --> org.apache.log4j.spi.LoggingEvent
org.apache.log4j.spi
    AppenderAttachable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> org.apache.log4j.Appender
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.Category
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.xml.DOMConfigurator
    Configurator
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        --> org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator
    DefaultRepositorySelector
        --> java.lang.Object *
        <-- org.apache.log4j.LogManager
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.RepositorySelector
    ErrorCode
        --> java.lang.Object *
    ErrorHandler
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.FileAppender
        --> org.apache.log4j.Logger
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.helpers.CountingQuietWriter
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.QuietWriter
        <-- org.apache.log4j.helpers.SyslogQuietWriter
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SyslogAppender
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.xml.DOMConfigurator
    Filter
        --> java.lang.Object *
        <-- org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.OptionHandler
        <-- org.apache.log4j.varia.DenyAllFilter
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.LevelRangeFilter
        <-- org.apache.log4j.varia.StringMatchFilter
        <-- org.apache.log4j.xml.DOMConfigurator
    HierarchyEventListener
        --> java.lang.Object *
        --> org.apache.log4j.Appender
        <-> org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.NOPLoggerRepository
    LocationInfo
        --> java.io.InterruptedIOException *
        --> java.io.PrintWriter *
        --> java.io.Serializable *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.HTMLLayout
        --> org.apache.log4j.Layout
        <-- org.apache.log4j.chainsaw.EventDetails
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.pattern.ClassNamePatternConverter
        <-- org.apache.log4j.pattern.FileLocationPatternConverter
        <-- org.apache.log4j.pattern.FullLocationPatternConverter
        <-- org.apache.log4j.pattern.LineLocationPatternConverter
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.MethodLocationPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.XMLLayout
    LoggerFactory
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.log4j.DefaultCategoryFactory
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.LogManager
        <-> org.apache.log4j.Logger
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.xml.DOMConfigurator
    LoggerRepository
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> org.apache.log4j.Appender
        <-> org.apache.log4j.Category
        <-- org.apache.log4j.Hierarchy
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogManager
        <-> org.apache.log4j.Logger
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.PropertyWatchdog
        <-- org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.jmx.HierarchyDynamicMBean
        <-- org.apache.log4j.lf5.DefaultLF5Configurator
        <-- org.apache.log4j.net.SimpleSocketServer
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SocketServer
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.Configurator
        <-- org.apache.log4j.spi.DefaultRepositorySelector
        --> org.apache.log4j.spi.HierarchyEventListener
        --> org.apache.log4j.spi.LoggerFactory
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.spi.NOPLogger
        <-- org.apache.log4j.spi.NOPLoggerRepository
        <-- org.apache.log4j.spi.RepositorySelector
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.varia.ReloadingPropertyConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.XMLWatchdog
    LoggingEvent
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> java.util.Set *
        <-- org.apache.log4j.Appender
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.AsyncAppender
        <-- org.apache.log4j.AsyncAppender$DiscardSummary
        <-- org.apache.log4j.AsyncAppender$Dispatcher
        <-> org.apache.log4j.Category
        <-- org.apache.log4j.DailyRollingFileAppender
        <-- org.apache.log4j.Dispatcher
        <-- org.apache.log4j.EnhancedPatternLayout
        <-- org.apache.log4j.HTMLLayout
        <-- org.apache.log4j.Layout
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogMF
        <-- org.apache.log4j.LogSF
        <-- org.apache.log4j.LogXF
        --> org.apache.log4j.MDC
        --> org.apache.log4j.NDC
        <-- org.apache.log4j.PatternLayout
        --> org.apache.log4j.Priority
        <-- org.apache.log4j.RollingFileAppender
        <-- org.apache.log4j.SimpleLayout
        <-- org.apache.log4j.TTCCLayout
        <-- org.apache.log4j.WriterAppender
        <-- org.apache.log4j.chainsaw.EventDetails
        <-- org.apache.log4j.chainsaw.LoggingReceiver$Slurper
        <-- org.apache.log4j.helpers.AppenderAttachableImpl
        <-- org.apache.log4j.helpers.BoundedFIFO
        <-- org.apache.log4j.helpers.CyclicBuffer
        <-- org.apache.log4j.helpers.DateLayout
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.helpers.MDCKeySetExtractor
        <-- org.apache.log4j.helpers.OnlyOnceErrorHandler
        <-- org.apache.log4j.helpers.PatternConverter
        <-- org.apache.log4j.helpers.PatternParser$BasicPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$CategoryPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$DatePatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LiteralPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$LocationPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$MDCPatternConverter
        <-- org.apache.log4j.helpers.PatternParser$NamedPatternConverter
        <-- org.apache.log4j.jdbc.JDBCAppender
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.net.DefaultEvaluator
        <-- org.apache.log4j.net.JMSAppender
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SocketAppender
        <-- org.apache.log4j.net.SocketHubAppender
        <-- org.apache.log4j.net.SocketHubAppender$ServerMonitor
        <-- org.apache.log4j.net.SocketNode
        <-- org.apache.log4j.net.SyslogAppender
        <-- org.apache.log4j.net.TelnetAppender
        <-- org.apache.log4j.nt.NTEventLogAppender
        --> org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.BridgePatternConverter
        <-- org.apache.log4j.pattern.ClassNamePatternConverter
        <-- org.apache.log4j.pattern.DatePatternConverter
        <-- org.apache.log4j.pattern.FileLocationPatternConverter
        <-- org.apache.log4j.pattern.FullLocationPatternConverter
        <-- org.apache.log4j.pattern.LevelPatternConverter
        <-- org.apache.log4j.pattern.LineLocationPatternConverter
        <-- org.apache.log4j.pattern.LineSeparatorPatternConverter
        <-- org.apache.log4j.pattern.LiteralPatternConverter
        <-- org.apache.log4j.pattern.LoggerPatternConverter
        <-- org.apache.log4j.pattern.LoggingEventPatternConverter
        <-- org.apache.log4j.pattern.MessagePatternConverter
        <-- org.apache.log4j.pattern.MethodLocationPatternConverter
        <-- org.apache.log4j.pattern.NDCPatternConverter
        <-- org.apache.log4j.pattern.PropertiesPatternConverter
        <-- org.apache.log4j.pattern.RelativeTimePatternConverter
        <-- org.apache.log4j.pattern.SequenceNumberPatternConverter
        <-- org.apache.log4j.pattern.ThreadPatternConverter
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.rewrite.RewritePolicy
        <-- org.apache.log4j.spi.ErrorHandler
        <-- org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.NOPLogger
        --> org.apache.log4j.spi.RendererSupport
        --> org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.spi.TriggeringEventEvaluator
        <-- org.apache.log4j.varia.DenyAllFilter
        <-- org.apache.log4j.varia.FallbackErrorHandler
        <-- org.apache.log4j.varia.LevelMatchFilter
        <-- org.apache.log4j.varia.LevelRangeFilter
        <-- org.apache.log4j.varia.NullAppender
        <-- org.apache.log4j.varia.StringMatchFilter
        <-- org.apache.log4j.xml.XMLLayout
    NOPLogger
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.ResourceBundle *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.LoggingEvent
        <-> org.apache.log4j.spi.NOPLoggerRepository
    NOPLoggerRepository
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Category
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.spi.HierarchyEventListener
        --> org.apache.log4j.spi.LoggerFactory
        --> org.apache.log4j.spi.LoggerRepository
        <-> org.apache.log4j.spi.NOPLogger
    NullWriter
        --> java.io.Writer *
        <-- org.apache.log4j.spi.VectorWriter
    OptionHandler
        --> java.lang.Object *
        <-- org.apache.log4j.AppenderSkeleton
        <-- org.apache.log4j.Layout
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.config.PropertySetter
        <-- org.apache.log4j.jmx.AppenderDynamicMBean
        <-- org.apache.log4j.jmx.LayoutDynamicMBean
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.spi.ErrorHandler
        <-- org.apache.log4j.spi.Filter
    RendererSupport
        --> java.lang.Class *
        --> java.lang.Object *
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.or.ObjectRenderer
        <-> org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.spi.LoggingEvent
        <-- org.apache.log4j.xml.DOMConfigurator
    RepositorySelector
        --> java.lang.Object *
        <-- org.apache.log4j.LogManager
        <-- org.apache.log4j.spi.DefaultRepositorySelector
        --> org.apache.log4j.spi.LoggerRepository
    RootCategory
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Level
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.LogLog
    RootLogger
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Level
        <-- org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.net.SocketServer
    ThrowableInformation
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> org.apache.log4j.Category
        --> org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.lf5.LF5Appender
        <-- org.apache.log4j.lf5.Log4JLogRecord
        <-- org.apache.log4j.pattern.LogEvent
        <-- org.apache.log4j.pattern.ThrowableInformationPatternConverter
        <-- org.apache.log4j.rewrite.MapRewritePolicy
        <-- org.apache.log4j.rewrite.PropertyRewritePolicy
        <-- org.apache.log4j.rewrite.ReflectionRewritePolicy
        --> org.apache.log4j.spi.LoggerRepository
        <-- org.apache.log4j.spi.LoggingEvent
        --> org.apache.log4j.spi.ThrowableRenderer
        --> org.apache.log4j.spi.ThrowableRendererSupport
    ThrowableRenderer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.apache.log4j.DefaultThrowableRenderer
        <-- org.apache.log4j.EnhancedThrowableRenderer
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.spi.ThrowableInformation
        <-- org.apache.log4j.spi.ThrowableRendererSupport
        <-- org.apache.log4j.xml.DOMConfigurator
    ThrowableRendererSupport
        --> java.lang.Object *
        <-- org.apache.log4j.Hierarchy
        <-- org.apache.log4j.PropertyConfigurator
        <-- org.apache.log4j.spi.ThrowableInformation
        --> org.apache.log4j.spi.ThrowableRenderer
        <-- org.apache.log4j.xml.DOMConfigurator
    TriggeringEventEvaluator
        --> java.lang.Object *
        <-- org.apache.log4j.net.DefaultEvaluator
        <-- org.apache.log4j.net.SMTPAppender
        --> org.apache.log4j.spi.LoggingEvent
    VectorWriter
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.log4j.spi.NullWriter
org.apache.log4j.varia
    DenyAllFilter
        --> java.lang.String *
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggingEvent
    ExternallyRolledFileAppender
        --> java.lang.String *
        --> org.apache.log4j.RollingFileAppender
        <-> org.apache.log4j.varia.HUP
        <-- org.apache.log4j.varia.HUPNode
    FallbackErrorHandler
        --> java.io.InterruptedIOException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Logger
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.LoggingEvent
    HUP
        --> java.io.IOException *
        --> java.io.InterruptedIOException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.net.InetAddress *
        --> java.net.ServerSocket *
        --> java.net.Socket *
        --> org.apache.log4j.helpers.LogLog
        <-> org.apache.log4j.varia.ExternallyRolledFileAppender
        --> org.apache.log4j.varia.HUPNode
    HUPNode
        --> java.io.DataInputStream *
        --> java.io.DataOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InterruptedIOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.Socket *
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.varia.ExternallyRolledFileAppender
        <-- org.apache.log4j.varia.HUP
    LevelMatchFilter
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.log4j.Level
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggingEvent
    LevelRangeFilter
        --> org.apache.log4j.Level
        --> org.apache.log4j.Priority
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggingEvent
    NullAppender
        --> org.apache.log4j.AppenderSkeleton
        --> org.apache.log4j.spi.LoggingEvent
    ReloadingPropertyConfigurator
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.net.URL *
        --> org.apache.log4j.PropertyConfigurator
        --> org.apache.log4j.spi.Configurator
        --> org.apache.log4j.spi.LoggerRepository
    Roller
        --> java.io.DataInputStream *
        --> java.io.DataOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.Socket *
        --> org.apache.log4j.BasicConfigurator
        --> org.apache.log4j.Logger
    StringMatchFilter
        --> java.lang.String *
        --> org.apache.log4j.helpers.OptionConverter
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggingEvent
org.apache.log4j.xml
    DOMConfigurator
        --> java.io.InputStream *
        --> java.io.InterruptedIOException *
        --> java.io.Reader *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.net.URL *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.FactoryConfigurationError *
        --> org.apache.log4j.Appender
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.Logger
        --> org.apache.log4j.config.PropertySetter
        --> org.apache.log4j.helpers.Loader
        --> org.apache.log4j.helpers.LogLog
        --> org.apache.log4j.helpers.OptionConverter
        <-- org.apache.log4j.net.JMSSink
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.net.SimpleSocketServer
        --> org.apache.log4j.or.RendererMap
        <-- org.apache.log4j.rewrite.RewriteAppender
        --> org.apache.log4j.spi.AppenderAttachable
        --> org.apache.log4j.spi.Configurator
        --> org.apache.log4j.spi.ErrorHandler
        --> org.apache.log4j.spi.Filter
        --> org.apache.log4j.spi.LoggerFactory
        --> org.apache.log4j.spi.LoggerRepository
        --> org.apache.log4j.spi.RendererSupport
        --> org.apache.log4j.spi.ThrowableRenderer
        --> org.apache.log4j.spi.ThrowableRendererSupport
        <-> org.apache.log4j.xml.DOMConfigurator$1
        <-> org.apache.log4j.xml.DOMConfigurator$2
        <-> org.apache.log4j.xml.DOMConfigurator$3
        <-> org.apache.log4j.xml.DOMConfigurator$4
        <-> org.apache.log4j.xml.DOMConfigurator$5
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.apache.log4j.xml.Log4jEntityResolver
        --> org.apache.log4j.xml.SAXErrorHandler
        --> org.apache.log4j.xml.UnrecognizedElementHandler
        <-> org.apache.log4j.xml.XMLWatchdog
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.NamedNodeMap *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.ErrorHandler *
        --> org.xml.sax.InputSource *
    DOMConfigurator$1
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> javax.xml.parsers.DocumentBuilder *
        <-> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.w3c.dom.Document *
        --> org.xml.sax.SAXException *
    DOMConfigurator$2
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.URL *
        --> java.net.URLConnection *
        --> javax.xml.parsers.DocumentBuilder *
        <-> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.w3c.dom.Document *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
    DOMConfigurator$3
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> javax.xml.parsers.DocumentBuilder *
        <-> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.w3c.dom.Document *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
    DOMConfigurator$4
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> javax.xml.parsers.DocumentBuilder *
        <-> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.w3c.dom.Document *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
    DOMConfigurator$5
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> javax.xml.parsers.DocumentBuilder *
        <-> org.apache.log4j.xml.DOMConfigurator
        --> org.apache.log4j.xml.DOMConfigurator$ParseAction
        --> org.w3c.dom.Document *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
    DOMConfigurator$ParseAction
        --> java.io.IOException *
        --> java.lang.Object *
        --> javax.xml.parsers.DocumentBuilder *
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        --> org.w3c.dom.Document *
        --> org.xml.sax.SAXException *
    Log4jEntityResolver
        --> java.io.ByteArrayInputStream *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.xml.DOMConfigurator
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.InputSource *
    SAXErrorHandler
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.log4j.helpers.LogLog
        <-- org.apache.log4j.xml.DOMConfigurator
        --> org.xml.sax.ErrorHandler *
        --> org.xml.sax.SAXParseException *
    UnrecognizedElementHandler
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.util.Properties *
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.xml.DOMConfigurator
        --> org.w3c.dom.Element *
    XMLLayout
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> java.util.Set *
        --> org.apache.log4j.Layout
        --> org.apache.log4j.Level
        --> org.apache.log4j.helpers.Transform
        --> org.apache.log4j.spi.LocationInfo
        --> org.apache.log4j.spi.LoggingEvent
    XMLWatchdog
        --> java.lang.String *
        --> org.apache.log4j.LogManager
        --> org.apache.log4j.helpers.FileWatchdog
        --> org.apache.log4j.spi.LoggerRepository
        <-> org.apache.log4j.xml.DOMConfigurator
org.apache.tools.ant
    AntClassLoader
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassFormatError *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        <-> org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.SubBuildListener
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        --> org.apache.tools.ant.util.CollectionUtils
        --> org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JavaEnvUtils
        --> org.apache.tools.ant.util.LoaderUtils
    AntClassLoader$ResourceEnumeration
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
    AntTypeDefinition
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$MyAntTypeDefinition
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
    BuildEvent
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.EventObject *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.BuildListener
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.NoBannerLogger
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.SubBuildListener
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
    BuildException
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntClassLoader$ResourceEnumeration
        <-- org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.DynamicAttribute
        <-- org.apache.tools.ant.DynamicAttributeNS
        <-- org.apache.tools.ant.DynamicElement
        <-- org.apache.tools.ant.DynamicElementNS
        <-- org.apache.tools.ant.Executor
        <-- org.apache.tools.ant.ExitStatusException
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.Location
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.UnsupportedAttributeException
        <-- org.apache.tools.ant.UnsupportedElementException
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsString
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceString
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.DefaultExecutor
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.InputHandler
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner$BufferLine
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-- org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PathConvert$MapEntry
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Sequential
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Param
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.JavacExternal
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        <-- org.apache.tools.ant.taskdefs.condition.And
        <-- org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.Contains
        <-- org.apache.tools.ant.taskdefs.condition.Equals
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.IsFalse
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.IsSet
        <-- org.apache.tools.ant.taskdefs.condition.IsTrue
        <-- org.apache.tools.ant.taskdefs.condition.Not
        <-- org.apache.tools.ant.taskdefs.condition.Or
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsUser
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Assertions$BaseAssertion
        <-- org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.Environment
        <-- org.apache.tools.ant.types.Environment$Variable
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PatternSet$NameEntry
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.PropertySet$PropertyRef
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ScriptRunner
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.apache.tools.ant.util.regexp.Regexp
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.ant.util.regexp.RegexpMatcher
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- spoon.SpoonTask
    BuildListener
        --> java.lang.Object *
        --> java.util.EventListener *
        <-- org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildEvent
        <-- org.apache.tools.ant.BuildLogger
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.SubBuildListener
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
    BuildLogger
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> org.apache.tools.ant.BuildListener
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
    ComponentHelper
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Class[] *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.ref.WeakReference *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Properties *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.Location
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskAdapter
        <-> org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Definer
        --> org.apache.tools.ant.taskdefs.Definer$OnError
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        --> org.apache.tools.ant.taskdefs.Typedef
    ComponentHelper$AntTypeTable
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> org.apache.tools.ant.AntTypeDefinition
        <-- org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.Project
    DefaultLogger
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildLogger
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.listener.AnsiColorLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.Ant
        --> org.apache.tools.ant.util.DateUtils
        --> org.apache.tools.ant.util.StringUtils
    DemuxInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        <-- org.apache.tools.ant.Main
        --> org.apache.tools.ant.Project
    DemuxOutputStream
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.DemuxOutputStream$1
        --> org.apache.tools.ant.DemuxOutputStream$BufferInfo
        <-- org.apache.tools.ant.Main
        --> org.apache.tools.ant.Project
    DemuxOutputStream$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.DemuxOutputStream
        <-- org.apache.tools.ant.DemuxOutputStream$BufferInfo
    DemuxOutputStream$BufferInfo
        --> java.io.ByteArrayOutputStream *
        --> java.lang.Object *
        <-- org.apache.tools.ant.DemuxOutputStream
        --> org.apache.tools.ant.DemuxOutputStream$1
    Diagnostics
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Error *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> javax.xml.parsers.SAXParser *
        --> javax.xml.parsers.SAXParserFactory *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Diagnostics$1
        <-> org.apache.tools.ant.Main
        --> org.apache.tools.ant.util.LoaderUtils
    Diagnostics$1
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.Diagnostics
    DirectoryScanner
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.IllegalStateException *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.FileScanner
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Resource
        --> org.apache.tools.ant.types.ResourceFactory
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.ZipScanner
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.SelectorScanner
        --> org.apache.tools.ant.types.selectors.SelectorUtils
        --> org.apache.tools.ant.util.FileUtils
        <-- spoon.SpoonTask
    DynamicAttribute
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DynamicConfigurator
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.taskdefs.MacroInstance
    DynamicAttributeNS
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DynamicConfiguratorNS
        <-- org.apache.tools.ant.IntrospectionHelper
    DynamicConfigurator
        --> java.lang.Object *
        --> org.apache.tools.ant.DynamicAttribute
        --> org.apache.tools.ant.DynamicElement
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
    DynamicConfiguratorNS
        --> java.lang.Object *
        --> org.apache.tools.ant.DynamicAttributeNS
        --> org.apache.tools.ant.DynamicElementNS
    DynamicElement
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DynamicConfigurator
        <-- org.apache.tools.ant.IntrospectionHelper
    DynamicElementNS
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DynamicConfiguratorNS
        <-- org.apache.tools.ant.IntrospectionHelper
    Executor
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.helper.DefaultExecutor
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
    ExitException
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.types.Permissions$MySM
    ExitStatusException
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.taskdefs.Exit
    FileScanner
        --> java.io.File *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.ZipFileSet
    IntrospectionHelper
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        --> org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.DynamicAttribute
        --> org.apache.tools.ant.DynamicAttributeNS
        --> org.apache.tools.ant.DynamicElement
        --> org.apache.tools.ant.DynamicElementNS
        <-> org.apache.tools.ant.IntrospectionHelper$1
        <-> org.apache.tools.ant.IntrospectionHelper$10
        <-> org.apache.tools.ant.IntrospectionHelper$2
        <-> org.apache.tools.ant.IntrospectionHelper$3
        <-> org.apache.tools.ant.IntrospectionHelper$4
        <-> org.apache.tools.ant.IntrospectionHelper$5
        <-> org.apache.tools.ant.IntrospectionHelper$6
        <-> org.apache.tools.ant.IntrospectionHelper$7
        <-> org.apache.tools.ant.IntrospectionHelper$8
        <-> org.apache.tools.ant.IntrospectionHelper$9
        <-> org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-> org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        --> org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.UnsupportedAttributeException
        --> org.apache.tools.ant.UnsupportedElementException
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.taskdefs.AntStructure
        --> org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    IntrospectionHelper$1
        --> java.lang.Object *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
    IntrospectionHelper$10
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
    IntrospectionHelper$2
        --> java.lang.Object *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
    IntrospectionHelper$3
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$4
        --> java.lang.Character *
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$5
        --> java.lang.Boolean *
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$6
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$7
        --> java.io.File *
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$8
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.types.EnumeratedAttribute
    IntrospectionHelper$9
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        --> org.apache.tools.ant.Project
    IntrospectionHelper$AddNestedCreator
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
    IntrospectionHelper$AttributeSetter
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        --> org.apache.tools.ant.Project
    IntrospectionHelper$CreateNestedCreator
        --> java.lang.IllegalAccessException *
        --> java.lang.Object *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
    IntrospectionHelper$Creator
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$1
        --> org.apache.tools.ant.IntrospectionHelper$NestedCreator
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.UnknownElement
    IntrospectionHelper$NestedCreator
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$1
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$2
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.Project
    Location
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.Target
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        <-- org.apache.tools.ant.taskdefs.GUnzip
        <-- org.apache.tools.ant.taskdefs.GZip
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        --> org.apache.tools.ant.util.FileUtils
        --> org.xml.sax.Locator *
    MagicNames
        --> java.lang.Object *
        --> java.lang.String *
    Main
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Error *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NullPointerException *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.SecurityException *
        --> java.lang.SecurityManager *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        --> org.apache.tools.ant.BuildLogger
        --> org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.DemuxInputStream
        --> org.apache.tools.ant.DemuxOutputStream
        <-> org.apache.tools.ant.Diagnostics
        --> org.apache.tools.ant.ExitStatusException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.input.DefaultInputHandler
        --> org.apache.tools.ant.input.InputHandler
        --> org.apache.tools.ant.launch.AntMain *
    NoBannerLogger
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.util.StringUtils
    PathTokenizer
        --> java.io.File *
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.NoSuchElementException *
        --> java.util.StringTokenizer *
        <-- org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.types.Path
    Project
        --> java.io.EOFException *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Class[] *
        --> java.lang.Exception *
        --> java.lang.LinkageError *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.ThreadGroup *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Properties *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        <-> org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.AntTypeDefinition
        <-> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        <-> org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.ComponentHelper$AntTypeTable
        <-- org.apache.tools.ant.DemuxInputStream
        <-- org.apache.tools.ant.DemuxOutputStream
        <-> org.apache.tools.ant.Executor
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$1
        <-- org.apache.tools.ant.IntrospectionHelper$10
        <-- org.apache.tools.ant.IntrospectionHelper$2
        <-- org.apache.tools.ant.IntrospectionHelper$3
        <-- org.apache.tools.ant.IntrospectionHelper$4
        <-- org.apache.tools.ant.IntrospectionHelper$5
        <-- org.apache.tools.ant.IntrospectionHelper$6
        <-- org.apache.tools.ant.IntrospectionHelper$7
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.IntrospectionHelper$9
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$AttributeSetter
        <-- org.apache.tools.ant.IntrospectionHelper$CreateNestedCreator
        <-- org.apache.tools.ant.IntrospectionHelper$Creator
        <-- org.apache.tools.ant.IntrospectionHelper$NestedCreator
        <-- org.apache.tools.ant.Main
        --> org.apache.tools.ant.PathTokenizer
        <-> org.apache.tools.ant.Project$AntRefTable
        <-> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.ProjectHelper
        <-> org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.SubBuildListener
        <-> org.apache.tools.ant.Target
        <-> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.TypeAdapter
        <-> org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.DefaultExecutor
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.helper.SingleCheckExecutor
        --> org.apache.tools.ant.input.DefaultInputHandler
        --> org.apache.tools.ant.input.InputHandler
        <-- org.apache.tools.ant.listener.MailLogger
        --> org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$PropertyOutputStream
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$MyAntTypeDefinition
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Param
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.IsSet
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.DataType
        <-> org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.DirSet
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FileSet
        <-- org.apache.tools.ant.types.FilterChain
        <-> org.apache.tools.ant.types.FilterSet
        --> org.apache.tools.ant.types.FilterSet$Filter
        --> org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.Mapper
        <-> org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.Path$PathElement
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PatternSet$NameEntry
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JavaEnvUtils
        --> org.apache.tools.ant.util.StringUtils
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- spoon.SpoonTask
    Project$AntRefTable
        --> java.lang.Object *
        --> java.util.Hashtable *
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.UnknownElement
    ProjectComponent
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Task
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsString
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.IsFalse
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.IsSet
        <-- org.apache.tools.ant.taskdefs.condition.IsTrue
        <-- org.apache.tools.ant.taskdefs.condition.Socket
        <-- org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    ProjectHelper
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        --> java.util.Locale *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        <-- org.apache.tools.ant.ComponentHelper
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.Location
        <-- org.apache.tools.ant.Main
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.PropertyHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-> org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.types.Description
        --> org.apache.tools.ant.util.LoaderUtils
        --> org.xml.sax.AttributeList *
    PropertyHelper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
    RuntimeConfigurable
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.Target
        <-> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.types.Description
        --> org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.helpers.AttributeListImpl *
    SubBuildListener
        --> java.lang.Object *
        <-- org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildListener
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
    Target
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        <-- org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Location
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.NoBannerLogger
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.RuntimeConfigurable
        <-> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.Task[] *
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.types.Description
        --> org.apache.tools.ant.util.CollectionUtils$EmptyEnumeration
    Task
        <-- com.martiansoftware.jsap.ant.JSAPAntTask
        --> java.io.IOException *
        --> java.lang.Error *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        <-- org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Location
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-> org.apache.tools.ant.RuntimeConfigurable
        <-> org.apache.tools.ant.Target
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.TaskContainer
        <-> org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Basename
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Copyfile
        <-- org.apache.tools.ant.taskdefs.DefaultExcludes
        <-- org.apache.tools.ant.taskdefs.Deltree
        <-- org.apache.tools.ant.taskdefs.Dirname
        <-- org.apache.tools.ant.taskdefs.Echo
        <-- org.apache.tools.ant.taskdefs.Exec
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$JavadocOutputStream
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.KeySubst
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MacroInstance$Element
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Mkdir
        <-- org.apache.tools.ant.taskdefs.Nice
        <-- org.apache.tools.ant.taskdefs.Pack
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskRunnable
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Recorder
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Sequential
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.Sleep
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.TaskOutputStream
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Tstamp
        <-- org.apache.tools.ant.taskdefs.Unpack
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.LeadPipeInputStream
        <-- org.apache.tools.ant.util.SourceFileScanner
        <-- org.apache.tools.ant.util.TaskLogger
    TaskAdapter
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.LinkageError *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.ComponentHelper
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TypeAdapter
    TaskContainer
        --> java.lang.Object *
        <-- org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.MacroInstance$Element
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-- org.apache.tools.ant.taskdefs.Sequential
    Task[] *
        <-- org.apache.tools.ant.Target
    TypeAdapter
        --> java.lang.Class *
        --> java.lang.Object *
        <-- org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.TaskAdapter
        <-- org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
    UnknownElement
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.ComponentHelper
        <-> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.IntrospectionHelper$Creator
        --> org.apache.tools.ant.Location
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.Project$AntRefTable
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        <-> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.TypeAdapter
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-- org.apache.tools.ant.taskdefs.MacroInstance
        <-- org.apache.tools.ant.taskdefs.PreSetDef
        <-> org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
        <-- org.apache.tools.ant.types.Description
    UnsupportedAttributeException
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.types.mappers.FilterMapper
    UnsupportedElementException
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.IntrospectionHelper
    XmlLogger
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintStream *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.ExceptionInInitializerError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Stack *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildLogger
        --> org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.XmlLogger$1
        --> org.apache.tools.ant.XmlLogger$TimedElement
        --> org.apache.tools.ant.util.DOMElementWriter
        --> org.apache.tools.ant.util.StringUtils
        --> org.w3c.dom.CDATASection *
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.Node *
    XmlLogger$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.XmlLogger$TimedElement
    XmlLogger$TimedElement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.XmlLogger
        --> org.apache.tools.ant.XmlLogger$1
        --> org.w3c.dom.Element *
org.apache.tools.ant.filters
    BaseFilterReader
        --> java.io.FilterReader *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.BaseParamFilterReader
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.StripJavaComments
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$1
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.util.FileUtils
    BaseParamFilterReader
        --> java.io.Reader *
        --> org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.Parameterizable
    ChainableReader
        --> java.io.Reader *
        --> java.lang.Object *
        <-- org.apache.tools.ant.filters.ClassConstants
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.EscapeUnicode
        <-- org.apache.tools.ant.filters.ExpandProperties
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.StripJavaComments
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.types.FilterChain
    ClassConstants
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.filters.BaseFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
    ConcatFilter
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.types.Parameter
    EscapeUnicode
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Integer *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
    ExpandProperties
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.BaseFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
    HeadFilter
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.util.LineTokenizer
    LineContains
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.filters.LineContains$Contains
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    LineContains$Contains
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.LineContains
    LineContainsRegExp
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.RegularExpression
        --> org.apache.tools.ant.util.regexp.Regexp
    PrefixLines
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    ReplaceTokens
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.filters.ReplaceTokens$Token
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    ReplaceTokens$Token
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.ReplaceTokens
    StringInputStream
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.String *
        --> org.apache.tools.ant.util.ReaderInputStream
    StripJavaComments
        --> java.io.IOException *
        --> java.io.Reader *
        --> org.apache.tools.ant.filters.BaseFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
    StripLineBreaks
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    StripLineComments
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.filters.StripLineComments$Comment
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    StripLineComments$Comment
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.StripLineComments
    TabsToSpaces
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
    TailFilter
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.LinkedList *
        --> org.apache.tools.ant.filters.BaseParamFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.util.LineTokenizer
    TokenFilter
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.BaseFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-> org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        --> org.apache.tools.ant.filters.TokenFilter$ContainsString
        <-> org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        --> org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        --> org.apache.tools.ant.filters.TokenFilter$Filter
        --> org.apache.tools.ant.filters.TokenFilter$IgnoreBlank
        <-> org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        --> org.apache.tools.ant.filters.TokenFilter$ReplaceString
        <-> org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        --> org.apache.tools.ant.filters.TokenFilter$Trim
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.util.LineTokenizer
        --> org.apache.tools.ant.util.Tokenizer
    TokenFilter$1
        --> java.io.IOException *
        --> java.io.Reader *
        --> org.apache.tools.ant.filters.BaseFilterReader
        <-> org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
    TokenFilter$ChainableReaderFilter
        --> java.io.Reader *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        --> org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        --> org.apache.tools.ant.filters.TokenFilter$Filter
        <-- org.apache.tools.ant.filters.TokenFilter$IgnoreBlank
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceString
        <-- org.apache.tools.ant.filters.TokenFilter$Trim
        --> org.apache.tools.ant.util.Tokenizer
    TokenFilter$ContainsRegex
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.RegularExpression
        --> org.apache.tools.ant.types.Substitution
        --> org.apache.tools.ant.util.regexp.Regexp
    TokenFilter$ContainsString
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$Filter
    TokenFilter$DeleteCharacters
        --> java.io.Reader *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.filters.ChainableReader
        <-> org.apache.tools.ant.filters.TokenFilter
        <-> org.apache.tools.ant.filters.TokenFilter$1
        --> org.apache.tools.ant.filters.TokenFilter$Filter
        <-- org.apache.tools.ant.types.FilterChain
    TokenFilter$FileTokenizer
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.String *
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.Tokenizer
    TokenFilter$Filter
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsString
        <-- org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
    TokenFilter$IgnoreBlank
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.types.FilterChain
    TokenFilter$ReplaceRegex
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.RegularExpression
        --> org.apache.tools.ant.types.Substitution
        --> org.apache.tools.ant.util.regexp.Regexp
    TokenFilter$ReplaceString
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.types.FilterChain
    TokenFilter$StringTokenizer
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Character *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.ProjectComponent
        <-> org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.util.Tokenizer
    TokenFilter$Trim
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.types.FilterChain
org.apache.tools.ant.filters.util
    ChainReaderHelper
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.BaseFilterReader
        --> org.apache.tools.ant.filters.ChainableReader
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.types.AntFilterReader
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.Parameterizable
        --> org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-> org.apache.tools.ant.util.FileUtils
    JavaClassHelper
        --> java.io.ByteArrayInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.bcel.classfile.ClassParser *
        --> org.apache.bcel.classfile.ConstantValue *
        --> org.apache.bcel.classfile.Field *
        --> org.apache.bcel.classfile.JavaClass *
org.apache.tools.ant.helper
    AntXMLContext
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Vector *
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
    DefaultExecutor
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Executor
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.helper.SingleCheckExecutor
    ProjectHelper2
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.HashMap *
        --> java.util.Map *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.helper.AntXMLContext
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-> org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-> org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-> org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-> org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-> org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.taskdefs.Antlib
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JAXPUtils
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.DTDHandler *
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.ErrorHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> org.xml.sax.XMLReader *
    ProjectHelper2$AntHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelper2$ElementHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.helper.AntXMLContext
        <-> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelper2$MainHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.helper.AntXMLContext
        <-> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelper2$ProjectHandler
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.helper.AntXMLContext
        <-> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        --> org.apache.tools.ant.util.FileUtils
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelper2$RootHandler
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.helper.AntXMLContext
        <-> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        --> org.apache.tools.ant.util.FileUtils
        --> org.xml.sax.Attributes *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> org.xml.sax.helpers.DefaultHandler *
    ProjectHelper2$TargetHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.helper.AntXMLContext
        <-> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        --> org.xml.sax.Attributes *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.TaskContainer
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- org.apache.tools.ant.types.Description
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JAXPUtils
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DTDHandler *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.ErrorHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.Locator *
        --> org.xml.sax.Parser *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.XMLReaderAdapter *
    ProjectHelperImpl$AbstractHandler
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.HandlerBase *
        --> org.xml.sax.Locator *
        --> org.xml.sax.Parser *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$DataTypeHandler
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        <-> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        --> org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$DescriptionHandler
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        --> org.xml.sax.DocumentHandler *
    ProjectHelperImpl$NestedElementHandler
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Locale *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.TypeAdapter
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$ProjectHandler
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        --> org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$RootHandler
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        --> org.apache.tools.ant.util.FileUtils
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.HandlerBase *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$TargetHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    ProjectHelperImpl$TaskHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.UnknownElement
        <-> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-> org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        --> org.xml.sax.AttributeList *
        --> org.xml.sax.DocumentHandler *
        --> org.xml.sax.Locator *
        --> org.xml.sax.SAXParseException *
    SingleCheckExecutor
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Executor
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.helper.DefaultExecutor
org.apache.tools.ant.input
    DefaultInputHandler
        --> java.io.DataInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        --> org.apache.tools.ant.input.InputHandler
        --> org.apache.tools.ant.input.InputRequest
        --> org.apache.tools.ant.input.MultipleChoiceInputRequest
        --> org.apache.tools.ant.util.KeepAliveInputStream
    InputHandler
        --> java.lang.Object *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.Main
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.input.DefaultInputHandler
        --> org.apache.tools.ant.input.InputRequest
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Input
    InputRequest
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.input.InputHandler
        <-- org.apache.tools.ant.input.MultipleChoiceInputRequest
        <-- org.apache.tools.ant.input.PropertyFileInputHandler
        <-- org.apache.tools.ant.taskdefs.Input
    MultipleChoiceInputRequest
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        <-- org.apache.tools.ant.input.DefaultInputHandler
        --> org.apache.tools.ant.input.InputRequest
        <-- org.apache.tools.ant.taskdefs.Input
    PropertyFileInputHandler
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Properties *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.input.InputHandler
        --> org.apache.tools.ant.input.InputRequest
org.apache.tools.ant.launch *
    AntMain *
        <-- org.apache.tools.ant.Main
    Locator *
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.LoaderUtils
org.apache.tools.ant.listener
    AnsiColorLogger
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Properties *
        --> org.apache.tools.ant.DefaultLogger
    MailLogger
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.email.EmailAddress
        --> org.apache.tools.ant.taskdefs.email.Mailer
        --> org.apache.tools.ant.taskdefs.email.Message
        --> org.apache.tools.ant.util.DateUtils
        --> org.apache.tools.ant.util.StringUtils
        --> org.apache.tools.mail.MailMessage
org.apache.tools.ant.loader
    AntClassLoader2
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.security.ProtectionDomain *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.Map *
        --> java.util.StringTokenizer *
        --> java.util.jar.Attributes *
        --> java.util.jar.Attributes$Name *
        --> java.util.jar.JarFile *
        --> java.util.jar.Manifest *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Manifest
        --> org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.taskdefs.ManifestException
        --> org.apache.tools.ant.util.FileUtils
org.apache.tools.ant.taskdefs
    AbstractCvsTask
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Cvs
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Environment
        --> org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.util.StringUtils
    Ant
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Properties *
        --> java.util.Set *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        --> org.apache.tools.ant.DefaultLogger
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.input.InputHandler
        --> org.apache.tools.ant.taskdefs.Ant$Reference
        --> org.apache.tools.ant.taskdefs.Ant$TargetElement
        <-- org.apache.tools.ant.taskdefs.CallTarget
        --> org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.SubAnt
        --> org.apache.tools.ant.types.PropertySet
        --> org.apache.tools.ant.util.FileUtils
    Ant$Reference
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.SubAnt
        --> org.apache.tools.ant.types.Reference
    Ant$TargetElement
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.CallTarget
    AntStructure
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Antlib
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.net.URLConnection *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.helper.ProjectHelper2
        --> org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Definer
    AntlibDefinition
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Antlib
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.PreSetDef
    Available
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Available$FileDir
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.StringUtils
    Available$FileDir
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Available
        --> org.apache.tools.ant.types.EnumeratedAttribute
    BUnzip2
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Unpack
        --> org.apache.tools.bzip2.CBZip2InputStream
    BZip2
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Pack
        --> org.apache.tools.bzip2.CBZip2OutputStream
    Basename
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
    BuildNumber
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Properties *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.util.FileUtils
    CVSPass
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.util.StringUtils
    CallTarget
        --> java.io.IOException *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Ant
        --> org.apache.tools.ant.taskdefs.Ant$Reference
        --> org.apache.tools.ant.taskdefs.Ant$TargetElement
        --> org.apache.tools.ant.taskdefs.Property
        --> org.apache.tools.ant.types.PropertySet
    Checksum
        --> B[] *
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.security.DigestInputStream *
        --> java.security.MessageDigest *
        --> java.security.NoSuchAlgorithmException *
        --> java.security.NoSuchProviderException *
        --> java.util.Arrays *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.Hashtable *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        --> org.apache.tools.ant.types.FileSet
    Chmod
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
    Concat
        --> java.io.BufferedReader *
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.taskdefs.Concat$1
        <-> org.apache.tools.ant.taskdefs.Concat$MultiReader
        <-> org.apache.tools.ant.taskdefs.Concat$TextElement
        --> org.apache.tools.ant.taskdefs.FixCRLF$CrLf
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.FileUtils
    Concat$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$MultiReader
    Concat$MultiReader
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        <-> org.apache.tools.ant.taskdefs.Concat
        --> org.apache.tools.ant.taskdefs.Concat$1
    Concat$TextElement
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-> org.apache.tools.ant.taskdefs.Concat
        --> org.apache.tools.ant.util.FileUtils
    ConditionTask
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Copy
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.FilterSet
        --> org.apache.tools.ant.types.FilterSetCollection
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.FlatFileNameMapper
        --> org.apache.tools.ant.util.IdentityMapper
        --> org.apache.tools.ant.util.SourceFileScanner
    Copydir
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.MatchingTask
    Copyfile
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
    Cvs
        --> org.apache.tools.ant.taskdefs.AbstractCvsTask
    DefBase
        --> java.lang.ClassLoader *
        --> java.lang.String *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.AntlibDefinition
        <-- org.apache.tools.ant.taskdefs.Definer
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.ClasspathUtils
        --> org.apache.tools.ant.util.ClasspathUtils$Delegate
    DefaultExcludes
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Task
    Definer
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Properties *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.taskdefs.Antlib
        --> org.apache.tools.ant.taskdefs.DefBase
        <-> org.apache.tools.ant.taskdefs.Definer$1
        --> org.apache.tools.ant.taskdefs.Definer$Format
        --> org.apache.tools.ant.taskdefs.Definer$OnError
        --> org.apache.tools.ant.taskdefs.Definer$ResourceStack
        <-- org.apache.tools.ant.taskdefs.Typedef
    Definer$1
        --> java.lang.Object *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.NoSuchElementException *
        <-> org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Definer$ResourceStack
    Definer$Format
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Definer
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Definer$OnError
        --> java.lang.String *
        <-- org.apache.tools.ant.ComponentHelper
        <-- org.apache.tools.ant.taskdefs.Definer
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Definer$ResourceStack
        --> java.lang.Object *
        --> java.lang.ThreadLocal *
        --> java.util.HashMap *
        --> java.util.Map *
        <-- org.apache.tools.ant.taskdefs.Definer
        --> org.apache.tools.ant.taskdefs.Definer$1
    Delete
        --> java.io.File *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.selectors.AndSelector
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        --> org.apache.tools.ant.types.selectors.MajoritySelector
        --> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        --> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    Deltree
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
    DependSet
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.util.FileUtils
    Dirname
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
    Ear
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.zip.ZipOutputStream
    Echo
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Echo$EchoLevel
    Echo$EchoLevel
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Echo
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Exec
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Exec$StreamPumper
    Exec$StreamPumper
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.InterruptedException *
        --> java.lang.String *
        --> java.lang.Thread *
        <-> org.apache.tools.ant.taskdefs.Exec
    ExecTask
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        --> org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.SignJar
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Environment
        --> org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.util.FileUtils
    Execute
        --> java.io.BufferedReader *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.ThreadDeath *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Set *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-> org.apache.tools.ant.taskdefs.Execute$1
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-> org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-> org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        --> org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.Patch
        --> org.apache.tools.ant.taskdefs.ProcessDestroyer
        <-- org.apache.tools.ant.taskdefs.Property
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.types.Commandline
    Execute$1
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-> org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
    Execute$CommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$1
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
        --> org.apache.tools.ant.types.Commandline
    Execute$CommandLauncherProxy
        --> java.io.IOException *
        --> java.lang.Process *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Execute$1
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$MacCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$OS2CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$PerlScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$ScriptCommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$WinNTCommandLauncher
    Execute$Java11CommandLauncher
        --> java.io.IOException *
        --> java.lang.Process *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$1
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.types.Commandline
    Execute$Java13CommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.ThreadDeath *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$1
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$VmsCommandLauncher
        --> org.apache.tools.ant.types.Commandline
    Execute$MacCommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.Properties *
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
    Execute$OS2CommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.System *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
    Execute$PerlScriptCommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
    Execute$ScriptCommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
    Execute$VmsCommandLauncher
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
    Execute$WinNTCommandLauncher
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.System *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        --> org.apache.tools.ant.taskdefs.Execute$CommandLauncherProxy
    ExecuteJava
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.ThreadDeath *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-- org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.CommandlineJava$SysProperties
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Permissions
        --> org.apache.tools.ant.util.TimeoutObserver
        --> org.apache.tools.ant.util.Watchdog
    ExecuteOn
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Chmod
        --> org.apache.tools.ant.taskdefs.ExecTask
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteOn$FileDirBoth
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        --> org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Transform
        --> org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Marker
        --> org.apache.tools.ant.types.DirSet
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.SourceFileScanner
    ExecuteOn$FileDirBoth
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.types.EnumeratedAttribute
    ExecuteStreamHandler
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Jikes
        <-- org.apache.tools.ant.taskdefs.JikesOutputParser
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
    ExecuteWatchdog
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.IllegalThreadStateException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Patch
        --> org.apache.tools.ant.util.TimeoutObserver
        --> org.apache.tools.ant.util.Watchdog
    Exit
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ExitStatusException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Exit$1
        <-> org.apache.tools.ant.taskdefs.Exit$NestedCondition
        --> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Exit$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
    Exit$NestedCondition
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.Exit
        --> org.apache.tools.ant.taskdefs.Exit$1
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Expand
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Untar
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.selectors.SelectorUtils
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipFile
    Filter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.types.FilterSet
    FixCRLF
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.NoSuchElementException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.FixCRLF$AddAsisRemove
        --> org.apache.tools.ant.taskdefs.FixCRLF$CrLf
        <-> org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
        --> org.apache.tools.ant.taskdefs.FixCRLF$OneLiner$BufferLine
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.util.FileUtils
    FixCRLF$AddAsisRemove
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        --> org.apache.tools.ant.types.EnumeratedAttribute
    FixCRLF$CrLf
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        --> org.apache.tools.ant.types.EnumeratedAttribute
    FixCRLF$OneLiner
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.NoSuchElementException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        <-> org.apache.tools.ant.taskdefs.FixCRLF
        <-> org.apache.tools.ant.taskdefs.FixCRLF$OneLiner$BufferLine
    FixCRLF$OneLiner$BufferLine
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-> org.apache.tools.ant.taskdefs.FixCRLF$OneLiner
    GUnzip
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.zip.GZIPInputStream *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Unpack
    GZip
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.zip.GZIPOutputStream *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Pack
    GenerateKey
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.ExecTask
        --> org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.util.JavaEnvUtils
    GenerateKey$DistinguishedName
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        --> org.apache.tools.ant.taskdefs.GenerateKey$DnameParam
    GenerateKey$DnameParam
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.GenerateKey$DistinguishedName
    Get
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.HttpURLConnection *
        --> java.net.URL *
        --> java.net.URLConnection *
        --> java.util.Date *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Get$Base64Converter
        --> org.apache.tools.ant.taskdefs.Get$DownloadProgress
        --> org.apache.tools.ant.taskdefs.Get$NullProgress
        --> org.apache.tools.ant.taskdefs.Get$VerboseProgress
        --> org.apache.tools.ant.util.FileUtils
    Get$Base64Converter
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Get
    Get$DownloadProgress
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.Get$NullProgress
        <-- org.apache.tools.ant.taskdefs.Get$VerboseProgress
    Get$NullProgress
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Get
        --> org.apache.tools.ant.taskdefs.Get$DownloadProgress
    Get$VerboseProgress
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Get
        --> org.apache.tools.ant.taskdefs.Get$DownloadProgress
    ImportTask
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.util.FileUtils
    Input
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.input.InputHandler
        --> org.apache.tools.ant.input.InputRequest
        --> org.apache.tools.ant.input.MultipleChoiceInputRequest
        --> org.apache.tools.ant.util.StringUtils
    JDBCTask
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.sql.Connection *
        --> java.sql.DatabaseMetaData *
        --> java.sql.Driver *
        --> java.sql.SQLException *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.SQLExec
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    Jar
        --> java.io.ByteArrayInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.TreeMap *
        --> java.util.Vector *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Ear
        --> org.apache.tools.ant.taskdefs.Jar$1
        --> org.apache.tools.ant.taskdefs.Jar$FilesetManifestConfig
        --> org.apache.tools.ant.taskdefs.Manifest
        --> org.apache.tools.ant.taskdefs.Manifest$Attribute
        --> org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.War
        --> org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.taskdefs.Zip$ArchiveState
        --> org.apache.tools.ant.taskdefs.Zip$WhenEmpty
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.zip.JarMarker
        --> org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipFile
        --> org.apache.tools.zip.ZipOutputStream
    Jar$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        <-- org.apache.tools.ant.taskdefs.Jar
    Jar$FilesetManifestConfig
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Java
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ExitException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteJava
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        --> org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.types.Assertions
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.CommandlineJava$SysProperties
        --> org.apache.tools.ant.types.Environment
        --> org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Permissions
        --> org.apache.tools.ant.types.PropertySet
        --> org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.KeepAliveInputStream
        <-- spoon.SpoonTask
    Javac
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Javac$ImplementationSpecificArgument
        --> org.apache.tools.ant.taskdefs.MatchingTask
        <-> org.apache.tools.ant.taskdefs.compilers.CompilerAdapter
        --> org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.JavacExternal
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.GlobPatternMapper
        --> org.apache.tools.ant.util.JavaEnvUtils
        --> org.apache.tools.ant.util.SourceFileScanner
        --> org.apache.tools.ant.util.facade.FacadeTaskHelper
        --> org.apache.tools.ant.util.facade.ImplementationSpecificArgument
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
    Javac$ImplementationSpecificArgument
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Javac
        --> org.apache.tools.ant.util.facade.ImplementationSpecificArgument
    Javadoc
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.FilenameFilter *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-> org.apache.tools.ant.taskdefs.Javadoc$1
        --> org.apache.tools.ant.taskdefs.Javadoc$AccessType
        <-> org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
        <-> org.apache.tools.ant.taskdefs.Javadoc$DocletParam
        --> org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-> org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
        --> org.apache.tools.ant.taskdefs.Javadoc$Html
        <-> org.apache.tools.ant.taskdefs.Javadoc$JavadocOutputStream
        <-> org.apache.tools.ant.taskdefs.Javadoc$LinkArgument
        --> org.apache.tools.ant.taskdefs.Javadoc$PackageName
        --> org.apache.tools.ant.taskdefs.Javadoc$SourceFile
        <-> org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.DirSet
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Path$PathElement
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JavaEnvUtils
    Javadoc$1
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Javadoc
    Javadoc$AccessType
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Javadoc
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Javadoc$DocletInfo
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-> org.apache.tools.ant.taskdefs.Javadoc
        --> org.apache.tools.ant.taskdefs.Javadoc$DocletParam
        --> org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
    Javadoc$DocletParam
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
    Javadoc$ExtensionInfo
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$DocletInfo
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    Javadoc$GroupArgument
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        <-> org.apache.tools.ant.taskdefs.Javadoc
        --> org.apache.tools.ant.taskdefs.Javadoc$Html
        --> org.apache.tools.ant.taskdefs.Javadoc$PackageName
    Javadoc$Html
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
    Javadoc$JavadocOutputStream
        --> java.lang.String *
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Javadoc
        --> org.apache.tools.ant.taskdefs.LogOutputStream
    Javadoc$LinkArgument
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Javadoc
    Javadoc$PackageName
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$GroupArgument
    Javadoc$SourceFile
        --> java.io.File *
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Javadoc
    Javadoc$TagArgument
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Locale *
        --> java.util.StringTokenizer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.Javadoc
        --> org.apache.tools.ant.types.FileSet
    Jikes
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Random *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.JikesOutputParser
    JikesOutputParser
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.Jikes
    KeySubst
        --> java.io.BufferedReader *
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Hashtable *
        --> java.util.StringTokenizer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
    Length
        --> java.io.File *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Iterator *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Length$1
        <-> org.apache.tools.ant.taskdefs.Length$AllHandler
        <-> org.apache.tools.ant.taskdefs.Length$ConditionHandler
        <-> org.apache.tools.ant.taskdefs.Length$EachHandler
        --> org.apache.tools.ant.taskdefs.Length$FileMode
        <-> org.apache.tools.ant.taskdefs.Length$Handler
        <-> org.apache.tools.ant.taskdefs.Length$PropertyOutputStream
        --> org.apache.tools.ant.taskdefs.Length$When
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Resource
        --> org.apache.tools.ant.util.FileUtils
    Length$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$PropertyOutputStream
    Length$AllHandler
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$ConditionHandler
        --> org.apache.tools.ant.taskdefs.Length$Handler
        --> org.apache.tools.ant.types.Resource
    Length$ConditionHandler
        --> java.io.PrintStream *
        <-> org.apache.tools.ant.taskdefs.Length
        --> org.apache.tools.ant.taskdefs.Length$AllHandler
    Length$EachHandler
        --> java.io.PrintStream *
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Length
        --> org.apache.tools.ant.taskdefs.Length$Handler
        --> org.apache.tools.ant.types.Resource
    Length$FileMode
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Length
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Length$Handler
        --> java.io.PrintStream *
        --> java.lang.Object *
        <-> org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$AllHandler
        <-- org.apache.tools.ant.taskdefs.Length$EachHandler
        --> org.apache.tools.ant.types.Resource
    Length$PropertyOutputStream
        --> java.io.ByteArrayOutputStream *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.Length
        --> org.apache.tools.ant.taskdefs.Length$1
    Length$When
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Length
        --> org.apache.tools.ant.types.EnumeratedAttribute
    LoadFile
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.types.FilterChain
    LoadProperties
        --> java.io.BufferedInputStream *
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.taskdefs.Property
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    LogOutputStream
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.String *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Javadoc$JavadocOutputStream
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
    LogStreamHandler
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.Patch
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
    MacroDef
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.taskdefs.AntlibDefinition
        <-> org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-> org.apache.tools.ant.taskdefs.MacroDef$MyAntTypeDefinition
        --> org.apache.tools.ant.taskdefs.MacroDef$NestedSequential
        <-> org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        <-> org.apache.tools.ant.taskdefs.MacroDef$Text
        <-- org.apache.tools.ant.taskdefs.MacroInstance
    MacroDef$Attribute
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Locale *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
    MacroDef$MyAntTypeDefinition
        --> java.lang.Object *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.MacroDef
        --> org.apache.tools.ant.taskdefs.MacroInstance
    MacroDef$NestedSequential
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.taskdefs.MacroDef
    MacroDef$TemplateElement
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Locale *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
    MacroDef$Text
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Locale *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.MacroDef
        <-- org.apache.tools.ant.taskdefs.MacroInstance
    MacroInstance
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DynamicAttribute
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.taskdefs.MacroDef
        --> org.apache.tools.ant.taskdefs.MacroDef$Attribute
        <-- org.apache.tools.ant.taskdefs.MacroDef$MyAntTypeDefinition
        --> org.apache.tools.ant.taskdefs.MacroDef$TemplateElement
        --> org.apache.tools.ant.taskdefs.MacroDef$Text
    MacroInstance$Element
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
    Manifest
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Dictionary *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.ant.taskdefs.Manifest$Attribute
        --> org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        --> org.apache.tools.ant.util.CollectionUtils
    Manifest$Attribute
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        --> org.apache.tools.ant.util.CollectionUtils
    Manifest$Section
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Dictionary *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Manifest
        --> org.apache.tools.ant.taskdefs.Manifest$Attribute
        --> org.apache.tools.ant.taskdefs.ManifestException
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        --> org.apache.tools.ant.util.CollectionUtils
    ManifestException
        --> java.lang.Exception *
        --> java.lang.String *
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        <-- org.apache.tools.ant.taskdefs.ManifestTask
    ManifestTask
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Manifest
        --> org.apache.tools.ant.taskdefs.Manifest$Attribute
        --> org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.taskdefs.ManifestException
        --> org.apache.tools.ant.taskdefs.ManifestTask$Mode
    ManifestTask$Mode
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.ManifestTask
        --> org.apache.tools.ant.types.EnumeratedAttribute
    MatchingTask
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.StringTokenizer *
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Copydir
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.selectors.AndSelector
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        --> org.apache.tools.ant.types.selectors.MajoritySelector
        --> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        --> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.TypeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    Mkdir
        --> java.io.File *
        --> java.lang.InterruptedException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
    Move
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Copy
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.FilterSet
        --> org.apache.tools.ant.types.FilterSetCollection
        --> org.apache.tools.ant.util.FileUtils
    Nice
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
    Pack
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.GZip
    Parallel
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.ThreadGroup *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.Enumeration *
        --> java.util.List *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        <-> org.apache.tools.ant.taskdefs.Parallel$1
        --> org.apache.tools.ant.taskdefs.Parallel$TaskList
        <-> org.apache.tools.ant.taskdefs.Parallel$TaskRunnable
        --> org.apache.tools.ant.util.StringUtils
    Parallel$1
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Thread *
        <-> org.apache.tools.ant.taskdefs.Parallel
    Parallel$TaskList
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        <-- org.apache.tools.ant.taskdefs.Parallel
    Parallel$TaskRunnable
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Parallel
    Patch
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.ExecuteWatchdog
        --> org.apache.tools.ant.taskdefs.LogStreamHandler
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
    PathConvert
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.PathConvert$MapEntry
        --> org.apache.tools.ant.taskdefs.PathConvert$TargetOs
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.types.DirSet
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileNameMapper
    PathConvert$MapEntry
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.PathConvert
    PathConvert$TargetOs
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.PathConvert
        --> org.apache.tools.ant.types.EnumeratedAttribute
    PreSetDef
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.taskdefs.AntlibDefinition
        --> org.apache.tools.ant.taskdefs.PreSetDef$PreSetDefinition
    PreSetDef$PreSetDefinition
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.AntTypeDefinition
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.IntrospectionHelper
        <-- org.apache.tools.ant.IntrospectionHelper$AddNestedCreator
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.UnknownElement
        <-- org.apache.tools.ant.taskdefs.PreSetDef
    ProcessDestroyer
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.InterruptedException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Process *
        --> java.lang.Runnable *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.Execute
        <-> org.apache.tools.ant.taskdefs.ProcessDestroyer$ProcessDestroyerImpl
    ProcessDestroyer$ProcessDestroyerImpl
        --> java.lang.String *
        --> java.lang.Thread *
        <-> org.apache.tools.ant.taskdefs.ProcessDestroyer
    Property
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.CallTarget
        --> org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.SubAnt
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    PumpStreamHandler
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.System *
        --> java.lang.Thread *
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.LogStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
    Recorder
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Recorder$ActionChoices
        --> org.apache.tools.ant.taskdefs.Recorder$VerbosityLevelChoices
        --> org.apache.tools.ant.taskdefs.RecorderEntry
    Recorder$ActionChoices
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Recorder
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Recorder$VerbosityLevelChoices
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Recorder
        --> org.apache.tools.ant.types.EnumeratedAttribute
    RecorderEntry
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildEvent
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.BuildListener
        --> org.apache.tools.ant.BuildLogger
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.SubBuildListener
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Recorder
        --> org.apache.tools.ant.util.StringUtils
    Redirector
        --> java.io.BufferedReader *
        --> java.io.ByteArrayInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.PipedInputStream *
        --> java.io.PipedOutputStream *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.ThreadGroup *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.ExecTask
        --> org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        <-- org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-> org.apache.tools.ant.taskdefs.Redirector$PropertyOutputStream
        --> org.apache.tools.ant.taskdefs.StreamPumper
        <-- org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.util.ConcatFileInputStream
        --> org.apache.tools.ant.util.KeepAliveOutputStream
        --> org.apache.tools.ant.util.LazyFileOutputStream
        --> org.apache.tools.ant.util.LeadPipeInputStream
        --> org.apache.tools.ant.util.OutputStreamFunneler
        --> org.apache.tools.ant.util.ReaderInputStream
        --> org.apache.tools.ant.util.StringUtils
        --> org.apache.tools.ant.util.TeeOutputStream
    Redirector$PropertyOutputStream
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Redirector
    Rename
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.util.FileUtils
    Replace
        --> java.io.BufferedReader *
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.MatchingTask
        <-> org.apache.tools.ant.taskdefs.Replace$NestedString
        <-> org.apache.tools.ant.taskdefs.Replace$Replacefilter
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.StringUtils
    Replace$NestedString
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Replace$Replacefilter
    Replace$Replacefilter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Properties *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.Replace
        --> org.apache.tools.ant.taskdefs.Replace$NestedString
    Rmic
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.MatchingTask
        <-> org.apache.tools.ant.taskdefs.Rmic$ImplementationSpecificArgument
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-> org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        --> org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        --> org.apache.tools.ant.types.FilterSet
        --> org.apache.tools.ant.types.FilterSetCollection
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.SourceFileScanner
        --> org.apache.tools.ant.util.facade.FacadeTaskHelper
        --> org.apache.tools.ant.util.facade.ImplementationSpecificArgument
    Rmic$ImplementationSpecificArgument
        --> java.lang.String *
        <-> org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.util.facade.ImplementationSpecificArgument
    SQLExec
        --> java.io.BufferedOutputStream *
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.sql.Connection *
        --> java.sql.ResultSet *
        --> java.sql.ResultSetMetaData *
        --> java.sql.SQLException *
        --> java.sql.SQLWarning *
        --> java.sql.Statement *
        --> java.util.Enumeration *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.JDBCTask
        --> org.apache.tools.ant.taskdefs.SQLExec$DelimiterType
        --> org.apache.tools.ant.taskdefs.SQLExec$OnError
        <-> org.apache.tools.ant.taskdefs.SQLExec$Transaction
        --> org.apache.tools.ant.types.FileSet
    SQLExec$DelimiterType
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.SQLExec
        --> org.apache.tools.ant.types.EnumeratedAttribute
    SQLExec$OnError
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.SQLExec
        --> org.apache.tools.ant.types.EnumeratedAttribute
    SQLExec$Transaction
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.sql.SQLException *
        <-> org.apache.tools.ant.taskdefs.SQLExec
    SendEmail
        --> java.lang.Integer *
        --> org.apache.tools.ant.taskdefs.email.EmailTask
    Sequential
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.TaskContainer
    SignJar
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.ExecTask
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.util.JavaEnvUtils
    Sleep
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
    StreamPumper
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-- org.apache.tools.ant.taskdefs.PumpStreamHandler
        <-- org.apache.tools.ant.taskdefs.Redirector
    SubAnt
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Ant
        --> org.apache.tools.ant.taskdefs.Ant$Reference
        --> org.apache.tools.ant.taskdefs.Property
        --> org.apache.tools.ant.types.DirSet
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Path$PathElement
        --> org.apache.tools.ant.types.PropertySet
        --> org.apache.tools.ant.types.Reference
    Sync
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Sync$MyCopy
        --> org.apache.tools.ant.types.FileSet
    Sync$MyCopy
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.taskdefs.Copy
        <-> org.apache.tools.ant.taskdefs.Sync
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.IdentityMapper
    Tar
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        --> org.apache.tools.ant.taskdefs.Tar$TarFileSet
        --> org.apache.tools.ant.taskdefs.Tar$TarLongFileMode
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.MergingMapper
        --> org.apache.tools.ant.util.SourceFileScanner
        --> org.apache.tools.tar.TarEntry
        --> org.apache.tools.tar.TarOutputStream
    Tar$TarCompressionMethod
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.zip.GZIPOutputStream *
        <-- org.apache.tools.ant.taskdefs.Tar
        --> org.apache.tools.ant.types.EnumeratedAttribute
        --> org.apache.tools.bzip2.CBZip2OutputStream
    Tar$TarFileSet
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Tar
        --> org.apache.tools.ant.types.FileSet
    Tar$TarLongFileMode
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Tar
        --> org.apache.tools.ant.types.EnumeratedAttribute
    TaskOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.Task
    Taskdef
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.String *
        --> org.apache.tools.ant.taskdefs.Typedef
    TempFile
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.util.FileUtils
    Touch
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.text.DateFormat *
        --> java.text.ParseException *
        --> java.util.Date *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Touch$1
        <-> org.apache.tools.ant.taskdefs.Touch$2
        --> org.apache.tools.ant.taskdefs.Touch$DateFormatFactory
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
    Touch$1
        --> java.lang.Object *
        --> java.text.DateFormat *
        --> java.util.Locale *
        <-- org.apache.tools.ant.taskdefs.Touch
        --> org.apache.tools.ant.taskdefs.Touch$DateFormatFactory
    Touch$2
        --> java.lang.Object *
        --> java.lang.String *
        --> java.text.DateFormat *
        --> java.text.SimpleDateFormat *
        <-> org.apache.tools.ant.taskdefs.Touch
        --> org.apache.tools.ant.taskdefs.Touch$DateFormatFactory
    Touch$DateFormatFactory
        --> java.lang.Object *
        --> java.text.DateFormat *
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Touch$1
        <-- org.apache.tools.ant.taskdefs.Touch$2
    Transform
        --> org.apache.tools.ant.taskdefs.ExecuteOn
    Tstamp
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Locale *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-> org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
    Tstamp$CustomFormat
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.text.SimpleDateFormat *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.Locale *
        --> java.util.NoSuchElementException *
        --> java.util.StringTokenizer *
        --> java.util.TimeZone *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.taskdefs.Tstamp
        --> org.apache.tools.ant.taskdefs.Tstamp$Unit
    Tstamp$Unit
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Hashtable *
        <-- org.apache.tools.ant.taskdefs.Tstamp$CustomFormat
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Typedef
        <-- org.apache.tools.ant.ComponentHelper
        --> org.apache.tools.ant.taskdefs.Definer
        <-- org.apache.tools.ant.taskdefs.Taskdef
    Unpack
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.GUnzip
    Untar
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Date *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Expand
        --> org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.tar.TarEntry
        --> org.apache.tools.tar.TarInputStream
    Untar$UntarCompressionMethod
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.zip.GZIPInputStream *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.Untar
        --> org.apache.tools.ant.types.EnumeratedAttribute
        --> org.apache.tools.bzip2.CBZip2InputStream
    UpToDate
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.MergingMapper
        --> org.apache.tools.ant.util.SourceFileScanner
    WaitFor
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.WaitFor$Unit
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.taskdefs.condition.ConditionBase
    WaitFor$Unit
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Hashtable *
        <-- org.apache.tools.ant.taskdefs.WaitFor
        --> org.apache.tools.ant.types.EnumeratedAttribute
    War
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.zip.ZipOutputStream
    WhichResource
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.URL *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.types.Path
    XSLTLiaison
        --> java.io.File *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.XSLTLiaison2
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTLiaison2
        --> java.lang.Object *
        --> org.apache.tools.ant.taskdefs.XSLTLiaison
        <-> org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTLogger
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.XSLTLoggerAware
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTLoggerAware
        --> java.lang.Object *
        --> org.apache.tools.ant.taskdefs.XSLTLogger
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTProcess
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.XSLTLiaison
        <-> org.apache.tools.ant.taskdefs.XSLTLiaison2
        --> org.apache.tools.ant.taskdefs.XSLTLogger
        --> org.apache.tools.ant.taskdefs.XSLTLoggerAware
        --> org.apache.tools.ant.taskdefs.XSLTProcess$1
        --> org.apache.tools.ant.taskdefs.XSLTProcess$Factory
        --> org.apache.tools.ant.taskdefs.XSLTProcess$OutputProperty
        --> org.apache.tools.ant.taskdefs.XSLTProcess$Param
        <-> org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.types.XMLCatalog
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
    XSLTProcess$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
    XSLTProcess$Factory
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        --> org.apache.tools.ant.taskdefs.XSLTProcess$Factory$Attribute
    XSLTProcess$Factory$Attribute
        --> java.lang.Boolean *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DynamicConfigurator
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$Factory
    XSLTProcess$OutputProperty
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTProcess$Param
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
    XSLTProcess$StyleMapper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.apache.tools.ant.taskdefs.XSLTProcess
        --> org.apache.tools.ant.taskdefs.XSLTProcess$1
        --> org.apache.tools.ant.util.FileNameMapper
    XmlProperty
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Hashtable *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.ParserConfigurationException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.XMLCatalog
        --> org.apache.tools.ant.util.FileUtils
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.NamedNodeMap *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.SAXException *
    Zip
        --> java.io.ByteArrayInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Stack *
        --> java.util.Vector *
        --> java.util.zip.CRC32 *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.FileScanner
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.Zip$ArchiveState
        --> org.apache.tools.ant.taskdefs.Zip$Duplicate
        --> org.apache.tools.ant.taskdefs.Zip$WhenEmpty
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.Resource
        --> org.apache.tools.ant.types.ResourceFactory
        --> org.apache.tools.ant.types.Resource[] *
        --> org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.ant.types.ZipScanner
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.GlobPatternMapper
        --> org.apache.tools.ant.util.IdentityMapper
        --> org.apache.tools.ant.util.MergingMapper
        --> org.apache.tools.ant.util.ResourceUtils
        --> org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipFile
        --> org.apache.tools.zip.ZipOutputStream
    Zip$ArchiveState
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.Resource
    Zip$Duplicate
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Zip$WhenEmpty
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.EnumeratedAttribute
org.apache.tools.ant.taskdefs.compilers
    CompilerAdapter
        --> java.lang.Object *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
    CompilerAdapterFactory
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Javac
        --> org.apache.tools.ant.taskdefs.compilers.CompilerAdapter
        --> org.apache.tools.ant.taskdefs.compilers.Gcj
        --> org.apache.tools.ant.taskdefs.compilers.Javac12
        --> org.apache.tools.ant.taskdefs.compilers.Javac13
        --> org.apache.tools.ant.taskdefs.compilers.JavacExternal
        --> org.apache.tools.ant.taskdefs.compilers.Jikes
        --> org.apache.tools.ant.taskdefs.compilers.Jvc
        --> org.apache.tools.ant.taskdefs.compilers.Kjc
        --> org.apache.tools.ant.taskdefs.compilers.Sj
        --> org.apache.tools.ant.util.JavaEnvUtils
    DefaultCompilerAdapter
        --> java.io.File *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Execute
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.Javac
        --> org.apache.tools.ant.taskdefs.LogStreamHandler
        --> org.apache.tools.ant.taskdefs.compilers.CompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.JavacExternal
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JavaEnvUtils
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
    Gcj
        --> java.io.File *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
    Javac12
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.Javac
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
    Javac13
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
    JavacExternal
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
    Jikes
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
    Jvc
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
    Kjc
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.ExecuteJava
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
    Sj
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
org.apache.tools.ant.taskdefs.condition
    And
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Condition
        --> java.lang.Object *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-- org.apache.tools.ant.taskdefs.condition.And
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.taskdefs.condition.Contains
        <-- org.apache.tools.ant.taskdefs.condition.Equals
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.Http
        <-- org.apache.tools.ant.taskdefs.condition.IsFalse
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.taskdefs.condition.IsSet
        <-- org.apache.tools.ant.taskdefs.condition.IsTrue
        <-- org.apache.tools.ant.taskdefs.condition.Not
        <-- org.apache.tools.ant.taskdefs.condition.Or
        <-- org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.condition.Socket
    ConditionBase
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.Available
        --> org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.ConditionTask
        <-- org.apache.tools.ant.taskdefs.Exit
        <-- org.apache.tools.ant.taskdefs.Exit$NestedCondition
        --> org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.WaitFor
        <-> org.apache.tools.ant.taskdefs.condition.And
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.taskdefs.condition.Contains
        --> org.apache.tools.ant.taskdefs.condition.Equals
        --> org.apache.tools.ant.taskdefs.condition.FilesMatch
        --> org.apache.tools.ant.taskdefs.condition.Http
        --> org.apache.tools.ant.taskdefs.condition.IsFalse
        --> org.apache.tools.ant.taskdefs.condition.IsReference
        --> org.apache.tools.ant.taskdefs.condition.IsSet
        --> org.apache.tools.ant.taskdefs.condition.IsTrue
        <-> org.apache.tools.ant.taskdefs.condition.Not
        <-> org.apache.tools.ant.taskdefs.condition.Or
        --> org.apache.tools.ant.taskdefs.condition.Os
        --> org.apache.tools.ant.taskdefs.condition.Socket
    Contains
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    Equals
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    FilesMatch
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        --> org.apache.tools.ant.util.FileUtils
    Http
        --> java.io.IOException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.HttpURLConnection *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.net.URLConnection *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    IsFalse
        --> java.lang.Boolean *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    IsFileSelected
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.condition.Condition
        --> org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.util.FileUtils
    IsReference
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Hashtable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        --> org.apache.tools.ant.types.Reference
    IsSet
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    IsTrue
        --> java.lang.Boolean *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
    Not
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Or
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-> org.apache.tools.ant.taskdefs.condition.ConditionBase
    Os
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Locale *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.PathTokenizer
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.PathConvert
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
    Socket
        --> java.io.IOException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.Socket *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.condition.Condition
        <-- org.apache.tools.ant.taskdefs.condition.ConditionBase
org.apache.tools.ant.taskdefs.cvslib
    CVSEntry
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Date *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        --> org.apache.tools.ant.taskdefs.cvslib.RCSFile
    ChangeLogParser
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.TimeZone *
        --> org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
    ChangeLogTask
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.AbstractCvsTask
        --> org.apache.tools.ant.taskdefs.ExecuteStreamHandler
        --> org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        --> org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        --> org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        --> org.apache.tools.ant.taskdefs.cvslib.CvsUser
        --> org.apache.tools.ant.taskdefs.cvslib.CvsVersion
        --> org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
        --> org.apache.tools.ant.types.FileSet
    ChangeLogWriter
        --> java.io.IOException *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.TimeZone *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        --> org.apache.tools.ant.taskdefs.cvslib.RCSFile
        --> org.apache.tools.ant.util.DOMElementWriter
        --> org.apache.tools.ant.util.DOMUtils
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
    CvsTagDiff
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.AbstractCvsTask
        --> org.apache.tools.ant.taskdefs.cvslib.CvsTagEntry
        --> org.apache.tools.ant.util.DOMElementWriter
        --> org.apache.tools.ant.util.DOMUtils
        --> org.apache.tools.ant.util.FileUtils
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
    CvsTagEntry
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
    CvsUser
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
    CvsVersion
        --> java.io.ByteArrayOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Character *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.StringTokenizer *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
    RCSFile
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.cvslib.CVSEntry
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
    RedirectingOutputStream
        --> java.lang.String *
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.RedirectingStreamHandler
    RedirectingStreamHandler
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.PumpStreamHandler
        --> org.apache.tools.ant.taskdefs.cvslib.ChangeLogParser
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        --> org.apache.tools.ant.taskdefs.cvslib.RedirectingOutputStream
org.apache.tools.ant.taskdefs.email
    EmailAddress
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
    EmailTask
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.SendEmail
        --> org.apache.tools.ant.taskdefs.email.EmailAddress
        --> org.apache.tools.ant.taskdefs.email.EmailTask$Encoding
        --> org.apache.tools.ant.taskdefs.email.Mailer
        --> org.apache.tools.ant.taskdefs.email.Message
        --> org.apache.tools.ant.taskdefs.email.PlainMailer
        --> org.apache.tools.ant.types.FileSet
    EmailTask$Encoding
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        --> org.apache.tools.ant.types.EnumeratedAttribute
    Mailer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.listener.MailLogger
        --> org.apache.tools.ant.taskdefs.email.EmailAddress
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        --> org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        --> org.apache.tools.ant.util.DateUtils
    Message
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        <-- org.apache.tools.ant.taskdefs.email.Mailer
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
    PlainMailer
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.email.EmailAddress
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        --> org.apache.tools.ant.taskdefs.email.Mailer
        --> org.apache.tools.ant.taskdefs.email.Message
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
        --> org.apache.tools.mail.MailMessage
    UUMailer
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.taskdefs.email.PlainMailer
        --> sun.misc.UUEncoder *
org.apache.tools.ant.taskdefs.rmic
    DefaultRmicAdapter
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Random *
        --> java.util.Vector *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Rmic
        <-> org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        --> org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.JavaEnvUtils
    DefaultRmicAdapter$RmicFileNameMapper
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Random *
        --> org.apache.tools.ant.taskdefs.Rmic
        <-> org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        --> org.apache.tools.ant.util.FileNameMapper
    KaffeRmic
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.taskdefs.ExecuteJava
        --> org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        --> org.apache.tools.ant.types.Commandline
    RmicAdapter
        --> java.lang.Object *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.FileNameMapper
    RmicAdapterFactory
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        --> org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        --> org.apache.tools.ant.taskdefs.rmic.SunRmic
        --> org.apache.tools.ant.taskdefs.rmic.WLRmic
    SunRmic
        --> java.io.IOException *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.taskdefs.LogOutputStream
        --> org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        --> org.apache.tools.ant.types.Commandline
    WLRmic
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Location
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapterFactory
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Path
org.apache.tools.ant.types
    AbstractFileSet
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.FileScanner
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        --> org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.DirSet
        <-- org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.PatternSet
        --> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.ant.types.selectors.AndSelector
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FileSelector[] *
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        --> org.apache.tools.ant.types.selectors.MajoritySelector
        --> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        --> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SelectorScanner
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.TypeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    AntFilterReader
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    Assertions
        --> java.lang.Boolean *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ListIterator *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.types.Assertions$BaseAssertion
        --> org.apache.tools.ant.types.Assertions$DisabledAssertion
        --> org.apache.tools.ant.types.Assertions$EnabledAssertion
        --> org.apache.tools.ant.types.Commandline$Argument
        <-> org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Reference
    Assertions$BaseAssertion
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Assertions$DisabledAssertion
        <-- org.apache.tools.ant.types.Assertions$EnabledAssertion
    Assertions$DisabledAssertion
        --> java.lang.String *
        <-- org.apache.tools.ant.types.Assertions
        --> org.apache.tools.ant.types.Assertions$BaseAssertion
    Assertions$EnabledAssertion
        --> java.lang.String *
        <-- org.apache.tools.ant.types.Assertions
        --> org.apache.tools.ant.types.Assertions$BaseAssertion
    Commandline
        --> java.io.File *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.ListIterator *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Execute
        <-- org.apache.tools.ant.taskdefs.Execute$CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java11CommandLauncher
        <-- org.apache.tools.ant.taskdefs.Execute$Java13CommandLauncher
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Javac12
        <-- org.apache.tools.ant.taskdefs.compilers.Javac13
        <-- org.apache.tools.ant.taskdefs.compilers.JavacExternal
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.compilers.Sj
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.KaffeRmic
        <-- org.apache.tools.ant.taskdefs.rmic.SunRmic
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-> org.apache.tools.ant.types.Commandline$Argument
        <-> org.apache.tools.ant.types.Commandline$Marker
        <-- org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.util.StringUtils
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
    Commandline$Argument
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Patch
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.types.Assertions
        <-> org.apache.tools.ant.types.Commandline
        <-- org.apache.tools.ant.types.Commandline$Marker
        <-- org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.util.facade.ImplementationSpecificArgument
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- spoon.SpoonTask
    Commandline$Marker
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
    CommandlineJava
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.ListIterator *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Java
        <-> org.apache.tools.ant.types.Assertions
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.CommandlineJava$SysProperties
        --> org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.PropertySet
        --> org.apache.tools.ant.util.JavaEnvUtils
        <-- spoon.SpoonTask
    CommandlineJava$SysProperties
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.ListIterator *
        --> java.util.Map *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.Environment
        --> org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.types.PropertySet
    DTDLocation
        --> org.apache.tools.ant.types.ResourceLocation
    DataType
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Description
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelector
    Description
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        <-> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.RuntimeConfigurable
        --> org.apache.tools.ant.Target
        --> org.apache.tools.ant.Task
        --> org.apache.tools.ant.UnknownElement
        --> org.apache.tools.ant.helper.ProjectHelperImpl
        --> org.apache.tools.ant.types.DataType
    DirSet
        --> java.lang.Object *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.SubAnt
        --> org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Path
    EnumeratedAttribute
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.IntrospectionHelper$8
        <-- org.apache.tools.ant.taskdefs.AntStructure
        <-- org.apache.tools.ant.taskdefs.Available$FileDir
        <-- org.apache.tools.ant.taskdefs.Definer$Format
        <-- org.apache.tools.ant.taskdefs.Definer$OnError
        <-- org.apache.tools.ant.taskdefs.Echo$EchoLevel
        <-- org.apache.tools.ant.taskdefs.ExecuteOn$FileDirBoth
        <-- org.apache.tools.ant.taskdefs.FixCRLF$AddAsisRemove
        <-- org.apache.tools.ant.taskdefs.FixCRLF$CrLf
        <-- org.apache.tools.ant.taskdefs.Jar$FilesetManifestConfig
        <-- org.apache.tools.ant.taskdefs.Javadoc$AccessType
        <-- org.apache.tools.ant.taskdefs.Length$FileMode
        <-- org.apache.tools.ant.taskdefs.Length$When
        <-- org.apache.tools.ant.taskdefs.ManifestTask$Mode
        <-- org.apache.tools.ant.taskdefs.PathConvert$TargetOs
        <-- org.apache.tools.ant.taskdefs.Recorder$ActionChoices
        <-- org.apache.tools.ant.taskdefs.Recorder$VerbosityLevelChoices
        <-- org.apache.tools.ant.taskdefs.SQLExec$DelimiterType
        <-- org.apache.tools.ant.taskdefs.SQLExec$OnError
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.Tar$TarLongFileMode
        <-- org.apache.tools.ant.taskdefs.Tstamp$Unit
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        <-- org.apache.tools.ant.taskdefs.WaitFor$Unit
        <-- org.apache.tools.ant.taskdefs.Zip$Duplicate
        <-- org.apache.tools.ant.taskdefs.Zip$WhenEmpty
        <-- org.apache.tools.ant.taskdefs.email.EmailTask$Encoding
        <-- org.apache.tools.ant.types.Mapper$MapperType
        <-- org.apache.tools.ant.types.PropertySet$BuiltinPropertySetName
        <-- org.apache.tools.ant.types.selectors.DateSelector$TimeComparisons
        <-- org.apache.tools.ant.types.selectors.PresentSelector$FilePresence
        <-- org.apache.tools.ant.types.selectors.SizeSelector$ByteUnits
        <-- org.apache.tools.ant.types.selectors.SizeSelector$SizeComparisons
        <-- org.apache.tools.ant.types.selectors.TypeSelector$FileType
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$AlgorithmName
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$CacheName
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$ComparatorName
    Environment
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        --> org.apache.tools.ant.types.Environment$Variable
    Environment$Variable
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        <-- org.apache.tools.ant.types.Environment
        --> org.apache.tools.ant.types.Path
    FileList
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Touch
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.FileList$FileName
        <-- org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
    FileList$FileName
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.types.FileList
    FileSet
        --> java.lang.Object *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Checksum
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$TagArgument
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.SQLExec
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.Sync
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Tar$TarFileSet
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogTask
        <-- org.apache.tools.ant.taskdefs.email.EmailTask
        --> org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- spoon.SpoonTask
    FilterChain
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.filters.ChainableReader
        --> org.apache.tools.ant.filters.ClassConstants
        --> org.apache.tools.ant.filters.EscapeUnicode
        --> org.apache.tools.ant.filters.ExpandProperties
        --> org.apache.tools.ant.filters.HeadFilter
        --> org.apache.tools.ant.filters.LineContains
        --> org.apache.tools.ant.filters.LineContainsRegExp
        --> org.apache.tools.ant.filters.PrefixLines
        --> org.apache.tools.ant.filters.ReplaceTokens
        --> org.apache.tools.ant.filters.StripJavaComments
        --> org.apache.tools.ant.filters.StripLineBreaks
        --> org.apache.tools.ant.filters.StripLineComments
        --> org.apache.tools.ant.filters.TabsToSpaces
        --> org.apache.tools.ant.filters.TailFilter
        --> org.apache.tools.ant.filters.TokenFilter
        --> org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        --> org.apache.tools.ant.filters.TokenFilter$DeleteCharacters
        --> org.apache.tools.ant.filters.TokenFilter$IgnoreBlank
        --> org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        --> org.apache.tools.ant.filters.TokenFilter$ReplaceString
        --> org.apache.tools.ant.filters.TokenFilter$Trim
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.LoadFile
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        --> org.apache.tools.ant.types.AntFilterReader
        --> org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.mappers.FilterMapper
    FilterSet
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringIndexOutOfBoundsException *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Filter
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.FilterSet$Filter
        <-> org.apache.tools.ant.types.FilterSet$FiltersFile
        <-- org.apache.tools.ant.types.FilterSetCollection
    FilterSet$Filter
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.types.FilterSet
    FilterSet$FiltersFile
        --> java.io.File *
        --> java.lang.Object *
        <-> org.apache.tools.ant.types.FilterSet
    FilterSetCollection
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.types.FilterSet
        <-- org.apache.tools.ant.util.FileUtils
    FlexInteger
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
    Mapper
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Stack *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Mapper$MapperType
        --> org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.util.CompositeMapper
        <-> org.apache.tools.ant.util.ContainerMapper
        --> org.apache.tools.ant.util.FileNameMapper
    Mapper$MapperType
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Properties *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.PropertySet
    Parameter
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.BaseParamFilterReader
        <-- org.apache.tools.ant.filters.ConcatFilter
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.LineContains
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.PrefixLines
        <-- org.apache.tools.ant.filters.ReplaceTokens
        <-- org.apache.tools.ant.filters.StripLineBreaks
        <-- org.apache.tools.ant.filters.StripLineComments
        <-- org.apache.tools.ant.filters.TabsToSpaces
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Parameterizable
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    Parameterizable
        --> java.lang.Object *
        <-- org.apache.tools.ant.filters.BaseParamFilterReader
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.ExtendFileSelector
    Path
        --> java.io.File *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Locale *
        --> java.util.Stack *
        --> java.util.Vector *
        <-- org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.PathTokenizer
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.WhichResource
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.compilers.Gcj
        <-- org.apache.tools.ant.taskdefs.compilers.Jikes
        <-- org.apache.tools.ant.taskdefs.compilers.Jvc
        <-- org.apache.tools.ant.taskdefs.compilers.Kjc
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.WLRmic
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.DirSet
        <-- org.apache.tools.ant.types.Environment$Variable
        --> org.apache.tools.ant.types.FileList
        --> org.apache.tools.ant.types.FileSet
        <-- org.apache.tools.ant.types.Mapper
        <-> org.apache.tools.ant.types.Path$PathElement
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        --> org.apache.tools.ant.util.JavaEnvUtils
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- spoon.SpoonTask
    Path$PathElement
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-> org.apache.tools.ant.types.Path
    PatternSet
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileReader *
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Enumeration *
        --> java.util.Stack *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.DataType
        <-> org.apache.tools.ant.types.PatternSet$NameEntry
        --> org.apache.tools.ant.types.Reference
    PatternSet$NameEntry
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Chmod
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-> org.apache.tools.ant.types.PatternSet
    Permissions
        --> java.lang.Object *
        --> java.lang.SecurityManager *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.net.SocketPermission *
        --> java.security.Permission *
        --> java.security.Permissions *
        --> java.security.UnresolvedPermission *
        --> java.security.cert.Certificate *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.ListIterator *
        --> java.util.PropertyPermission *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.types.Permissions$1
        <-> org.apache.tools.ant.types.Permissions$MySM
        --> org.apache.tools.ant.types.Permissions$Permission
    Permissions$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
    Permissions$MySM
        --> java.lang.Object *
        --> java.lang.RuntimePermission *
        --> java.lang.SecurityException *
        --> java.lang.SecurityManager *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.security.Permission *
        --> java.security.Permissions *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ListIterator *
        --> org.apache.tools.ant.ExitException
        <-> org.apache.tools.ant.types.Permissions
        --> org.apache.tools.ant.types.Permissions$1
        --> org.apache.tools.ant.types.Permissions$Permission
    Permissions$Permission
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.security.Permission *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        <-- org.apache.tools.ant.types.Permissions
        <-- org.apache.tools.ant.types.Permissions$MySM
    PropertySet
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Properties *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.CallTarget
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.CommandlineJava$SysProperties
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.Mapper$MapperType
        --> org.apache.tools.ant.types.PropertySet$BuiltinPropertySetName
        --> org.apache.tools.ant.types.PropertySet$PropertyRef
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.regexp.RegexpMatcher
        --> org.apache.tools.ant.util.regexp.RegexpMatcherFactory
    PropertySet$BuiltinPropertySetName
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.PropertySet$PropertyRef
    PropertySet$PropertyRef
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.types.PropertySet
        --> org.apache.tools.ant.types.PropertySet$BuiltinPropertySetName
    RedirectorElement
        --> java.io.File *
        --> java.io.File[] *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.util.FileNameMapper
    Reference
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Ant$Reference
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.DefBase
        <-- org.apache.tools.ant.taskdefs.JDBCTask
        <-- org.apache.tools.ant.taskdefs.Java
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Javadoc$ExtensionInfo
        <-- org.apache.tools.ant.taskdefs.LoadProperties
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.Property
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.SubAnt
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.condition.IsReference
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.AntFilterReader
        <-- org.apache.tools.ant.types.Assertions
        <-- org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.FileList
        <-- org.apache.tools.ant.types.FilterChain
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.Path
        <-- org.apache.tools.ant.types.PatternSet
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.Substitution
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.ZipFileSet
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.util.ClasspathUtils
        <-- org.apache.tools.ant.util.ClasspathUtils$Delegate
        <-- spoon.SpoonTask
    RegularExpression
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.util.regexp.Regexp
        --> org.apache.tools.ant.util.regexp.RegexpFactory
    Resource
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Comparable *
        --> java.lang.Error *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Length$AllHandler
        <-- org.apache.tools.ant.taskdefs.Length$EachHandler
        <-- org.apache.tools.ant.taskdefs.Length$Handler
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.Zip$ArchiveState
        <-- org.apache.tools.ant.types.ResourceFactory
        <-- org.apache.tools.ant.types.ZipScanner
        <-- org.apache.tools.ant.types.selectors.SelectorUtils
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    ResourceFactory
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    ResourceLocation
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        <-- org.apache.tools.ant.types.DTDLocation
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
    Resource[] *
        <-- org.apache.tools.ant.taskdefs.Zip
    Substitution
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Reference
    XMLCatalog
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Cloneable *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.Enumeration *
        --> java.util.Stack *
        --> java.util.Vector *
        --> javax.xml.parsers.ParserConfigurationException *
        --> javax.xml.parsers.SAXParser *
        --> javax.xml.parsers.SAXParserFactory *
        --> javax.xml.transform.Source *
        --> javax.xml.transform.TransformerException *
        --> javax.xml.transform.URIResolver *
        --> javax.xml.transform.sax.SAXSource *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.types.ResourceLocation
        --> org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-> org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-> org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.JAXPUtils
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
    XMLCatalog$CatalogResolver
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.xml.transform.Source *
        --> javax.xml.transform.TransformerException *
        --> javax.xml.transform.URIResolver *
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        --> org.xml.sax.EntityResolver *
        --> org.xml.sax.InputSource *
    XMLCatalog$ExternalResolver
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> javax.xml.transform.Source *
        --> javax.xml.transform.TransformerException *
        --> javax.xml.transform.sax.SAXSource *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.ResourceLocation
        <-> org.apache.tools.ant.types.XMLCatalog
        --> org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        --> org.xml.sax.InputSource *
    XMLCatalog$InternalResolver
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> javax.xml.transform.Source *
        --> javax.xml.transform.TransformerException *
        --> javax.xml.transform.sax.SAXSource *
        --> org.apache.tools.ant.types.ResourceLocation
        <-> org.apache.tools.ant.types.XMLCatalog
        --> org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        --> org.xml.sax.InputSource *
    ZipFileSet
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Stack *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.FileScanner
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Reference
        --> org.apache.tools.ant.types.ZipScanner
    ZipScanner
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> java.util.zip.ZipException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.types.ZipFileSet
        --> org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipFile
org.apache.tools.ant.types.mappers
    FilterMapper
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.UnsupportedAttributeException
        --> org.apache.tools.ant.filters.util.ChainReaderHelper
        --> org.apache.tools.ant.types.FilterChain
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
org.apache.tools.ant.types.resolver
    ApacheCatalog
        --> java.lang.String *
        --> java.net.URL *
        <-> org.apache.tools.ant.types.resolver.ApacheCatalogResolver
        --> org.apache.xml.resolver.Catalog *
        --> org.apache.xml.resolver.CatalogEntry *
        --> org.apache.xml.resolver.CatalogManager *
        --> org.apache.xml.resolver.helpers.Debug *
        --> org.apache.xml.resolver.helpers.PublicId *
    ApacheCatalogResolver
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.util.Properties *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.types.ResourceLocation
        --> org.apache.tools.ant.types.XMLCatalog
        <-> org.apache.tools.ant.types.resolver.ApacheCatalog
        --> org.apache.xml.resolver.Catalog *
        --> org.apache.xml.resolver.CatalogManager *
        --> org.apache.xml.resolver.tools.CatalogResolver *
org.apache.tools.ant.types.selectors
    AbstractSelectorContainer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        --> org.apache.tools.ant.types.DataType
        --> org.apache.tools.ant.types.selectors.AndSelector
        --> org.apache.tools.ant.types.selectors.BaseSelector
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        --> org.apache.tools.ant.types.selectors.MajoritySelector
        --> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        --> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.TypeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    AndSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-> org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    BaseExtendSelector
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DateSelector
        <-- org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.ExtendFileSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.types.selectors.SizeSelector
        <-- org.apache.tools.ant.types.selectors.TypeSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    BaseSelector
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.types.DataType
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
    BaseSelectorContainer
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-> org.apache.tools.ant.types.selectors.AndSelector
        --> org.apache.tools.ant.types.selectors.BaseSelector
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        <-> org.apache.tools.ant.types.selectors.MajoritySelector
        <-> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        <-> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        <-> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.TypeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    ContainsRegexpSelector
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.util.regexp.Regexp
    ContainsSelector
        --> java.io.BufferedReader *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SelectorUtils
    DateSelector
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Math *
        --> java.lang.NumberFormatException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.DateFormat *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Date *
        --> java.util.Locale *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        --> org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.DateSelector$TimeComparisons
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    DateSelector$TimeComparisons
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.DateSelector
    DependSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SelectorUtils
        --> org.apache.tools.ant.util.FileNameMapper
    DepthSelector
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.StringTokenizer *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    DifferentSelector
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.util.FileUtils
    ExtendFileSelector
        --> java.lang.Object *
        --> org.apache.tools.ant.types.Parameterizable
        <-- org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
    ExtendSelector
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Vector *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.ExtendFileSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    FileSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.ExtendFileSelector
        <-- org.apache.tools.ant.types.selectors.ExtendSelector
        <-- org.apache.tools.ant.types.selectors.MajoritySelector
        <-- org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.OrSelector
        <-- org.apache.tools.ant.types.selectors.SelectSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorScanner
    FileSelector[] *
        <-- org.apache.tools.ant.types.AbstractFileSet
    FilenameSelector
        --> java.io.File *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SelectorUtils
    MajoritySelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-> org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    MappingSelector
        --> java.io.File *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.IdentityMapper
    NoneSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-> org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.NotSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    NotSelector
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.NoneSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    OrSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-> org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    PresentSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.PresentSelector$FilePresence
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.IdentityMapper
    PresentSelector$FilePresence
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.PresentSelector
    SelectSelector
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        <-> org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.FileSelector
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
    SelectorContainer
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.AndSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        --> org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        --> org.apache.tools.ant.types.selectors.ContainsSelector
        --> org.apache.tools.ant.types.selectors.DateSelector
        --> org.apache.tools.ant.types.selectors.DependSelector
        --> org.apache.tools.ant.types.selectors.DepthSelector
        --> org.apache.tools.ant.types.selectors.DifferentSelector
        --> org.apache.tools.ant.types.selectors.ExtendSelector
        --> org.apache.tools.ant.types.selectors.FileSelector
        --> org.apache.tools.ant.types.selectors.FilenameSelector
        --> org.apache.tools.ant.types.selectors.MajoritySelector
        --> org.apache.tools.ant.types.selectors.NoneSelector
        --> org.apache.tools.ant.types.selectors.NotSelector
        --> org.apache.tools.ant.types.selectors.OrSelector
        --> org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.types.selectors.SelectSelector
        --> org.apache.tools.ant.types.selectors.SizeSelector
        --> org.apache.tools.ant.types.selectors.TypeSelector
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    SelectorScanner
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.selectors.FileSelector
    SelectorUtils
        --> java.io.File *
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.taskdefs.Expand
        --> org.apache.tools.ant.types.Resource
        <-- org.apache.tools.ant.types.selectors.ContainsSelector
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.FilenameSelector
        <-- org.apache.tools.ant.util.ResourceUtils
    SizeSelector
        --> java.io.File *
        --> java.lang.Long *
        --> java.lang.NumberFormatException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.SizeSelector$ByteUnits
        --> org.apache.tools.ant.types.selectors.SizeSelector$SizeComparisons
    SizeSelector$ByteUnits
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.SizeSelector
    SizeSelector$SizeComparisons
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.SizeSelector
    TypeSelector
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.TypeSelector$FileType
    TypeSelector$FileType
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.TypeSelector
org.apache.tools.ant.types.selectors.modifiedselector
    Algorithm
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.HashvalueAlgorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    Cache
        --> java.lang.Object *
        --> java.util.Iterator *
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
        <-- org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
    DigestAlgorithm
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.security.DigestInputStream *
        --> java.security.MessageDigest *
        --> java.security.NoSuchAlgorithmException *
        --> java.security.NoSuchProviderException *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    EqualComparator
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    HashvalueAlgorithm
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
    ModifiedSelector
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Comparator *
        --> java.util.Iterator *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.IntrospectionHelper
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.Delete
        <-- org.apache.tools.ant.taskdefs.MatchingTask
        <-- org.apache.tools.ant.types.AbstractFileSet
        --> org.apache.tools.ant.types.Parameter
        <-- org.apache.tools.ant.types.selectors.AbstractSelectorContainer
        --> org.apache.tools.ant.types.selectors.BaseExtendSelector
        <-- org.apache.tools.ant.types.selectors.BaseSelectorContainer
        <-- org.apache.tools.ant.types.selectors.SelectorContainer
        --> org.apache.tools.ant.types.selectors.modifiedselector.Algorithm
        --> org.apache.tools.ant.types.selectors.modifiedselector.Cache
        --> org.apache.tools.ant.types.selectors.modifiedselector.DigestAlgorithm
        --> org.apache.tools.ant.types.selectors.modifiedselector.EqualComparator
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$AlgorithmName
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$CacheName
        --> org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector$ComparatorName
        --> org.apache.tools.ant.types.selectors.modifiedselector.PropertiesfileCache
    ModifiedSelector$AlgorithmName
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    ModifiedSelector$CacheName
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    ModifiedSelector$ComparatorName
        --> java.lang.String *
        --> org.apache.tools.ant.types.EnumeratedAttribute
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
    PropertiesfileCache
        --> java.io.BufferedInputStream *
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.ClassCastException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.Properties *
        --> java.util.Vector *
        --> org.apache.tools.ant.types.selectors.modifiedselector.Cache
        <-- org.apache.tools.ant.types.selectors.modifiedselector.ModifiedSelector
org.apache.tools.ant.util
    ChainedMapper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.tools.ant.util.ContainerMapper
        --> org.apache.tools.ant.util.FileNameMapper
    ClasspathUtils
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.DefBase
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        <-> org.apache.tools.ant.util.ClasspathUtils$Delegate
    ClasspathUtils$Delegate
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.DefBase
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        <-> org.apache.tools.ant.util.ClasspathUtils
    CollectionUtils
        --> java.lang.Object *
        --> java.util.Dictionary *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.taskdefs.Manifest
        <-- org.apache.tools.ant.taskdefs.Manifest$Attribute
        <-- org.apache.tools.ant.taskdefs.Manifest$Section
        --> org.apache.tools.ant.util.CollectionUtils$CompoundEnumeration
    CollectionUtils$CompoundEnumeration
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.NoSuchElementException *
        <-- org.apache.tools.ant.util.CollectionUtils
    CollectionUtils$EmptyEnumeration
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.NoSuchElementException *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.Target
    CompositeMapper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.apache.tools.ant.types.Mapper
        --> org.apache.tools.ant.util.ContainerMapper
        --> org.apache.tools.ant.util.FileNameMapper
    ConcatFileInputStream
        --> java.io.BufferedInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.util.FileUtils
    ContainerMapper
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        <-> org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        --> org.apache.tools.ant.util.FileNameMapper
    DOMElementWriter
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Writer *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        --> org.w3c.dom.Attr *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.NamedNodeMap *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.w3c.dom.Text *
    DOMUtils
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.xml.parsers.DocumentBuilder *
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        --> org.apache.tools.ant.util.JAXPUtils
        --> org.w3c.dom.CDATASection *
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.Text *
    DateUtils
        --> java.lang.Long *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.text.ChoiceFormat *
        --> java.text.DateFormat *
        --> java.text.Format *
        --> java.text.MessageFormat *
        --> java.text.ParseException *
        --> java.text.SimpleDateFormat *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.Locale *
        --> java.util.TimeZone *
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.email.Mailer
    FileNameMapper
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.PathConvert
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XSLTProcess$StyleMapper
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter$RmicFileNameMapper
        <-- org.apache.tools.ant.taskdefs.rmic.RmicAdapter
        <-- org.apache.tools.ant.types.Mapper
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.types.RedirectorElement
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.DependSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        <-- org.apache.tools.ant.util.ChainedMapper
        <-- org.apache.tools.ant.util.CompositeMapper
        <-- org.apache.tools.ant.util.ContainerMapper
        <-- org.apache.tools.ant.util.FlatFileNameMapper
        <-- org.apache.tools.ant.util.GlobPatternMapper
        <-- org.apache.tools.ant.util.IdentityMapper
        <-- org.apache.tools.ant.util.MergingMapper
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    FileUtils
        --> java.io.BufferedInputStream *
        --> java.io.BufferedReader *
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.Character *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.Runtime *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.net.MalformedURLException *
        --> java.net.URL *
        --> java.text.CharacterIterator *
        --> java.text.DecimalFormat *
        --> java.text.StringCharacterIterator *
        --> java.util.Random *
        --> java.util.Stack *
        --> java.util.StringTokenizer *
        --> java.util.Vector *
        <-- org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.DirectoryScanner
        <-- org.apache.tools.ant.Location
        <-> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.filters.BaseFilterReader
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-> org.apache.tools.ant.filters.util.ChainReaderHelper
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        --> org.apache.tools.ant.launch.Locator *
        <-- org.apache.tools.ant.loader.AntClassLoader2
        <-- org.apache.tools.ant.taskdefs.Ant
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.BuildNumber
        <-- org.apache.tools.ant.taskdefs.Concat
        <-- org.apache.tools.ant.taskdefs.Concat$TextElement
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.DependSet
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.ExecTask
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.FixCRLF
        <-- org.apache.tools.ant.taskdefs.Get
        <-- org.apache.tools.ant.taskdefs.ImportTask
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.Length
        <-- org.apache.tools.ant.taskdefs.Move
        <-- org.apache.tools.ant.taskdefs.Rename
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.TempFile
        <-- org.apache.tools.ant.taskdefs.Touch
        <-- org.apache.tools.ant.taskdefs.Untar
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.XSLTProcess
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        <-- org.apache.tools.ant.taskdefs.condition.FilesMatch
        <-- org.apache.tools.ant.taskdefs.condition.IsFileSelected
        --> org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        --> org.apache.tools.ant.types.FilterSetCollection
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.mappers.FilterMapper
        <-- org.apache.tools.ant.types.selectors.DifferentSelector
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.util.ConcatFileInputStream
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- org.apache.tools.ant.util.JavaEnvUtils
        --> org.apache.tools.ant.util.LineTokenizer
        <-- org.apache.tools.ant.util.LoaderUtils
        <-- org.apache.tools.ant.util.ResourceUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    FlatFileNameMapper
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Copy
        --> org.apache.tools.ant.util.FileNameMapper
    GlobPatternMapper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.util.FileNameMapper
        <-- org.apache.tools.ant.util.PackageNameMapper
        <-- org.apache.tools.ant.util.UnPackageNameMapper
    IdentityMapper
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.Sync$MyCopy
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.selectors.MappingSelector
        <-- org.apache.tools.ant.types.selectors.PresentSelector
        --> org.apache.tools.ant.util.FileNameMapper
    JAXPUtils
        --> java.io.File *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.FactoryConfigurationError *
        --> javax.xml.parsers.ParserConfigurationException *
        --> javax.xml.parsers.SAXParser *
        --> javax.xml.parsers.SAXParserFactory *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.DOMUtils
        --> org.apache.tools.ant.util.FileUtils
        --> org.xml.sax.Parser *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
    JavaEnvUtils
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Vector *
        <-- org.apache.tools.ant.AntClassLoader
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.taskdefs.GenerateKey
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javadoc
        <-- org.apache.tools.ant.taskdefs.SignJar
        <-- org.apache.tools.ant.taskdefs.compilers.CompilerAdapterFactory
        <-- org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.taskdefs.condition.Os
        <-- org.apache.tools.ant.taskdefs.rmic.DefaultRmicAdapter
        <-- org.apache.tools.ant.types.CommandlineJava
        <-- org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.WeakishReference
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
    KeepAliveInputStream
        --> java.io.FilterInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        <-- org.apache.tools.ant.input.DefaultInputHandler
        <-- org.apache.tools.ant.taskdefs.Java
    KeepAliveOutputStream
        --> java.io.FilterOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-- org.apache.tools.ant.taskdefs.Redirector
    LazyFileOutputStream
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.ant.taskdefs.Redirector
    LazyHashtable
        --> java.lang.Object *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
    LeadPipeInputStream
        --> java.io.IOException *
        --> java.io.PipedInputStream *
        --> java.io.PipedOutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Redirector
    LineTokenizer
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.filters.HeadFilter
        <-- org.apache.tools.ant.filters.TailFilter
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.Tokenizer
    LoaderUtils
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        <-- org.apache.tools.ant.AntClassLoader
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.Diagnostics
        <-- org.apache.tools.ant.ProjectHelper
        --> org.apache.tools.ant.launch.Locator *
        --> org.apache.tools.ant.util.FileUtils
    MergingMapper
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.UpToDate
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.util.FileNameMapper
    OutputStreamFunneler
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Redirector
        --> org.apache.tools.ant.util.OutputStreamFunneler$1
        <-> org.apache.tools.ant.util.OutputStreamFunneler$Funnel
    OutputStreamFunneler$1
        --> java.lang.Object *
        <-- org.apache.tools.ant.util.OutputStreamFunneler
        <-- org.apache.tools.ant.util.OutputStreamFunneler$Funnel
    OutputStreamFunneler$Funnel
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-> org.apache.tools.ant.util.OutputStreamFunneler
        --> org.apache.tools.ant.util.OutputStreamFunneler$1
    PackageNameMapper
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.util.GlobPatternMapper
    ReaderInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.Reader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        <-- org.apache.tools.ant.filters.StringInputStream
        <-- org.apache.tools.ant.taskdefs.Redirector
    RegexpPatternMapper
        --> java.lang.Character *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.regexp.RegexpMatcher
        --> org.apache.tools.ant.util.regexp.RegexpMatcherFactory
    ResourceUtils
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Date *
        --> java.util.Vector *
        --> org.apache.tools.ant.ProjectComponent
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.ant.types.Resource
        --> org.apache.tools.ant.types.ResourceFactory
        --> org.apache.tools.ant.types.selectors.SelectorUtils
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        <-- org.apache.tools.ant.util.SourceFileScanner
    ScriptRunner
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.IOException *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.bsf.BSFException *
        --> org.apache.bsf.BSFManager *
        --> org.apache.tools.ant.BuildException
    SourceFileScanner
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.ProjectComponent
        --> org.apache.tools.ant.Task
        <-- org.apache.tools.ant.taskdefs.Copy
        <-- org.apache.tools.ant.taskdefs.ExecuteOn
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.UpToDate
        --> org.apache.tools.ant.types.Resource
        --> org.apache.tools.ant.types.ResourceFactory
        --> org.apache.tools.ant.util.FileNameMapper
        --> org.apache.tools.ant.util.FileUtils
        --> org.apache.tools.ant.util.ResourceUtils
    StringUtils
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Vector *
        <-- org.apache.tools.ant.DefaultLogger
        <-- org.apache.tools.ant.NoBannerLogger
        <-- org.apache.tools.ant.Project
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.AbstractCvsTask
        <-- org.apache.tools.ant.taskdefs.Available
        <-- org.apache.tools.ant.taskdefs.CVSPass
        <-- org.apache.tools.ant.taskdefs.Input
        <-- org.apache.tools.ant.taskdefs.Parallel
        <-- org.apache.tools.ant.taskdefs.RecorderEntry
        <-- org.apache.tools.ant.taskdefs.Redirector
        <-- org.apache.tools.ant.taskdefs.Replace
        <-- org.apache.tools.ant.types.Commandline
    TaskLogger
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.Task
    TeeOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        <-- org.apache.tools.ant.taskdefs.Redirector
    TimeoutObserver
        --> java.lang.Object *
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-> org.apache.tools.ant.util.Watchdog
    Tokenizer
        --> java.io.IOException *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.filters.TokenFilter
        <-- org.apache.tools.ant.filters.TokenFilter$ChainableReaderFilter
        <-- org.apache.tools.ant.filters.TokenFilter$FileTokenizer
        <-- org.apache.tools.ant.filters.TokenFilter$StringTokenizer
        <-- org.apache.tools.ant.util.LineTokenizer
    UnPackageNameMapper
        --> java.io.File *
        --> java.lang.String *
        --> org.apache.tools.ant.util.GlobPatternMapper
    Watchdog
        --> java.lang.IllegalArgumentException *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.ExecuteJava
        <-- org.apache.tools.ant.taskdefs.ExecuteWatchdog
        <-> org.apache.tools.ant.util.TimeoutObserver
    WeakishReference
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.util.JavaEnvUtils
        <-- org.apache.tools.ant.util.WeakishReference$HardReference
    WeakishReference$HardReference
        --> java.lang.Object *
        --> org.apache.tools.ant.util.WeakishReference
org.apache.tools.ant.util.facade
    FacadeTaskHelper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Rmic
        --> org.apache.tools.ant.util.facade.ImplementationSpecificArgument
    ImplementationSpecificArgument
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.ant.taskdefs.Javac
        <-- org.apache.tools.ant.taskdefs.Javac$ImplementationSpecificArgument
        <-- org.apache.tools.ant.taskdefs.Rmic
        <-- org.apache.tools.ant.taskdefs.Rmic$ImplementationSpecificArgument
        --> org.apache.tools.ant.types.Commandline$Argument
        <-- org.apache.tools.ant.util.facade.FacadeTaskHelper
org.apache.tools.ant.util.regexp
    Regexp
        --> java.lang.Object *
        --> java.lang.String *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.filters.LineContainsRegExp
        <-- org.apache.tools.ant.filters.TokenFilter$ContainsRegex
        <-- org.apache.tools.ant.filters.TokenFilter$ReplaceRegex
        <-- org.apache.tools.ant.types.RegularExpression
        <-- org.apache.tools.ant.types.selectors.ContainsRegexpSelector
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        --> org.apache.tools.ant.util.regexp.RegexpMatcher
    RegexpFactory
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.types.RegularExpression
        --> org.apache.tools.ant.util.regexp.Regexp
        --> org.apache.tools.ant.util.regexp.RegexpMatcher
        --> org.apache.tools.ant.util.regexp.RegexpMatcherFactory
    RegexpMatcher
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.regexp.Regexp
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        <-- org.apache.tools.ant.util.regexp.RegexpMatcherFactory
    RegexpMatcherFactory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        <-- org.apache.tools.ant.types.PropertySet
        <-- org.apache.tools.ant.util.RegexpPatternMapper
        <-- org.apache.tools.ant.util.regexp.RegexpFactory
        --> org.apache.tools.ant.util.regexp.RegexpMatcher
    RegexpUtil
        --> java.lang.Object *
org.apache.tools.bzip2
    BZip2Constants
        --> java.lang.Object *
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
    CBZip2InputStream
        --> C[][] *
        --> I[][] *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.String *
        --> java.lang.System *
        <-- org.apache.tools.ant.taskdefs.BUnzip2
        <-- org.apache.tools.ant.taskdefs.Untar$UntarCompressionMethod
        --> org.apache.tools.bzip2.BZip2Constants
        --> org.apache.tools.bzip2.CRC
    CBZip2OutputStream
        --> C[][] *
        --> I[][] *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        <-- org.apache.tools.ant.taskdefs.BZip2
        <-- org.apache.tools.ant.taskdefs.Tar$TarCompressionMethod
        --> org.apache.tools.bzip2.BZip2Constants
        --> org.apache.tools.bzip2.CBZip2OutputStream$1
        --> org.apache.tools.bzip2.CBZip2OutputStream$StackElem
        --> org.apache.tools.bzip2.CRC
    CBZip2OutputStream$1
        --> java.lang.Object *
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream$StackElem
    CBZip2OutputStream$StackElem
        --> java.lang.Object *
        <-- org.apache.tools.bzip2.CBZip2OutputStream
        --> org.apache.tools.bzip2.CBZip2OutputStream$1
    CRC
        --> java.lang.Object *
        <-- org.apache.tools.bzip2.CBZip2InputStream
        <-- org.apache.tools.bzip2.CBZip2OutputStream
org.apache.tools.mail
    ErrorInQuitException
        --> java.io.IOException *
        --> java.lang.String *
        <-- org.apache.tools.mail.MailMessage
    MailMessage
        --> java.io.BufferedOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.net.InetAddress *
        --> java.net.Socket *
        --> java.util.Enumeration *
        --> java.util.Vector *
        <-- org.apache.tools.ant.listener.MailLogger
        <-- org.apache.tools.ant.taskdefs.email.PlainMailer
        --> org.apache.tools.mail.ErrorInQuitException
        --> org.apache.tools.mail.MailPrintStream
        --> org.apache.tools.mail.SmtpResponseReader
    MailPrintStream
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.String *
        <-- org.apache.tools.mail.MailMessage
    SmtpResponseReader
        --> java.io.BufferedReader *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.Reader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.apache.tools.mail.MailMessage
org.apache.tools.tar
    TarBuffer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
    TarConstants
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.apache.tools.tar.TarEntry
    TarEntry
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Date *
        --> java.util.Locale *
        <-- org.apache.tools.ant.taskdefs.Tar
        <-- org.apache.tools.ant.taskdefs.Untar
        --> org.apache.tools.tar.TarConstants
        <-- org.apache.tools.tar.TarInputStream
        <-- org.apache.tools.tar.TarOutputStream
        --> org.apache.tools.tar.TarUtils
    TarInputStream
        --> java.io.FilterInputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.tools.ant.taskdefs.Untar
        --> org.apache.tools.tar.TarBuffer
        --> org.apache.tools.tar.TarEntry
    TarOutputStream
        --> java.io.FilterOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.tools.ant.taskdefs.Tar
        --> org.apache.tools.tar.TarBuffer
        --> org.apache.tools.tar.TarEntry
    TarUtils
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.apache.tools.tar.TarEntry
org.apache.tools.zip
    AsiExtraField
        --> java.lang.Cloneable *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.zip.CRC32 *
        --> java.util.zip.ZipException *
        --> org.apache.tools.zip.UnixStat
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipLong
        --> org.apache.tools.zip.ZipShort
    ExtraFieldUtils
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> java.util.zip.ZipException *
        --> org.apache.tools.zip.UnrecognizedExtraField
        <-- org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipShort
    JarMarker
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.zip.ZipException *
        <-- org.apache.tools.ant.taskdefs.Jar
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipShort
    UnixStat
        --> java.lang.Object *
        <-- org.apache.tools.zip.AsiExtraField
    UnrecognizedExtraField
        --> java.lang.Object *
        --> java.lang.System *
        <-- org.apache.tools.zip.ExtraFieldUtils
        --> org.apache.tools.zip.ZipExtraField
        --> org.apache.tools.zip.ZipShort
    ZipEntry
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Cloneable *
        --> java.lang.Exception *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.NoSuchElementException *
        --> java.util.Vector *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipException *
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.ZipScanner
        --> org.apache.tools.zip.ExtraFieldUtils
        --> org.apache.tools.zip.ZipExtraField
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
        --> org.apache.tools.zip.ZipShort
    ZipExtraField
        --> java.lang.Object *
        --> java.util.zip.ZipException *
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.JarMarker
        <-- org.apache.tools.zip.UnrecognizedExtraField
        <-- org.apache.tools.zip.ZipEntry
        --> org.apache.tools.zip.ZipShort
    ZipFile
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.RandomAccessFile *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Calendar *
        --> java.util.Date *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.zip.Inflater *
        --> java.util.zip.InflaterInputStream *
        --> java.util.zip.ZipException *
        <-- org.apache.tools.ant.taskdefs.Expand
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.Zip
        <-- org.apache.tools.ant.types.ZipScanner
        --> org.apache.tools.zip.ZipEntry
        <-> org.apache.tools.zip.ZipFile$BoundedInputStream
        --> org.apache.tools.zip.ZipLong
        --> org.apache.tools.zip.ZipOutputStream
        --> org.apache.tools.zip.ZipShort
    ZipFile$BoundedInputStream
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.RandomAccessFile *
        <-> org.apache.tools.zip.ZipFile
    ZipLong
        --> java.lang.Cloneable *
        --> java.lang.Object *
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
    ZipOutputStream
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.FilterOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.RandomAccessFile *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Date *
        --> java.util.Hashtable *
        --> java.util.Vector *
        --> java.util.zip.CRC32 *
        --> java.util.zip.Deflater *
        --> java.util.zip.ZipException *
        <-- org.apache.tools.ant.taskdefs.Ear
        <-- org.apache.tools.ant.taskdefs.Jar
        <-- org.apache.tools.ant.taskdefs.War
        <-- org.apache.tools.ant.taskdefs.Zip
        --> org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipFile
        --> org.apache.tools.zip.ZipLong
        --> org.apache.tools.zip.ZipShort
    ZipShort
        --> java.lang.Cloneable *
        --> java.lang.Object *
        <-- org.apache.tools.zip.AsiExtraField
        <-- org.apache.tools.zip.ExtraFieldUtils
        <-- org.apache.tools.zip.JarMarker
        <-- org.apache.tools.zip.UnrecognizedExtraField
        <-- org.apache.tools.zip.ZipEntry
        <-- org.apache.tools.zip.ZipExtraField
        <-- org.apache.tools.zip.ZipFile
        <-- org.apache.tools.zip.ZipOutputStream
org.apache.xml.resolver *
    Catalog *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
    CatalogEntry *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
    CatalogManager *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
org.apache.xml.resolver.helpers *
    Debug *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
    PublicId *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalog
org.apache.xml.resolver.tools *
    CatalogResolver *
        <-- org.apache.tools.ant.types.resolver.ApacheCatalogResolver
org.eclipse.jdt.core
    IType *
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
    JDTCompilerAdapter
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Javac
        --> org.apache.tools.ant.taskdefs.compilers.DefaultCompilerAdapter
        --> org.apache.tools.ant.types.Commandline
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.util.JavaEnvUtils
        <-> org.eclipse.jdt.core.JDTCompilerAdapter$1
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.antadapter.AntAdapterMessages
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
        --> org.eclipse.jdt.internal.compiler.util.Util
    JDTCompilerAdapter$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        <-> org.eclipse.jdt.core.JDTCompilerAdapter
    JavaModelException *
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
org.eclipse.jdt.core.compiler
    CategorizedProblem
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.IProblem
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.CompilationResult$1
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.AbortMethod
        <-- org.eclipse.jdt.internal.compiler.problem.AbortType
        <-> org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    CategorizedProblem[] *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    CharOperation
        --> C[] *
        --> java.lang.Character *
        --> java.lang.Integer *
        --> java.lang.Math *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFile$1
        <-- org.eclipse.jdt.internal.compiler.ClassFile$2
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        <-- org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.env.ClassSignature
        <-- org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfIntValues
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- org.eclipse.jdt.internal.compiler.util.SimpleSetOfCharArray
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.util.BasicCompilationUnit
    CompilationProgress
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.core.compiler.batch.BatchCompiler
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblem
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
    InvalidInputException
        --> java.lang.Exception *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
org.eclipse.jdt.core.compiler.batch
    BatchCompiler
        --> java.io.PrintWriter *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        --> org.eclipse.jdt.internal.compiler.batch.Main
org.eclipse.jdt.internal.antadapter
    AntAdapterMessages
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.text.MessageFormat *
        --> java.util.Locale *
        --> java.util.MissingResourceException *
        --> java.util.ResourceBundle *
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
org.eclipse.jdt.internal.compiler
    ASTVisitor
        --> java.lang.Object *
        --> org.eclipse.jdt.core.compiler.IProblem
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-> org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        <-> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Block
        <-> org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-> org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-> org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-> org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-> org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-> org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-> org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-> org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-> org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-> org.eclipse.jdt.internal.compiler.ast.Initializer
        <-> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        <-> org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-> org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-> org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-> org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AbstractAnnotationProcessorManager
        --> java.io.PrintWriter *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    ClassFile
        --> I[][] *
        --> java.lang.Byte *
        --> java.lang.ClassCastException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile$1
        <-> org.eclipse.jdt.internal.compiler.ClassFile$2
        <-> org.eclipse.jdt.internal.compiler.ClassFilePool
        <-> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        --> org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        --> org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.impl.StringConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.Messages
        <-> org.eclipse.jdt.internal.compiler.util.Util
    ClassFile$1
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ClassFile$2
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ClassFilePool
        --> java.lang.Object *
        --> java.util.Arrays *
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
    CompilationResult
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult$1
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.Compiler$1
        <-- org.eclipse.jdt.internal.compiler.ICompilerRequestor
        <-- org.eclipse.jdt.internal.compiler.IDebugRequestor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.AbortMethod
        <-- org.eclipse.jdt.internal.compiler.problem.AbortType
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    CompilationResult$1
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
    Compiler
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Error *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Map *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        <-> org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-> org.eclipse.jdt.internal.compiler.Compiler$1
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> org.eclipse.jdt.internal.compiler.IDebugRequestor
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        <-> org.eclipse.jdt.internal.compiler.ProcessTaskManager
        --> org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.env.ISourceType
        <-> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.CompilerStats
        --> org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException
        --> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Compiler$1
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> org.eclipse.jdt.internal.compiler.IDebugRequestor
    DefaultErrorHandlingPolicies
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1
        --> org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$2
        --> org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$3
        --> org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
    DefaultErrorHandlingPolicies$1
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
    DefaultErrorHandlingPolicies$2
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
    DefaultErrorHandlingPolicies$3
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
    DefaultErrorHandlingPolicies$4
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
    ExtraFlags
        --> java.lang.Object *
        --> org.eclipse.jdt.core.IType *
        --> org.eclipse.jdt.core.JavaModelException *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
    ICompilerRequestor
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.Compiler$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    IDebugRequestor
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.Compiler$1
    IErrorHandlingPolicy
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$1
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$2
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$3
        <-- org.eclipse.jdt.internal.compiler.DefaultErrorHandlingPolicies$4
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$4
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$2
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblemFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Locale *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    ISourceElementRequestor *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$FieldInfo *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$MethodInfo *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$ParameterInfo *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$ParameterInfo[] *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$TypeInfo *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ISourceElementRequestor$TypeParameterInfo *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    ProcessTaskManager
        --> java.io.PrintWriter *
        --> java.lang.Error *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        <-> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.util.Messages
    ReadManager
        --> C[] *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Error *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Runtime *
        --> java.lang.RuntimeException *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    SourceElementNotifier
        --> C[] *
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.System *
        --> java.util.Map *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ExtraFlags
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$FieldInfo *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$MethodInfo *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$ParameterInfo *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$ParameterInfo[] *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeInfo *
        --> org.eclipse.jdt.internal.compiler.ISourceElementRequestor$TypeParameterInfo *
        <-> org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObjectToInt
    SourceElementNotifier$LocalDeclarationVisitor
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
org.eclipse.jdt.internal.compiler.apt.dispatch
    AnnotationDiscoveryVisitor
        --> java.lang.Object *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.TypeElement *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
    AptProblem
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblem
    BaseAnnotationProcessorManager
        --> java.io.PrintWriter *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> javax.annotation.processing.RoundEnvironment *
        --> org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    BaseMessagerImpl
        --> java.lang.CharSequence *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.AnnotationValue *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.tools.Diagnostic$Kind *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.util.Util
    BaseProcessingEnvImpl
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> javax.annotation.processing.Filer *
        --> javax.annotation.processing.Messager *
        --> javax.annotation.processing.ProcessingEnvironment *
        --> javax.lang.model.SourceVersion *
        --> javax.lang.model.util.Elements *
        --> javax.lang.model.util.Types *
        --> org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    BatchAnnotationProcessorManager
        --> java.io.PrintWriter *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ServiceConfigurationError *
        --> java.util.ServiceLoader *
        --> javax.annotation.processing.ProcessingEnvironment *
        --> javax.annotation.processing.Processor *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.StandardLocation *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
    BatchFilerImpl
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.CharSequence *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URI *
        --> java.util.HashSet *
        --> javax.annotation.processing.Filer *
        --> javax.annotation.processing.FilerException *
        --> javax.lang.model.element.Element *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.StandardLocation *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    BatchMessagerImpl
        --> java.lang.CharSequence *
        --> javax.annotation.processing.Messager *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.AnnotationValue *
        --> javax.lang.model.element.Element *
        --> javax.tools.Diagnostic$Kind *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.batch.Main
    BatchProcessingEnvImpl
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoSuchFieldException *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.nio.charset.Charset *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.LinkedHashMap *
        --> java.util.Locale *
        --> java.util.Map *
        --> javax.annotation.processing.Filer *
        --> javax.annotation.processing.Messager *
        --> javax.tools.JavaFileManager *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
    HookedJavaFileObject
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.Writer *
        --> java.lang.NoSuchFieldError *
        --> java.lang.String *
        --> javax.tools.ForwardingJavaFileObject *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingOutputStream
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject$ForwardingWriter
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    HookedJavaFileObject$ForwardingOutputStream
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Class *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
    HookedJavaFileObject$ForwardingWriter
        --> java.io.IOException *
        --> java.io.Writer *
        --> java.lang.Appendable *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
    IProcessorProvider
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.util.List *
        --> javax.annotation.processing.Processor *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
    ProcessorInfo
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.Set *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> javax.annotation.processing.Processor *
        --> javax.lang.model.SourceVersion *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.TypeElement *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundDispatcher
    RoundDispatcher
        --> java.io.PrintWriter *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> javax.annotation.processing.Processor *
        --> javax.annotation.processing.RoundEnvironment *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.IProcessorProvider
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.ProcessorInfo
    RoundEnvImpl
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.Set *
        --> javax.annotation.processing.RoundEnvironment *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.TypeElement *
        --> javax.lang.model.util.ElementFilter *
        --> javax.lang.model.util.Elements *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.util.ManyToMany
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
org.eclipse.jdt.internal.compiler.apt.model
    AnnotationMemberValue
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    AnnotationMirrorImpl
        --> java.lang.AssertionError *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Proxy *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.LinkedHashMap *
        --> java.util.List *
        --> java.util.Map *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.type.DeclaredType *
        --> javax.lang.model.type.MirroredTypeException *
        --> javax.lang.model.type.MirroredTypesException *
        --> javax.lang.model.type.TypeMirror *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    AnnotationValueImpl
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.AnnotationValue *
        --> javax.lang.model.element.AnnotationValueVisitor *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.VariableElement *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        --> org.eclipse.jdt.internal.compiler.impl.FloatConstant
        --> org.eclipse.jdt.internal.compiler.impl.LongConstant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        --> org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
    ArrayTypeImpl
        --> java.lang.Object *
        --> javax.lang.model.type.ArrayType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    DeclaredTypeImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.type.DeclaredType *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    ElementImpl
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Proxy *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.IElementInfo
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    ElementsImpl
        --> C[] *
        --> java.io.IOException *
        --> java.io.Writer *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.CharSequence *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldError *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.LinkedHashSet *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ExecutableElement *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.TypeElement *
        --> javax.lang.model.util.Elements *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
    ErrorTypeElement
        --> java.lang.Class *
        --> java.lang.annotation.Annotation *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.NestingKind *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.type.ErrorType *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    ErrorTypeImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.type.ErrorType *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    ExecutableElementImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.element.AnnotationValue *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ElementVisitor *
        --> javax.lang.model.element.ExecutableElement *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.TypeElement *
        --> javax.lang.model.element.TypeParameterElement *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        --> org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
    ExecutableTypeImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.type.ExecutableType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVariable *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    Factory
        --> java.lang.AssertionError *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.EnumSet *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.element.AnnotationMirror *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.Modifier *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.TypeParameterElement *
        --> javax.lang.model.type.ErrorType *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.NullType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-> org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
    IElementInfo
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
    NameImpl
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.lang.model.element.Name *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
    NoTypeImpl
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.NullType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeVisitor *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
    PackageElementImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.HashSet *
        --> java.util.List *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ElementVisitor *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.PackageElement *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
    PrimitiveTypeImpl
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> javax.lang.model.type.PrimitiveType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    TypeElementImpl
        --> java.lang.Enum *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.SourceVersion *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ElementVisitor *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.NestingKind *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.TypeElement *
        --> javax.lang.model.element.TypeParameterElement *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-> org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
    TypeMirrorImpl
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
    TypeParameterElementImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ElementVisitor *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.TypeParameterElement *
        --> javax.lang.model.type.TypeMirror *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    TypeVariableImpl
        --> java.lang.Object *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.type.NullType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVariable *
        --> javax.lang.model.type.TypeVisitor *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    TypesImpl
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.TypeElement *
        --> javax.lang.model.type.ArrayType *
        --> javax.lang.model.type.DeclaredType *
        --> javax.lang.model.type.ExecutableType *
        --> javax.lang.model.type.NoType *
        --> javax.lang.model.type.NullType *
        --> javax.lang.model.type.PrimitiveType *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.WildcardType *
        --> javax.lang.model.util.Types *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NoTypeImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
    VariableElementImpl
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> javax.lang.model.element.Element *
        --> javax.lang.model.element.ElementKind *
        --> javax.lang.model.element.ElementVisitor *
        --> javax.lang.model.element.Name *
        --> javax.lang.model.element.PackageElement *
        --> javax.lang.model.element.VariableElement *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.NameImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
    WildcardTypeImpl
        --> java.lang.Object *
        --> javax.lang.model.type.TypeKind *
        --> javax.lang.model.type.TypeMirror *
        --> javax.lang.model.type.TypeVisitor *
        --> javax.lang.model.type.WildcardType *
        --> org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-> org.eclipse.jdt.internal.compiler.apt.model.Factory
        --> org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
org.eclipse.jdt.internal.compiler.apt.util
    Archive
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.nio.charset.Charset *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Set *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipException *
        --> java.util.zip.ZipFile *
        --> org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
    ArchiveFileObject
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.CharSequence *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.net.URI *
        --> java.net.URISyntaxException *
        --> java.nio.charset.Charset *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> javax.lang.model.element.Modifier *
        --> javax.lang.model.element.NestingKind *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Archive
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.apt.util.Util
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.util.Util
    EclipseFileManager
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URI *
        --> java.net.URISyntaxException *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.net.URL[] *
        --> java.nio.charset.Charset *
        --> java.text.MessageFormat *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.MissingResourceException *
        --> java.util.ResourceBundle *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.zip.ZipException *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.StandardJavaFileManager *
        --> javax.tools.StandardLocation *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.apt.util.Archive
        --> org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        --> org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        --> org.eclipse.jdt.internal.compiler.apt.util.Options
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        --> org.eclipse.jdt.internal.compiler.env.AccessRule
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
    EclipseFileObject
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.CharSequence *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> javax.lang.model.element.Modifier *
        --> javax.lang.model.element.NestingKind *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.SimpleJavaFileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.apt.util.Util
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.util.Util
    ManyToMany
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
    Options
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
    Util
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.nio.Buffer *
        --> java.nio.ByteBuffer *
        --> java.nio.CharBuffer *
        --> java.nio.charset.Charset *
        --> java.nio.charset.CharsetDecoder *
        --> java.nio.charset.CoderResult *
        --> java.nio.charset.CodingErrorAction *
        --> java.nio.charset.IllegalCharsetNameException *
        --> java.nio.charset.UnsupportedCharsetException *
        --> javax.tools.FileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError
        --> org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
        --> org.eclipse.jdt.internal.compiler.util.Util
    Util$EncodingError
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingErrorCollector
    Util$EncodingErrorCollector
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> javax.tools.FileObject *
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        --> org.eclipse.jdt.internal.compiler.apt.util.Util$EncodingError
org.eclipse.jdt.internal.compiler.ast
    AND_AND_Expression
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ASTNode
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ASTNode[] *
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    AbstractMethodDeclaration
        --> java.lang.Boolean *
        --> java.lang.NegativeArraySizeException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        <-> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        --> org.eclipse.jdt.internal.compiler.problem.AbortType
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    AbstractVariableDeclaration
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    AllocationExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Annotation
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AnnotationMethodDeclaration
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Argument
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ArrayAllocationExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayInitializer
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayQualifiedTypeReference
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    ArrayReference
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayTypeReference
        --> C[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AssertStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Assignment
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.Reference
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BinaryExpression
        --> java.lang.ArithmeticException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Block
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BranchStatement
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    BreakStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.BranchStatement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CaseStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CastExpression
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression$1
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CastExpression$1
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    CharLiteral
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.CharConstant
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ClassLiteralAccess
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Clinit
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    CombinedBinaryExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    CompilationUnitDeclaration
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        --> java.util.Comparator *
        --> java.util.List *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        --> org.eclipse.jdt.internal.compiler.problem.AbortType
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        --> org.eclipse.jdt.internal.compiler.util.HashSetOfInt
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    CompilationUnitDeclaration$1
        --> java.lang.Object *
        --> java.util.Comparator *
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral
    CompoundAssignment
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorIds
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConditionalExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConstructorDeclaration
        --> java.lang.NegativeArraySizeException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ContinueStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.BranchStatement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoubleLiteral
        --> java.lang.Double *
        --> java.lang.NumberFormatException *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.util.FloatUtil
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    EmptyStatement
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ExplicitConstructorCall
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Expression
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-> org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
        --> org.eclipse.jdt.internal.compiler.util.Messages
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ExtendedStringLiteral
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FakedTrackingVariable
        --> java.lang.Integer *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    FalseLiteral
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.MagicLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldDeclaration
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldReference
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FloatLiteral
        --> java.lang.Float *
        --> java.lang.NumberFormatException *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.FloatConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.util.FloatUtil
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForeachStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IfStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ImportReference
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    Initializer
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    InstanceOfExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IntLiteral
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-> org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue
        --> org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.IntConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IntLiteralMinValue
        <-> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.IntConstant
    Javadoc
        --> C[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        --> org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    JavadocAllocationExpression
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocArgumentExpression
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocArrayQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocArraySingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocFieldReference
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocImplicitTypeReference
        --> C[] *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocMessageSend
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocReturnStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocSingleNameReference
        --> java.lang.Exception *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    JavadocSingleTypeReference
        --> C[] *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    LabeledStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Literal
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.MagicLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LongLiteral
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue
        --> org.eclipse.jdt.internal.compiler.ast.NumberLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.LongConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    LongLiteralMinValue
        <-> org.eclipse.jdt.internal.compiler.ast.LongLiteral
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.LongConstant
    MagicLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
    MarkerAnnotation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MemberValuePair
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MemberValuePair$1
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
    MessageSend
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MethodDeclaration
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    NameReference
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    NormalAnnotation
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NullLiteral
        --> java.lang.Object *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        --> org.eclipse.jdt.internal.compiler.ast.MagicLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NumberLiteral
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
    OR_OR_Expression
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    OperatorExpression
        --> I[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode
        --> org.eclipse.jdt.internal.compiler.ast.OperatorIds
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
    OperatorExpression$1$Decode
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        --> org.eclipse.jdt.internal.compiler.util.Util
    OperatorIds
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    ParameterizedQualifiedTypeReference
        --> C[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ParameterizedSingleTypeReference
        --> C[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PostfixExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PrefixExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedAllocationExpression
        --> C[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedNameReference
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedSuperReference
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedThisReference
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedTypeReference
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Reference
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    ReturnStatement
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        --> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleMemberAnnotation
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleNameReference
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.OperatorIds
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleTypeReference
        --> C[] *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Statement
        --> java.lang.Boolean *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteral
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration$1
        <-> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Literal
        <-> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.StringConstant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteralConcatenation
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SubRoutineStatement
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    SuperReference
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SwitchStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.Statement
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CaseLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SwitchStatement$1$StringSwitchCase
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
    SynchronizedStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThisReference
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThrowStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TrueLiteral
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.MagicLiteral
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TryStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        --> org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TryStatement$1
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    TryStatement$2
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    TypeDeclaration
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Initializer
        <-> org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        --> org.eclipse.jdt.internal.compiler.problem.AbortType
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        <-> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeParameter
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeReference
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeReference[] *
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
    UnaryExpression
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    UnionTypeReference
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    WhileStatement
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Wildcard
        --> C[] *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
org.eclipse.jdt.internal.compiler.batch
    ClasspathDirectory
        --> C[][] *
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.util.Hashtable *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory$1
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.util.Util
    ClasspathDirectory$1
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
    ClasspathJar
        --> C[][] *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        --> org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        --> org.eclipse.jdt.internal.compiler.util.Util
    ClasspathLocation
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
    ClasspathSourceJar
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        --> org.eclipse.jdt.internal.compiler.util.Util
    CompilationUnit
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    CompilationUnit[] *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    FileFinder
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        <-- org.eclipse.jdt.internal.compiler.batch.Main
    FileSystem
        --> C[][] *
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        --> org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
        <-> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    FileSystem$Classpath
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Util
    FileSystem$ClasspathNormalizer
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    FileSystem$ClasspathSectionProblemReporter
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$5
    Main
        --> C[] *
        --> java.io.BufferedInputStream *
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.File[] *
        --> java.io.FilenameFilter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.LineNumberReader *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.InstantiationException *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.UnsupportedClassVersionError *
        --> java.text.MessageFormat *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.MissingResourceException *
        --> java.util.Properties *
        --> java.util.ResourceBundle *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        <-- org.eclipse.jdt.core.compiler.batch.BatchCompiler
        --> org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.batch.FileFinder
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        --> org.eclipse.jdt.internal.compiler.batch.Main$2
        <-> org.eclipse.jdt.internal.compiler.batch.Main$3
        <-> org.eclipse.jdt.internal.compiler.batch.Main$4
        <-> org.eclipse.jdt.internal.compiler.batch.Main$5
        <-> org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        --> org.eclipse.jdt.internal.compiler.env.AccessRule
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.CompilerStats
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        --> org.eclipse.jdt.internal.compiler.problem.ProblemSeverities
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
        <-> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    Main$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        --> java.util.Map$Entry *
        <-> org.eclipse.jdt.internal.compiler.batch.Main$Logger
    Main$2
        --> java.io.File *
        --> java.io.FilenameFilter *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.util.Util
    Main$3
        --> java.lang.Object *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        <-> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
    Main$4
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        <-> org.eclipse.jdt.internal.compiler.batch.Main
    Main$5
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathSectionProblemReporter
        <-> org.eclipse.jdt.internal.compiler.batch.Main
    Main$Logger
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.LineNumberReader *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringReader *
        --> java.io.StringWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.text.DateFormat *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Comparator *
        --> java.util.Date *
        --> java.util.HashMap *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-> org.eclipse.jdt.internal.compiler.batch.Main
        <-> org.eclipse.jdt.internal.compiler.batch.Main$1
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.CompilerStats
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfInt
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.Util
    Main$ResourceBundleFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.HashMap *
        --> java.util.Locale *
        --> java.util.ResourceBundle *
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
org.eclipse.jdt.internal.compiler.classfmt
    AnnotationInfo
        --> java.lang.Class *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        --> org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.env.ClassSignature
        --> org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.ByteConstant
        --> org.eclipse.jdt.internal.compiler.impl.CharConstant
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        --> org.eclipse.jdt.internal.compiler.impl.FloatConstant
        --> org.eclipse.jdt.internal.compiler.impl.IntConstant
        --> org.eclipse.jdt.internal.compiler.impl.LongConstant
        --> org.eclipse.jdt.internal.compiler.impl.ShortConstant
        --> org.eclipse.jdt.internal.compiler.impl.StringConstant
        --> org.eclipse.jdt.internal.compiler.util.Util
    AnnotationInfo[] *
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
    AnnotationMethodInfo
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-> org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
    AnnotationMethodInfoWithAnnotations
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-> org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
    ClassFileConstants
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    ClassFileReader
        --> C[] *
        --> C[][] *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        --> org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.FieldInfo[] *
        --> org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo[] *
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
        --> org.eclipse.jdt.internal.compiler.env.IBinaryField
        --> org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        --> org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        --> org.eclipse.jdt.internal.compiler.util.Util
    ClassFileStruct
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
    ClassFormatException
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    ElementValuePairInfo
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
    FieldInfo
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-> org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryField
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.ByteConstant
        --> org.eclipse.jdt.internal.compiler.impl.CharConstant
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        --> org.eclipse.jdt.internal.compiler.impl.FloatConstant
        --> org.eclipse.jdt.internal.compiler.impl.IntConstant
        --> org.eclipse.jdt.internal.compiler.impl.LongConstant
        --> org.eclipse.jdt.internal.compiler.impl.ShortConstant
        --> org.eclipse.jdt.internal.compiler.impl.StringConstant
        --> org.eclipse.jdt.internal.compiler.util.Util
    FieldInfoWithAnnotation
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-> org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.impl.Constant
    FieldInfo[] *
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
    InnerClassInfo
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        --> org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
    MethodInfo
        --> C[] *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct
        <-> org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        <-> org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        --> org.eclipse.jdt.internal.compiler.util.Util
    MethodInfoWithAnnotations
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
    MethodInfoWithParameterAnnotations
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo[] *
        <-> org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.util.Util
    MethodInfo[] *
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
org.eclipse.jdt.internal.compiler.codegen
    AttributeNamesConstants
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    BranchLabel
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement$1$StringSwitchCase
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.codegen.CaseLabel
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.Label
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
    CachedIndexEntry
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    CaseLabel
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
    CharArrayCache
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    CodeStream
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-> org.eclipse.jdt.internal.compiler.codegen.CaseLabel
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.Label
        <-- org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    ConstantPool
        --> C[] *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileConstants
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.codegen.AttributeNamesConstants
        --> org.eclipse.jdt.internal.compiler.codegen.CachedIndexEntry
        --> org.eclipse.jdt.internal.compiler.codegen.CharArrayCache
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.DoubleCache
        --> org.eclipse.jdt.internal.compiler.codegen.FloatCache
        --> org.eclipse.jdt.internal.compiler.codegen.IntegerCache
        --> org.eclipse.jdt.internal.compiler.codegen.LongCache
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.Util
    DoubleCache
        --> java.lang.Double *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    ExceptionLabel
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.Label
        <-- org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    FloatCache
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    IntegerCache
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    Label
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
    LongCache
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
    MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ObjectCache
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
    Opcodes
        --> java.lang.Object *
    StackMapFrame
        --> java.lang.IllegalArgumentException *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.text.MessageFormat *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    StackMapFrameCodeStream
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$ExceptionMarker
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$FramePosition
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        --> org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.problem.AbortMethod
    StackMapFrameCodeStream$ExceptionMarker
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
    StackMapFrameCodeStream$FramePosition
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
    StackMapFrameCodeStream$StackDepthMarker
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    StackMapFrameCodeStream$StackMarker
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
    VerificationTypeInfo
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackMarker
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
org.eclipse.jdt.internal.compiler.env
    AccessRestriction
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        --> org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    AccessRule
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.env.AccessRestriction
        <-- org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    AccessRuleSet
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.AccessRule
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        <-- org.eclipse.jdt.internal.compiler.util.Util
    ClassSignature
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    EnumConstantSignature
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryAnnotation
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationMethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithAnnotations
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        --> org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryField
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryElementValuePair
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryField
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.IGenericField
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryMethod
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.IGenericMethod
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryNestedType
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ExtraFlags
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.InnerClassInfo
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    IBinaryType
        --> java.lang.Object *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryField
        --> org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        --> org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
        --> org.eclipse.jdt.internal.compiler.env.IGenericType
        <-- org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    ICompilationUnit
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ReadManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$3
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.IDependent
        <-- org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.util.BasicCompilationUnit
    ICompilationUnit[] *
        <-- org.eclipse.jdt.internal.compiler.Compiler
    IDependent
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.env.IGenericType
    IGenericField
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryField
        <-- org.eclipse.jdt.internal.compiler.env.ISourceField
    IGenericMethod
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        <-- org.eclipse.jdt.internal.compiler.env.ISourceMethod
    IGenericType
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.IDependent
        <-- org.eclipse.jdt.internal.compiler.env.ISourceType
    INameEnvironment
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    ISourceField
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.env.IGenericField
        <-- org.eclipse.jdt.internal.compiler.env.ISourceType
    ISourceImport
        --> java.lang.Object *
    ISourceMethod
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.env.IGenericMethod
        <-- org.eclipse.jdt.internal.compiler.env.ISourceType
    ISourceType
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.IGenericType
        --> org.eclipse.jdt.internal.compiler.env.ISourceField
        --> org.eclipse.jdt.internal.compiler.env.ISourceMethod
        <-- org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    NameEnvironmentAnswer
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.env.ISourceType
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
org.eclipse.jdt.internal.compiler.flow
    ConditionalFlowInfo
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
    ExceptionHandlingFlowContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        --> org.eclipse.jdt.internal.compiler.codegen.ObjectCache
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    FinallyFlowContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    FlowContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-> org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-> org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    FlowInfo
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-> org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-> org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
    InitializationFlowContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    InsideSubRoutineFlowContext
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
    LabelFlowContext
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    LoopingFlowContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        --> org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    LoopingFlowContext$EscapingExceptionCatchSite
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    NullInfoRegistry
        --> J[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
    SwitchFlowContext
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        --> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
    UnconditionalFlowInfo
        --> J[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InsideSubRoutineFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.SwitchFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo$AssertionFailedException
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    UnconditionalFlowInfo$AssertionFailedException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
org.eclipse.jdt.internal.compiler.impl
    BooleanConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
    ByteConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    CharConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    CompilerOptions
        --> java.io.ByteArrayInputStream *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.UnsupportedEncodingException *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashMap *
        --> java.util.Map *
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-> org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.impl.IrritantSet
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    CompilerStats
        --> java.lang.Comparable *
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
    Constant
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorIds
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfoWithAnnotation
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.env.IBinaryField
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        <-> org.eclipse.jdt.internal.compiler.impl.ByteConstant
        <-> org.eclipse.jdt.internal.compiler.impl.CharConstant
        <-> org.eclipse.jdt.internal.compiler.impl.DoubleConstant
        <-> org.eclipse.jdt.internal.compiler.impl.FloatConstant
        <-> org.eclipse.jdt.internal.compiler.impl.IntConstant
        <-> org.eclipse.jdt.internal.compiler.impl.LongConstant
        <-> org.eclipse.jdt.internal.compiler.impl.ShortConstant
        <-> org.eclipse.jdt.internal.compiler.impl.StringConstant
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.problem.ShouldNotImplement
        --> org.eclipse.jdt.internal.compiler.util.Messages
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoubleConstant
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    FloatConstant
        --> java.lang.Class *
        --> java.lang.Float *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    ITypeRequestor
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.ISourceType
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
    IntConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteralMinValue
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    IrritantSet
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
    LongConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteralMinValue
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    ReferenceContext
        --> java.lang.Object *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ShortConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
    StringConstant
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-> org.eclipse.jdt.internal.compiler.impl.Constant
org.eclipse.jdt.internal.compiler.lookup
    AnnotationBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
    AnnotationBinding[] *
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
    AnnotationHolder
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
    AnnotationHolder$AnnotationMethodHolder
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
    AnnotationHolder$MethodHolder
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
    AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    AptSourceLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ArrayBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ArrayBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    BaseTypeBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BinaryTypeBinding
        --> java.lang.Boolean *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.ClassSignature
        --> org.eclipse.jdt.internal.compiler.env.EnumConstantSignature
        --> org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
        --> org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair
        --> org.eclipse.jdt.internal.compiler.env.IBinaryField
        --> org.eclipse.jdt.internal.compiler.env.IBinaryMethod
        --> org.eclipse.jdt.internal.compiler.env.IBinaryNestedType
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.impl.BooleanConstant
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    Binding
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$MethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BlockScope
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-> org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    CaptureBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    CatchParameterBinding
        --> java.lang.Object *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ClassScope
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier$LocalDeclarationVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CompilationUnitScope
        --> C[] *
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeCollisionException
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.CompoundNameVector
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfType
        --> org.eclipse.jdt.internal.compiler.util.ObjectVector
        --> org.eclipse.jdt.internal.compiler.util.SimpleNameVector
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    ElementValuePair
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
    ExtraCompilerModifiers
        --> java.lang.Object *
    FieldBinding
        --> java.lang.ClassCastException *
        --> java.lang.Object *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ImportBinding
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    ImportConflictBinding
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    InferenceContext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding[][][] *
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
    InnerEmulationDependency
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
    InvocationSite
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression$1
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$1
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    LocalTypeBinding
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.InnerEmulationDependency
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LocalVariableBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.Block
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair$1
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.BranchLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ConditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowInfo
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.NullInfoRegistry
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LookupEnvironment
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Map *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ClassFilePool
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.env.AccessRestriction
        --> org.eclipse.jdt.internal.compiler.env.IBinaryType
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.env.ISourceType
        --> org.eclipse.jdt.internal.compiler.env.NameEnvironmentAnswer
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding[] *
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReasons
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding[] *
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        --> org.eclipse.jdt.internal.compiler.lookup.SignatureWrapper
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding[] *
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    MemberTypeBinding
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
    MethodBinding
        --> C[] *
        --> java.lang.Boolean *
        --> java.lang.ClassCastException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodBinding[] *
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
    MethodScope
        --> J[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ASTVisitor
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-> org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        --> org.eclipse.jdt.internal.compiler.flow.FlowInfo
        --> org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodVerifier
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.SimpleSet
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    MethodVerifier15
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.SimpleSet
    MissingTypeBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
    MostSpecificExceptionMethodBinding
        --> java.lang.Boolean *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    NestedTypeBinding
        --> java.lang.Object *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    PackageBinding
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.impl.ITypeRequestor
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-> org.eclipse.jdt.internal.compiler.util.HashtableOfPackage
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfType
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ParameterizedFieldBinding
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ParameterizedGenericMethodBinding
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
    ParameterizedGenericMethodBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    ParameterizedMethodBinding
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
    ParameterizedMethodBinding$1
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    ParameterizedMethodBinding$2
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    ParameterizedTypeBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ParameterizedTypeBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    PolymorphicMethodBinding
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    PolymorphicMethodBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    ProblemBinding
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    ProblemFieldBinding
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    ProblemMethodBinding
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    ProblemPackageBinding
        --> C[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
    ProblemReasons
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    ProblemReferenceBinding
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    RawTypeBinding
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    RawTypeBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    ReferenceBinding
        --> java.lang.Boolean *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Arrays *
        --> java.util.Comparator *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseProcessingEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchFilerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.HookedJavaFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeElement
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression$1
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$1
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$2
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$1
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.HashtableOfType
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ReferenceBinding$1
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    ReferenceBinding$2
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    ReferenceBinding$3
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    ReferenceBinding[] *
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
    Scope
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ImportConflictBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemFieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope$1
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope$2
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfObject
        --> org.eclipse.jdt.internal.compiler.util.ObjectVector
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        --> org.eclipse.jdt.internal.compiler.util.SimpleSet
    Scope$1
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    Scope$2
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.Substitution
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
    SignatureWrapper
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
    SourceTypeBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFilePool
        <-> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AnnotationDiscoveryVisitor
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.RoundEnvImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.Initializer
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-> org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding[] *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.SimpleLookupTable
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    SourceTypeCollisionException
        --> java.lang.RuntimeException *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
    Substitution
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
    SyntheticArgumentBinding
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MemberTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    SyntheticFieldBinding
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
    SyntheticMethodBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
    SyntheticMethodBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
    TagBits
        --> java.lang.Object *
    TypeBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.List *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.ClassFile$1
        <-- org.eclipse.jdt.internal.compiler.ClassFile$2
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMemberValue
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationMirrorImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ArrayTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PrimitiveTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Argument
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CastExpression$1
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-- org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.DoStatement
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        <-- org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Literal
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.NullLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Reference
        <-- org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.StringLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.SubRoutineStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$1
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement$2
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.WhileStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.MultiCatchExceptionLabel
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrame
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream$StackDepthMarker
        <-- org.eclipse.jdt.internal.compiler.codegen.VerificationTypeInfo
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.InitializationFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext$EscapingExceptionCatchSite
        <-- org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AptBinaryLocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.AptSourceLocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CatchParameterBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MostSpecificExceptionMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.PolymorphicMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding$3
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$1
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticFieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    TypeBinding[] *
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    TypeBinding[][][] *
        <-- org.eclipse.jdt.internal.compiler.lookup.InferenceContext
    TypeConstants
        --> C[] *
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
        <-- org.eclipse.jdt.internal.compiler.apt.model.ElementsImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.PackageElementImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Annotation
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    TypeIds
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
    TypeVariableBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.DeclaredTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ErrorTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableTypeImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeParameterElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeVariableImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$1
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding$2
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Substitution
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    UnresolvedAnnotationBinding
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ElementValuePair
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
    UnresolvedReferenceBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.lookup.AnnotationHolder$AnnotationMethodHolder
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.lookup.MissingTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedAnnotationBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    VariableBinding
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.apt.model.ExecutableElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypeElementImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.VariableElementImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-- org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-- org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-- org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    WildcardBinding
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.apt.model.Factory
        <-- org.eclipse.jdt.internal.compiler.apt.model.TypesImpl
        <-- org.eclipse.jdt.internal.compiler.apt.model.WildcardTypeImpl
        <-- org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.Assignment
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.ast.Wildcard
        <-- org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InferenceContext
        <-> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding$LingeringTypeVariableEliminator
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        <-> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    WildcardBinding[] *
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
org.eclipse.jdt.internal.compiler.parser
    AbstractCommentParser
        --> C[] *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        --> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    JavadocParser
        --> C[] *
        --> java.lang.ClassCastException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        --> org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        --> org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    JavadocTagConstants
        --> C[] *
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    NLSTag
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
    Parser
        --> C[] *
        --> java.io.BufferedInputStream *
        --> java.io.BufferedWriter *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.ExceptionInInitializerError *
        --> java.lang.Integer *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Properties *
        --> java.util.StringTokenizer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.ReadManager
        --> org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode[] *
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.AssertStatement
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.BreakStatement
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        --> org.eclipse.jdt.internal.compiler.ast.CombinedBinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        --> org.eclipse.jdt.internal.compiler.ast.DoStatement
        --> org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        --> org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        --> org.eclipse.jdt.internal.compiler.ast.EqualExpression
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference
        --> org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        --> org.eclipse.jdt.internal.compiler.ast.ForStatement
        --> org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        --> org.eclipse.jdt.internal.compiler.ast.IfStatement
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LongLiteral
        --> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        --> org.eclipse.jdt.internal.compiler.ast.OperatorIds
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        --> org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Reference
        --> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference
        --> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        --> org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference[] *
        --> org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.TypeIds
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-> org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-> org.eclipse.jdt.internal.compiler.parser.Parser$1
        <-> org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-> org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        --> org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        <-> org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Parser$1
        --> java.lang.Object *
        --> java.util.List *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
    Parser$1$MethodVisitor
        --> java.lang.Object *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$TypeVisitor
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
    Parser$1$TypeVisitor
        --> java.lang.Object *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
    ParserBasicInformation
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    RecoveredAnnotation
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
    RecoveredBlock
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredType
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
    RecoveredElement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.util.Util
    RecoveredField
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredType
    RecoveredImport
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
    RecoveredInitializer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredType
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
    RecoveredLocalVariable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
    RecoveredMethod
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredType
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        --> org.eclipse.jdt.internal.compiler.util.Util
    RecoveredStatement
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredLocalVariable
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
    RecoveredType
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredField
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-> org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredStatement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredUnit
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
    RecoveredUnit
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredImport
        --> org.eclipse.jdt.internal.compiler.parser.RecoveredType
    RecoveryScanner
        --> I[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredAnnotation
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScannerData
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
    RecoveryScannerData
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
    Scanner
        --> C[] *
        --> C[][][][] *
        --> I[] *
        --> java.lang.IndexOutOfBoundsException *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.parser.NLSTag
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser$1$MethodVisitor
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    ScannerHelper
        --> J[] *
        --> J[][] *
        --> java.io.BufferedInputStream *
        --> java.io.DataInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        <-- org.eclipse.jdt.internal.compiler.ast.CharLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.IntLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.LongLiteral
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    TerminalTokens
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredBlock
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredInitializer
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredType
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
    TypeConverter
        --> C[] *
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference[] *
        --> org.eclipse.jdt.internal.compiler.ast.Wildcard
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
org.eclipse.jdt.internal.compiler.parser.diagnose
    DiagnoseParser
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.ParserBasicInformation
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.ScannerHelper
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$PrimaryRepairInfo
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$RepairCandidate
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$SecondaryRepairInfo
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser$StateInfo
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    DiagnoseParser$PrimaryRepairInfo
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    DiagnoseParser$RepairCandidate
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    DiagnoseParser$SecondaryRepairInfo
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    DiagnoseParser$StateInfo
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
    LexStream
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        --> org.eclipse.jdt.internal.compiler.parser.TerminalTokens
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream$Token
        --> org.eclipse.jdt.internal.compiler.util.Util
    LexStream$Token
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
    RangeUtil
        --> I[][] *
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil$RangeResult
    RangeUtil$RangeResult
        --> I[] *
        --> java.lang.Object *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil
org.eclipse.jdt.internal.compiler.problem
    AbortCompilation
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchAnnotationProcessorManager
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BatchProcessingEnvImpl
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        --> org.eclipse.jdt.internal.compiler.util.Util
    AbortCompilationUnit
        --> java.io.IOException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.AbortType
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
    AbortMethod
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.StackMapFrameCodeStream
        --> org.eclipse.jdt.internal.compiler.problem.AbortType
    AbortType
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.AbortMethod
    DefaultProblem
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-> org.eclipse.jdt.core.compiler.CategorizedProblem
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.AptProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        --> org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.Util
    DefaultProblemFactory
        --> java.io.PrintStream *
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.Integer *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.util.Enumeration *
        --> java.util.Locale *
        --> java.util.MissingResourceException *
        --> java.util.ResourceBundle *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        --> org.eclipse.jdt.internal.compiler.util.HashtableOfInt
        --> org.eclipse.jdt.internal.compiler.util.Util
    ProblemHandler
        --> java.lang.AbstractMethodError *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        --> org.eclipse.jdt.internal.compiler.util.Util
    ProblemReporter
        --> java.io.CharConversionException *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.InvalidInputException
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        <-- org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ASTNode
        <-> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Annotation
        <-> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.Argument
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        <-> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.AssertStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Assignment
        <-> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        <-> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.BranchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.BreakStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        <-> org.eclipse.jdt.internal.compiler.ast.CastExpression
        <-- org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        <-- org.eclipse.jdt.internal.compiler.ast.Clinit
        <-> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        <-> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        <-- org.eclipse.jdt.internal.compiler.ast.EmptyStatement
        <-> org.eclipse.jdt.internal.compiler.ast.EqualExpression
        <-> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        <-> org.eclipse.jdt.internal.compiler.ast.Expression
        <-> org.eclipse.jdt.internal.compiler.ast.FakedTrackingVariable
        <-> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.FieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.ForStatement
        <-- org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        <-- org.eclipse.jdt.internal.compiler.ast.IfStatement
        --> org.eclipse.jdt.internal.compiler.ast.ImportReference
        <-> org.eclipse.jdt.internal.compiler.ast.Initializer
        <-> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        <-- org.eclipse.jdt.internal.compiler.ast.Javadoc
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocAllocationExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArgumentExpression
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArrayQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocArraySingleTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocFieldReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocImplicitTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocMessageSend
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocQualifiedTypeReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.JavadocSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        <-> org.eclipse.jdt.internal.compiler.ast.Literal
        <-> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        <-> org.eclipse.jdt.internal.compiler.ast.MessageSend
        <-> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NameReference
        <-- org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        <-> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        <-- org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        <-> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.Reference
        <-> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        <-> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        <-- org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.Statement
        <-- org.eclipse.jdt.internal.compiler.ast.SuperReference
        <-> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        <-- org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        <-> org.eclipse.jdt.internal.compiler.ast.ThisReference
        <-- org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        <-- org.eclipse.jdt.internal.compiler.ast.TryStatement
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        <-> org.eclipse.jdt.internal.compiler.ast.TypeReference
        <-> org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        <-- org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        <-- org.eclipse.jdt.internal.compiler.flow.ExceptionHandlingFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FinallyFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.FlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LabelFlowContext
        <-- org.eclipse.jdt.internal.compiler.flow.LoopingFlowContext
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        <-> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        <-> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.InvocationSite
        <-- org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedGenericMethodBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemMethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-> org.eclipse.jdt.internal.compiler.lookup.Scope
        <-> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeConstants
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.UnresolvedReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        --> org.eclipse.jdt.internal.compiler.parser.JavadocTagConstants
        <-> org.eclipse.jdt.internal.compiler.parser.Parser
        --> org.eclipse.jdt.internal.compiler.parser.RecoveryScanner
        --> org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.TypeConverter
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        --> org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        --> org.eclipse.jdt.internal.compiler.util.Messages
    ProblemSeverities
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.Main
    ShouldNotImplement
        --> java.lang.RuntimeException *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.apt.model.AnnotationValueImpl
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
org.eclipse.jdt.internal.compiler.tool
    Archive
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.nio.charset.Charset *
        --> java.util.ArrayList *
        --> java.util.Enumeration *
        --> java.util.Hashtable *
        --> java.util.Set *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipException *
        --> java.util.zip.ZipFile *
        --> org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    ArchiveFileObject
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.CharSequence *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.UnsupportedOperationException *
        --> java.net.URI *
        --> java.net.URISyntaxException *
        --> java.nio.charset.Charset *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        --> javax.lang.model.element.Modifier *
        --> javax.lang.model.element.NestingKind *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.tool.Archive
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.tool.Util
        --> org.eclipse.jdt.internal.compiler.util.Util
    EclipseCompiler
        --> java.io.File *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.OutputStreamWriter *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Enum *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.EnumSet *
        --> java.util.Iterator *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.WeakHashMap *
        --> javax.lang.model.SourceVersion *
        --> javax.tools.DiagnosticListener *
        --> javax.tools.JavaCompiler *
        --> javax.tools.JavaCompiler$CompilationTask *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.StandardJavaFileManager *
        --> javax.tools.StandardLocation *
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        --> org.eclipse.jdt.internal.compiler.batch.Main
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        --> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.tool.Options
    EclipseCompiler$1
        --> java.lang.Boolean *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.Locale *
        --> javax.annotation.processing.Processor *
        --> javax.tools.JavaCompiler$CompilationTask *
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        --> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    EclipseCompilerImpl
        --> java.io.BufferedOutputStream *
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.UnsupportedOperationException *
        --> java.net.URI *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> javax.annotation.processing.Processor *
        --> javax.tools.Diagnostic *
        --> javax.tools.DiagnosticListener *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.StandardJavaFileManager *
        --> javax.tools.StandardLocation *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        --> org.eclipse.jdt.internal.compiler.AbstractAnnotationProcessorManager
        --> org.eclipse.jdt.internal.compiler.ClassFile
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$ClasspathNormalizer
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.batch.Main$Logger
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler$1
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$1
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$2
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
    EclipseCompilerImpl$1
        --> java.io.IOException *
        --> java.lang.CharSequence *
        --> java.lang.String *
        --> javax.tools.JavaFileObject *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.problem.AbortCompilationUnit
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    EclipseCompilerImpl$2
        --> java.lang.Object *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
    EclipseCompilerImpl$3
        --> java.lang.String *
        --> javax.tools.Diagnostic *
        --> javax.tools.DiagnosticListener *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
    EclipseCompilerImpl$3$1
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> java.util.Locale *
        --> javax.tools.Diagnostic *
        --> javax.tools.Diagnostic$Kind *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    EclipseCompilerImpl$3$2
        --> java.io.File *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> java.util.Locale *
        --> javax.tools.Diagnostic *
        --> javax.tools.Diagnostic$Kind *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    EclipseCompilerImpl$4
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> java.util.Locale *
        --> javax.tools.Diagnostic *
        --> javax.tools.Diagnostic$Kind *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-> org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
    EclipseFileManager
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.net.MalformedURLException *
        --> java.net.URI *
        --> java.net.URISyntaxException *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.net.URL[] *
        --> java.nio.charset.Charset *
        --> java.text.MessageFormat *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.MissingResourceException *
        --> java.util.ResourceBundle *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.zip.ZipException *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.StandardJavaFileManager *
        --> javax.tools.StandardLocation *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.batch.Main$ResourceBundleFactory
        --> org.eclipse.jdt.internal.compiler.env.AccessRule
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        --> org.eclipse.jdt.internal.compiler.tool.Archive
        --> org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        --> org.eclipse.jdt.internal.compiler.tool.Options
    EclipseFileObject
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.FileReader *
        --> java.io.FileWriter *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.Reader *
        --> java.io.Writer *
        --> java.lang.CharSequence *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URI *
        --> java.nio.charset.Charset *
        --> javax.lang.model.element.Modifier *
        --> javax.lang.model.element.NestingKind *
        --> javax.tools.FileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.SimpleJavaFileObject *
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        --> org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$1
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$3$2
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl$4
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
        --> org.eclipse.jdt.internal.compiler.tool.Util
        --> org.eclipse.jdt.internal.compiler.util.Util
    Options
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompiler
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileManager
    Util
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.nio.Buffer *
        --> java.nio.ByteBuffer *
        --> java.nio.CharBuffer *
        --> java.nio.charset.Charset *
        --> java.nio.charset.CharsetDecoder *
        --> java.nio.charset.CoderResult *
        --> java.nio.charset.CodingErrorAction *
        --> java.nio.charset.IllegalCharsetNameException *
        --> java.nio.charset.UnsupportedCharsetException *
        --> javax.tools.FileObject *
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingError
        --> org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
        --> org.eclipse.jdt.internal.compiler.util.Util
    Util$EncodingError
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.tool.Util$EncodingErrorCollector
    Util$EncodingErrorCollector
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> javax.tools.FileObject *
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        --> org.eclipse.jdt.internal.compiler.tool.Util$EncodingError
org.eclipse.jdt.internal.compiler.util
    CompoundNameVector
        --> C[][] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
    FloatUtil
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.NumberFormatException *
        --> java.lang.Object *
        <-- org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        <-- org.eclipse.jdt.internal.compiler.ast.FloatLiteral
    GenericXMLWriter
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.Arrays *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.Map$Entry *
        --> java.util.Set *
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-> org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1
    GenericXMLWriter$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        --> java.util.Map$Entry *
        <-> org.eclipse.jdt.internal.compiler.util.GenericXMLWriter
    HashSetOfInt
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
    HashtableOfInt
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
    HashtableOfIntValues
        --> C[] *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
    HashtableOfLong
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
    HashtableOfObject
        --> C[] *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        <-- org.eclipse.jdt.internal.compiler.lookup.ClassScope
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    HashtableOfObjectToInt
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.SourceElementNotifier
    HashtableOfObjectToIntArray
        --> I[] *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
    HashtableOfPackage
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
    HashtableOfType
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
    ManifestAnalyzer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.ArrayList *
        --> java.util.List *
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        --> org.eclipse.jdt.internal.compiler.util.Util
    Messages
        <-- fr.inria.lille.repair.nopol.ClassFileUtil
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.NoClassDefFoundError *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.String[] *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.text.MessageFormat *
        --> java.util.ArrayList *
        --> java.util.Locale *
        <-- org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.ProcessTaskManager
        <-- org.eclipse.jdt.internal.compiler.ast.Expression
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.impl.Constant
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemReporter
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        --> org.eclipse.jdt.internal.compiler.util.Messages$MessagesProperties
        <-- org.eclipse.jdt.internal.compiler.util.Util
    Messages$MessagesProperties
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.reflect.Field *
        --> java.util.HashMap *
        --> java.util.Map *
        --> java.util.Properties *
        <-- org.eclipse.jdt.internal.compiler.util.Messages
    ObjectVector
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    SimpleLookupTable
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        <-- org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope$2
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
    SimpleNameVector
        --> C[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-- org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
    SimpleSet
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodVerifier15
        <-- org.eclipse.jdt.internal.compiler.lookup.Scope
    SimpleSetOfCharArray
        --> C[] *
        --> java.lang.CloneNotSupportedException *
        --> java.lang.Cloneable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> org.eclipse.jdt.core.compiler.CharOperation
    SuffixConstants
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathLocation
        <-- org.eclipse.jdt.internal.compiler.batch.FileSystem
        <-- org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl
        <-- org.eclipse.jdt.internal.compiler.util.Util
    Util
        --> java.io.BufferedInputStream *
        --> java.io.BufferedOutputStream *
        --> java.io.BufferedReader *
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.InputStreamReader *
        --> java.io.OutputStream *
        --> java.io.PrintWriter *
        --> java.io.Reader *
        --> java.io.StringWriter *
        --> java.io.UnsupportedEncodingException *
        --> java.io.Writer *
        --> java.lang.ArrayIndexOutOfBoundsException *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipFile *
        <-- org.eclipse.jdt.core.JDTCompilerAdapter
        --> org.eclipse.jdt.core.compiler.CharOperation
        <-> org.eclipse.jdt.internal.compiler.ClassFile
        <-- org.eclipse.jdt.internal.compiler.CompilationResult
        <-- org.eclipse.jdt.internal.compiler.Compiler
        <-- org.eclipse.jdt.internal.compiler.apt.dispatch.BaseMessagerImpl
        <-- org.eclipse.jdt.internal.compiler.apt.util.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.apt.util.Util
        <-- org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        <-- org.eclipse.jdt.internal.compiler.ast.OperatorExpression$1$Decode
        <-> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathDirectory
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathJar
        <-- org.eclipse.jdt.internal.compiler.batch.ClasspathSourceJar
        <-- org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        <-> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem$Classpath
        <-> org.eclipse.jdt.internal.compiler.batch.Main
        <-- org.eclipse.jdt.internal.compiler.batch.Main$2
        <-- org.eclipse.jdt.internal.compiler.batch.Main$Logger
        <-- org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader
        <-- org.eclipse.jdt.internal.compiler.classfmt.FieldInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfo
        <-- org.eclipse.jdt.internal.compiler.classfmt.MethodInfoWithParameterAnnotations
        <-- org.eclipse.jdt.internal.compiler.codegen.CodeStream
        <-- org.eclipse.jdt.internal.compiler.codegen.ConstantPool
        --> org.eclipse.jdt.internal.compiler.env.AccessRuleSet
        <-- org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        <-- org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        <-- org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        <-- org.eclipse.jdt.internal.compiler.parser.AbstractCommentParser
        <-- org.eclipse.jdt.internal.compiler.parser.JavadocParser
        <-- org.eclipse.jdt.internal.compiler.parser.Parser
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredElement
        <-- org.eclipse.jdt.internal.compiler.parser.RecoveredMethod
        <-- org.eclipse.jdt.internal.compiler.parser.Scanner
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.DiagnoseParser
        <-- org.eclipse.jdt.internal.compiler.parser.diagnose.LexStream
        <-- org.eclipse.jdt.internal.compiler.problem.AbortCompilation
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblem
        <-- org.eclipse.jdt.internal.compiler.problem.DefaultProblemFactory
        <-- org.eclipse.jdt.internal.compiler.problem.ProblemHandler
        <-- org.eclipse.jdt.internal.compiler.tool.ArchiveFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.EclipseFileObject
        <-- org.eclipse.jdt.internal.compiler.tool.Util
        <-- org.eclipse.jdt.internal.compiler.util.ManifestAnalyzer
        --> org.eclipse.jdt.internal.compiler.util.Messages
        --> org.eclipse.jdt.internal.compiler.util.SuffixConstants
        --> org.eclipse.jdt.internal.compiler.util.Util$1
        --> org.eclipse.jdt.internal.compiler.util.Util$Displayable
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.util.BasicCompilationUnit
    Util$1
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.util.Util
        --> org.eclipse.jdt.internal.compiler.util.Util$Displayable
    Util$Displayable
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.eclipse.jdt.internal.compiler.util.Util
        <-- org.eclipse.jdt.internal.compiler.util.Util$1
org.hamcrest
    BaseDescription
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.hamcrest.Description
        --> org.hamcrest.SelfDescribing
        <-- org.hamcrest.StringDescription
        --> org.hamcrest.internal.ArrayIterator
        --> org.hamcrest.internal.SelfDescribingValueIterator
    BaseMatcher
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.hamcrest.CustomMatcher
        --> org.hamcrest.Description
        <-- org.hamcrest.DiagnosingMatcher
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.StringDescription
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.internal.matchers.TypeSafeMatcher
    Condition
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Condition$1
        <-> org.hamcrest.Condition$Matched
        <-> org.hamcrest.Condition$NotMatched
        <-> org.hamcrest.Condition$Step
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
    Condition$1
        --> java.lang.Object *
        <-- org.hamcrest.Condition
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$NotMatched
    Condition$Matched
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.hamcrest.Condition
        --> org.hamcrest.Condition$1
        --> org.hamcrest.Condition$Step
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
    Condition$NotMatched
        --> java.lang.String *
        <-> org.hamcrest.Condition
        --> org.hamcrest.Condition$1
        --> org.hamcrest.Condition$Step
        --> org.hamcrest.Matcher
    Condition$Step
        --> java.lang.Object *
        <-> org.hamcrest.Condition
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$NotMatched
        --> org.hamcrest.Description
    CoreMatchers
        --> java.lang.Class *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.AllOf
        --> org.hamcrest.core.AnyOf
        --> org.hamcrest.core.CombinableMatcher
        --> org.hamcrest.core.CombinableMatcher$CombinableBothMatcher
        --> org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher
        --> org.hamcrest.core.DescribedAs
        --> org.hamcrest.core.Every
        --> org.hamcrest.core.Is
        --> org.hamcrest.core.IsAnything
        --> org.hamcrest.core.IsCollectionContaining
        --> org.hamcrest.core.IsEqual
        --> org.hamcrest.core.IsInstanceOf
        --> org.hamcrest.core.IsNot
        --> org.hamcrest.core.IsNull
        --> org.hamcrest.core.IsSame
        --> org.hamcrest.core.StringContains
        --> org.hamcrest.core.StringEndsWith
        --> org.hamcrest.core.StringStartsWith
        <-- org.junit.Assume
        <-- org.junit.matchers.JUnitMatchers
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
    CustomMatcher
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
    CustomTypeSafeMatcher
        --> java.lang.IllegalArgumentException *
        --> java.lang.String *
        --> org.hamcrest.Description
        --> org.hamcrest.TypeSafeMatcher
    Description
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.BaseMatcher
        <-- org.hamcrest.Condition
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$Step
        <-- org.hamcrest.CustomMatcher
        <-- org.hamcrest.CustomTypeSafeMatcher
        <-> org.hamcrest.Description$NullDescription
        <-- org.hamcrest.DiagnosingMatcher
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.Matcher
        <-- org.hamcrest.MatcherAssert
        <-> org.hamcrest.SelfDescribing
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.core.SubstringMatcher
        <-- org.hamcrest.internal.SelfDescribingValue
        <-- org.junit.experimental.results.ResultMatchers$1
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.experimental.results.ResultMatchers$3
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
    Description$NullDescription
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.hamcrest.Description
        --> org.hamcrest.SelfDescribing
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
    DiagnosingMatcher
        --> java.lang.Object *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.IsInstanceOf
    Factory
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.StringContains
        <-- org.hamcrest.core.StringEndsWith
        <-- org.hamcrest.core.StringStartsWith
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
    FeatureMatcher
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeDiagnosingMatcher
        --> org.hamcrest.internal.ReflectiveTypeFinder
    Matcher
        --> java.lang.Deprecated *
        --> java.lang.Object *
        <-- org.hamcrest.BaseMatcher
        <-- org.hamcrest.Condition
        <-- org.hamcrest.Condition$Matched
        <-- org.hamcrest.Condition$NotMatched
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.MatcherAssert
        --> org.hamcrest.SelfDescribing
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.AnyOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.CombinableMatcher$CombinableBothMatcher
        <-- org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher
        <-- org.hamcrest.core.DescribedAs
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsAnything
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsInstanceOf
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.core.IsNull
        <-- org.hamcrest.core.IsSame
        <-- org.hamcrest.core.ShortcutCombination
        <-- org.hamcrest.core.StringContains
        <-- org.hamcrest.core.StringEndsWith
        <-- org.hamcrest.core.StringStartsWith
        <-- org.junit.Assert
        <-- org.junit.Assume
        <-- org.junit.experimental.results.ResultMatchers
        <-- org.junit.experimental.results.ResultMatchers$2
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
        <-- org.junit.matchers.JUnitMatchers
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.ErrorCollector$1
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
    MatcherAssert
        --> java.lang.AssertionError *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.StringDescription
        <-- org.junit.Assert
    SelfDescribing
        --> java.lang.Object *
        <-- org.hamcrest.BaseDescription
        <-- org.hamcrest.BaseMatcher
        <-> org.hamcrest.Description
        <-- org.hamcrest.Description$NullDescription
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.Matcher
        <-- org.hamcrest.MatcherAssert
        <-- org.hamcrest.StringDescription
        <-- org.hamcrest.core.AllOf
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsNot
        <-- org.hamcrest.internal.SelfDescribingValue
        <-- org.hamcrest.internal.SelfDescribingValueIterator
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
        <-- org.junit.rules.ExpectedException
    StringDescription
        --> java.io.IOException *
        --> java.lang.Appendable *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> org.hamcrest.BaseDescription
        <-- org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        <-- org.hamcrest.MatcherAssert
        --> org.hamcrest.SelfDescribing
        <-- org.junit.internal.AssumptionViolatedException
        <-- org.junit.rules.ExpectedException
    TypeSafeDiagnosingMatcher
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        --> org.hamcrest.Description$NullDescription
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.Every
        <-- org.hamcrest.core.IsCollectionContaining
        --> org.hamcrest.internal.ReflectiveTypeFinder
    TypeSafeMatcher
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CustomTypeSafeMatcher
        --> org.hamcrest.Description
        <-- org.hamcrest.core.SubstringMatcher
        --> org.hamcrest.internal.ReflectiveTypeFinder
        <-- org.junit.experimental.results.ResultMatchers$1
        <-- org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.internal.matchers.ThrowableCauseMatcher
        <-- org.junit.internal.matchers.ThrowableMessageMatcher
org.hamcrest.core
    AllOf
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.DiagnosingMatcher
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        <-- org.hamcrest.core.CombinableMatcher
        <-- org.hamcrest.core.IsCollectionContaining
    AnyOf
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.List *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        <-- org.hamcrest.core.CombinableMatcher
        --> org.hamcrest.core.ShortcutCombination
    CombinableMatcher
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.ArrayList *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeDiagnosingMatcher
        --> org.hamcrest.core.AllOf
        --> org.hamcrest.core.AnyOf
        <-> org.hamcrest.core.CombinableMatcher$CombinableBothMatcher
        <-> org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher
    CombinableMatcher$CombinableBothMatcher
        --> java.lang.Object *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        <-> org.hamcrest.core.CombinableMatcher
        <-- org.junit.matchers.JUnitMatchers
    CombinableMatcher$CombinableEitherMatcher
        --> java.lang.Object *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        <-> org.hamcrest.core.CombinableMatcher
        <-- org.junit.matchers.JUnitMatchers
    DescribedAs
        --> java.lang.CharSequence *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
    Every
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeDiagnosingMatcher
    Is
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.core.IsEqual
        --> org.hamcrest.core.IsInstanceOf
    IsAnything
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
    IsCollectionContaining
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeDiagnosingMatcher
        --> org.hamcrest.core.AllOf
        --> org.hamcrest.core.IsEqual
    IsEqual
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.reflect.Array *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        <-- org.hamcrest.core.Is
        <-- org.hamcrest.core.IsCollectionContaining
        <-- org.hamcrest.core.IsNot
    IsInstanceOf
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.DiagnosingMatcher
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        <-- org.hamcrest.core.Is
    IsNot
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.core.IsEqual
        <-- org.hamcrest.core.IsNull
    IsNull
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.IsNot
    IsSame
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.BaseMatcher
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
    ShortcutCombination
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
        <-- org.hamcrest.core.AnyOf
    StringContains
        --> java.lang.String *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.SubstringMatcher
    StringEndsWith
        --> java.lang.String *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.SubstringMatcher
    StringStartsWith
        --> java.lang.String *
        <-- org.hamcrest.CoreMatchers
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.SubstringMatcher
    SubstringMatcher
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Description
        --> org.hamcrest.TypeSafeMatcher
        <-- org.hamcrest.core.StringContains
        <-- org.hamcrest.core.StringEndsWith
        <-- org.hamcrest.core.StringStartsWith
org.hamcrest.internal
    ArrayIterator
        --> java.lang.Class *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> java.lang.reflect.Array *
        --> java.util.Iterator *
        <-- org.hamcrest.BaseDescription
    ReflectiveTypeFinder
        --> java.lang.Class *
        --> java.lang.Error *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Method *
        <-- org.hamcrest.FeatureMatcher
        <-- org.hamcrest.TypeSafeDiagnosingMatcher
        <-- org.hamcrest.TypeSafeMatcher
    SelfDescribingValue
        --> java.lang.Object *
        --> org.hamcrest.Description
        --> org.hamcrest.SelfDescribing
        <-- org.hamcrest.internal.SelfDescribingValueIterator
    SelfDescribingValueIterator
        --> java.lang.Object *
        --> java.util.Iterator *
        <-- org.hamcrest.BaseDescription
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.internal.SelfDescribingValue
org.junit
    After
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.BlockJUnit4ClassRunner
    AfterClass
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.runners.ParentRunner
    Assert
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Long *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.hamcrest.Matcher
        --> org.hamcrest.MatcherAssert
        --> org.junit.ComparisonFailure
        <-- org.junit.ComparisonFailure$ComparisonCompactor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        --> org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.ComparisonCriteria
        <-> org.junit.internal.ExactComparisonCriteria
        <-> org.junit.internal.InexactComparisonCriteria
        <-- org.junit.rules.ErrorCollector$1
        <-- org.junit.rules.ExpectedException
        <-- org.junit.runners.model.TestClass
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Assume
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.List *
        --> org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        --> org.junit.internal.AssumptionViolatedException
    Before
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.model.TestClass
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
    BeforeClass
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.model.TestClass
    ClassRule
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.runners.ParentRunner
    ComparisonFailure
        --> java.lang.AssertionError *
        --> java.lang.Object *
        --> java.lang.String *
        <-- org.junit.Assert
        --> org.junit.ComparisonFailure$ComparisonCompactor
    ComparisonFailure$ComparisonCompactor
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.junit.Assert
        <-- org.junit.ComparisonFailure
    FixMethodOrder
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.MethodSorter
        --> org.junit.runners.MethodSorters
    Ignore
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.internal.builders.IgnoredBuilder
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.BlockJUnit4ClassRunner
    Rule
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.runners.BlockJUnit4ClassRunner
    Test
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        --> org.junit.Test$None
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestClass
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Test$None
        --> java.lang.Throwable *
        <-- org.junit.Test
        <-- org.junit.internal.runners.TestMethod
        <-- org.junit.runners.BlockJUnit4ClassRunner
    package-info
        --> java.lang.Object *
org.junit.experimental
    ParallelComputer
        --> java.lang.Class *
        --> java.lang.Throwable *
        --> org.junit.experimental.ParallelComputer$1
        --> org.junit.runner.Computer
        --> org.junit.runner.Runner
        --> org.junit.runners.ParentRunner
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
        --> org.junit.runners.model.RunnerScheduler
    ParallelComputer$1
        --> java.io.PrintStream *
        --> java.lang.InterruptedException *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.System *
        --> java.util.concurrent.ExecutorService *
        --> java.util.concurrent.Executors *
        --> java.util.concurrent.Future *
        --> java.util.concurrent.TimeUnit *
        <-- org.junit.experimental.ParallelComputer
        --> org.junit.runners.model.RunnerScheduler
org.junit.experimental.categories
    Categories
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> org.junit.experimental.categories.Categories$CategoryFilter
        --> org.junit.experimental.categories.Categories$ExcludeCategory
        --> org.junit.experimental.categories.Categories$IncludeCategory
        --> org.junit.experimental.categories.Category
        --> org.junit.runner.Description
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.NoTestsRemainException
        --> org.junit.runners.Suite
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
    Categories$CategoryFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.categories.Categories
        --> org.junit.experimental.categories.Category
        --> org.junit.runner.Description
        --> org.junit.runner.manipulation.Filter
    Categories$ExcludeCategory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.categories.Categories
    Categories$IncludeCategory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.categories.Categories
    Category
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
org.junit.experimental.max
    CouldNotReadCoreException
        --> java.lang.Exception *
        --> java.lang.Throwable *
        <-- org.junit.experimental.max.MaxHistory
    MaxCore
        --> java.io.File *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.Iterator *
        --> java.util.List *
        --> junit.framework.Test
        --> junit.framework.TestSuite
        <-> org.junit.experimental.max.MaxCore$1
        --> org.junit.experimental.max.MaxHistory
        --> org.junit.internal.requests.SortingRequest
        --> org.junit.internal.runners.JUnit38ClassRunner
        --> org.junit.runner.Description
        --> org.junit.runner.JUnitCore
        --> org.junit.runner.Request
        --> org.junit.runner.Result
        --> org.junit.runner.Runner
        --> org.junit.runner.notification.RunListener
        --> org.junit.runners.Suite
    MaxCore$1
        --> java.lang.Class *
        --> java.lang.Throwable *
        --> java.util.List *
        <-> org.junit.experimental.max.MaxCore
        <-> org.junit.experimental.max.MaxCore$1$1
        --> org.junit.internal.runners.ErrorReportingRunner
        --> org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runners.model.InitializationError
    MaxCore$1$1
        --> java.lang.Class *
        --> java.util.List *
        <-> org.junit.experimental.max.MaxCore$1
        --> org.junit.runners.Suite
    MaxHistory
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.io.Serializable *
        --> java.lang.Exception *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.Map *
        --> org.junit.experimental.max.CouldNotReadCoreException
        <-- org.junit.experimental.max.MaxCore
        --> org.junit.experimental.max.MaxHistory$1
        <-> org.junit.experimental.max.MaxHistory$RememberingListener
        <-> org.junit.experimental.max.MaxHistory$TestComparator
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
    MaxHistory$1
        --> java.lang.Object *
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.max.MaxHistory$TestComparator
    MaxHistory$RememberingListener
        --> java.lang.Exception *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.System *
        --> java.util.HashMap *
        --> java.util.Map *
        <-> org.junit.experimental.max.MaxHistory
        --> org.junit.experimental.max.MaxHistory$1
        --> org.junit.runner.Description
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
    MaxHistory$TestComparator
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.util.Comparator *
        <-> org.junit.experimental.max.MaxHistory
        --> org.junit.experimental.max.MaxHistory$1
        --> org.junit.runner.Description
org.junit.experimental.results
    FailureList
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.results.PrintableResult
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
    PrintableResult
        --> java.io.ByteArrayOutputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.experimental.results.FailureList
        <-- org.junit.experimental.results.ResultMatchers$1
        --> org.junit.internal.TextListener
        --> org.junit.runner.JUnitCore
        --> org.junit.runner.Request
        --> org.junit.runner.Result
    ResultMatchers
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.Matcher
        --> org.junit.experimental.results.ResultMatchers$1
        <-> org.junit.experimental.results.ResultMatchers$2
        --> org.junit.experimental.results.ResultMatchers$3
    ResultMatchers$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.hamcrest.Description
        --> org.hamcrest.TypeSafeMatcher
        --> org.junit.experimental.results.PrintableResult
        <-- org.junit.experimental.results.ResultMatchers
    ResultMatchers$2
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
        <-> org.junit.experimental.results.ResultMatchers
    ResultMatchers$3
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.hamcrest.BaseMatcher
        --> org.hamcrest.Description
        <-- org.junit.experimental.results.ResultMatchers
org.junit.experimental.runners
    Enclosed
        --> java.lang.Class *
        --> java.lang.Throwable *
        --> org.junit.runners.Suite
        --> org.junit.runners.model.RunnerBuilder
org.junit.experimental.theories
    DataPoint
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
    DataPoints
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
    ParameterSignature
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.theories.ParameterSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
    ParameterSupplier
        --> java.lang.Object *
        --> java.util.List *
        --> org.junit.experimental.theories.ParameterSignature
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
    ParametersSuppliedBy
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOn
    PotentialAssignment
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.junit.experimental.theories.PotentialAssignment$1
        --> org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
        <-- org.junit.experimental.theories.suppliers.TestedOnSupplier
    PotentialAssignment$1
        --> java.lang.Object *
        --> java.lang.String *
        <-> org.junit.experimental.theories.PotentialAssignment
        --> org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
    PotentialAssignment$CouldNotGenerateValueException
        --> java.lang.Exception *
        <-- org.junit.experimental.theories.PotentialAssignment
        <-- org.junit.experimental.theories.PotentialAssignment$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
    Theories
        --> java.lang.Class *
        --> java.lang.Error *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.experimental.theories.DataPoint
        --> org.junit.experimental.theories.Theories$TheoryAnchor
        --> org.junit.experimental.theories.Theory
        --> org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    Theories$TheoryAnchor
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.experimental.theories.PotentialAssignment
        <-- org.junit.experimental.theories.Theories
        <-> org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-> org.junit.experimental.theories.Theories$TheoryAnchor$2
        --> org.junit.experimental.theories.Theory
        --> org.junit.experimental.theories.internal.Assignments
        --> org.junit.experimental.theories.internal.ParameterizedAssertionError
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    Theories$TheoryAnchor$1
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.reflect.Constructor *
        --> java.util.List *
        <-> org.junit.experimental.theories.Theories$TheoryAnchor
        <-> org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        --> org.junit.experimental.theories.internal.Assignments
        --> org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    Theories$TheoryAnchor$1$1
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> org.junit.experimental.theories.Theories$TheoryAnchor
        <-> org.junit.experimental.theories.Theories$TheoryAnchor$1
        --> org.junit.experimental.theories.internal.Assignments
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.runners.model.Statement
    Theories$TheoryAnchor$2
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
        <-> org.junit.experimental.theories.Theories$TheoryAnchor
        --> org.junit.experimental.theories.internal.Assignments
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
    Theory
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
org.junit.experimental.theories.internal
    AllMembersSupplier
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.experimental.theories.DataPoint
        --> org.junit.experimental.theories.DataPoints
        --> org.junit.experimental.theories.ParameterSignature
        --> org.junit.experimental.theories.ParameterSupplier
        --> org.junit.experimental.theories.PotentialAssignment
        --> org.junit.experimental.theories.internal.AllMembersSupplier$1
        --> org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.experimental.theories.internal.Assignments
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.TestClass
    AllMembersSupplier$1
        --> java.lang.Object *
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
    AllMembersSupplier$MethodParameterValue
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.junit.experimental.theories.PotentialAssignment
        --> org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        --> org.junit.experimental.theories.internal.AllMembersSupplier$1
        --> org.junit.runners.model.FrameworkMethod
    Assignments
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> org.junit.experimental.theories.ParameterSignature
        --> org.junit.experimental.theories.ParameterSupplier
        --> org.junit.experimental.theories.ParametersSuppliedBy
        --> org.junit.experimental.theories.PotentialAssignment
        --> org.junit.experimental.theories.PotentialAssignment$CouldNotGenerateValueException
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        --> org.junit.experimental.theories.internal.AllMembersSupplier
        --> org.junit.runners.model.TestClass
    ParameterizedAssertionError
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
org.junit.experimental.theories.suppliers
    TestedOn
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> org.junit.experimental.theories.ParametersSuppliedBy
        <-> org.junit.experimental.theories.suppliers.TestedOnSupplier
    TestedOnSupplier
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.junit.experimental.theories.ParameterSignature
        --> org.junit.experimental.theories.ParameterSupplier
        --> org.junit.experimental.theories.PotentialAssignment
        <-> org.junit.experimental.theories.suppliers.TestedOn
org.junit.internal
    ArrayComparisonFailure
        --> java.lang.AssertionError *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.Assert
        <-- org.junit.internal.ComparisonCriteria
    AssumptionViolatedException
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.hamcrest.Description
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.StringDescription
        <-- org.junit.Assume
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.rules.ExpectedException$ExpectedExceptionStatement
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.rules.TestWatchman$1
        <-- org.junit.runners.ParentRunner
    ComparisonCriteria
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Array *
        --> org.junit.Assert
        --> org.junit.internal.ArrayComparisonFailure
        <-- org.junit.internal.ExactComparisonCriteria
        <-- org.junit.internal.InexactComparisonCriteria
    ExactComparisonCriteria
        --> java.lang.Object *
        <-> org.junit.Assert
        --> org.junit.internal.ComparisonCriteria
    InexactComparisonCriteria
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Object *
        <-> org.junit.Assert
        --> org.junit.internal.ComparisonCriteria
    JUnitSystem
        --> java.io.PrintStream *
        --> java.lang.Object *
        <-- org.junit.internal.RealSystem
        <-- org.junit.internal.TextListener
        <-- org.junit.runner.JUnitCore
    MethodSorter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.Comparator *
        <-- junit.framework.TestSuite
        --> org.junit.FixMethodOrder
        <-> org.junit.internal.MethodSorter$1
        --> org.junit.internal.MethodSorter$2
        <-- org.junit.internal.matchers.TypeSafeMatcher
        <-- org.junit.internal.runners.TestClass
        <-> org.junit.runners.MethodSorters
        <-- org.junit.runners.model.TestClass
    MethodSorter$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Method *
        --> java.util.Comparator *
        <-> org.junit.internal.MethodSorter
    MethodSorter$2
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Method *
        --> java.util.Comparator *
        <-- org.junit.internal.MethodSorter
    RealSystem
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.System *
        --> org.junit.internal.JUnitSystem
        <-- org.junit.runner.JUnitCore
    TextListener
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.text.NumberFormat *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.results.PrintableResult
        --> org.junit.internal.JUnitSystem
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
org.junit.internal.builders
    AllDefaultPossibilitiesBuilder
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.internal.builders.AnnotatedBuilder
        --> org.junit.internal.builders.IgnoredBuilder
        --> org.junit.internal.builders.JUnit3Builder
        --> org.junit.internal.builders.JUnit4Builder
        --> org.junit.internal.builders.NullBuilder
        --> org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.requests.ClassRequest
        <-- org.junit.runner.Request
        --> org.junit.runner.Runner
        <-- org.junit.runners.Suite
        --> org.junit.runners.model.RunnerBuilder
    AnnotatedBuilder
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.runner.RunWith
        --> org.junit.runner.Runner
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
    IgnoredBuilder
        --> java.lang.Class *
        --> java.lang.annotation.Annotation *
        --> org.junit.Ignore
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.internal.builders.IgnoredClassRunner
        --> org.junit.runner.Runner
        --> org.junit.runners.model.RunnerBuilder
    IgnoredClassRunner
        --> java.lang.Class *
        <-- org.junit.internal.builders.IgnoredBuilder
        --> org.junit.runner.Description
        --> org.junit.runner.Runner
        --> org.junit.runner.notification.RunNotifier
    JUnit3Builder
        --> java.lang.Class *
        --> java.lang.Throwable *
        --> junit.framework.TestCase
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.internal.runners.JUnit38ClassRunner
        --> org.junit.runner.Runner
        --> org.junit.runners.model.RunnerBuilder
    JUnit4Builder
        --> java.lang.Class *
        --> java.lang.Throwable *
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.runner.Runner
        --> org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.RunnerBuilder
    NullBuilder
        --> java.lang.Class *
        --> java.lang.Throwable *
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.runner.Runner
        --> org.junit.runners.model.RunnerBuilder
    SuiteMethodBuilder
        --> java.lang.Class *
        --> java.lang.NoSuchMethodException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        --> org.junit.internal.runners.SuiteMethod
        --> org.junit.runner.Runner
        --> org.junit.runners.model.RunnerBuilder
org.junit.internal.matchers
    StacktracePrintingMatcher
        --> java.io.PrintWriter *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.TypeSafeMatcher
        <-- org.junit.matchers.JUnitMatchers
    ThrowableCauseMatcher
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeMatcher
        <-- org.junit.rules.ExpectedException
    ThrowableMessageMatcher
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.hamcrest.Description
        --> org.hamcrest.Factory
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.TypeSafeMatcher
        <-- org.junit.rules.ExpectedException
    TypeSafeMatcher
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Error *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Method *
        --> org.hamcrest.BaseMatcher
        --> org.junit.internal.MethodSorter
org.junit.internal.requests
    ClassRequest
        --> java.lang.Class *
        --> java.lang.Object *
        --> org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-> org.junit.runner.Request
        --> org.junit.runner.Runner
    FilterRequest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.junit.internal.runners.ErrorReportingRunner
        <-> org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.NoTestsRemainException
    SortingRequest
        --> java.lang.Object *
        --> java.util.Comparator *
        <-- org.junit.experimental.max.MaxCore
        <-> org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Sorter
    package-info
        --> java.lang.Object *
org.junit.internal.runners
    ClassRoadie
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.internal.runners.FailedBefore
        <-- org.junit.internal.runners.JUnit4ClassRunner
        --> org.junit.internal.runners.TestClass
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
    ErrorReportingRunner
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.internal.requests.FilterRequest
        --> org.junit.internal.runners.InitializationError
        --> org.junit.runner.Description
        <-- org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
        --> org.junit.runners.model.InitializationError
        <-- org.junit.runners.model.RunnerBuilder
    FailedBefore
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.MethodRoadie
    InitializationError
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.List *
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodValidator
    JUnit38ClassRunner
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> junit.extensions.TestDecorator
        --> junit.framework.Test
        --> junit.framework.TestCase
        --> junit.framework.TestListener
        --> junit.framework.TestResult
        --> junit.framework.TestSuite
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.internal.builders.JUnit3Builder
        --> org.junit.internal.runners.JUnit38ClassRunner$1
        <-> org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.SuiteMethod
        --> org.junit.runner.Describable
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.Filterable
        --> org.junit.runner.manipulation.NoTestsRemainException
        --> org.junit.runner.manipulation.Sortable
        --> org.junit.runner.manipulation.Sorter
        --> org.junit.runner.notification.RunNotifier
    JUnit38ClassRunner$1
        --> java.lang.Object *
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
    JUnit38ClassRunner$OldTestClassAdaptingListener
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> junit.framework.AssertionFailedError
        --> junit.framework.Test
        --> junit.framework.TestCase
        --> junit.framework.TestListener
        <-> org.junit.internal.runners.JUnit38ClassRunner
        --> org.junit.internal.runners.JUnit38ClassRunner$1
        --> org.junit.runner.Describable
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
    JUnit4ClassRunner
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.internal.runners.ClassRoadie
        --> org.junit.internal.runners.InitializationError
        <-> org.junit.internal.runners.JUnit4ClassRunner$1
        <-> org.junit.internal.runners.JUnit4ClassRunner$2
        --> org.junit.internal.runners.MethodRoadie
        --> org.junit.internal.runners.MethodValidator
        --> org.junit.internal.runners.TestClass
        --> org.junit.internal.runners.TestMethod
        --> org.junit.runner.Description
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.Filterable
        --> org.junit.runner.manipulation.NoTestsRemainException
        --> org.junit.runner.manipulation.Sortable
        --> org.junit.runner.manipulation.Sorter
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
    JUnit4ClassRunner$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-> org.junit.internal.runners.JUnit4ClassRunner
        --> org.junit.runner.notification.RunNotifier
    JUnit4ClassRunner$2
        --> java.lang.Object *
        --> java.lang.reflect.Method *
        --> java.util.Comparator *
        <-> org.junit.internal.runners.JUnit4ClassRunner
        --> org.junit.runner.Description
        --> org.junit.runner.manipulation.Sorter
    MethodRoadie
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.internal.runners.FailedBefore
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-> org.junit.internal.runners.MethodRoadie$1
        <-- org.junit.internal.runners.MethodRoadie$1$1
        <-> org.junit.internal.runners.MethodRoadie$2
        --> org.junit.internal.runners.TestMethod
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
    MethodRoadie$1
        --> java.lang.Exception *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.List *
        --> java.util.concurrent.Callable *
        --> java.util.concurrent.ExecutorService *
        --> java.util.concurrent.Executors *
        --> java.util.concurrent.Future *
        --> java.util.concurrent.TimeUnit *
        --> java.util.concurrent.TimeoutException *
        <-> org.junit.internal.runners.MethodRoadie
        <-> org.junit.internal.runners.MethodRoadie$1$1
    MethodRoadie$1$1
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.util.concurrent.Callable *
        --> org.junit.internal.runners.MethodRoadie
        <-> org.junit.internal.runners.MethodRoadie$1
    MethodRoadie$2
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-> org.junit.internal.runners.MethodRoadie
    MethodValidator
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.After
        --> org.junit.AfterClass
        --> org.junit.Before
        --> org.junit.BeforeClass
        --> org.junit.Test
        --> org.junit.internal.runners.InitializationError
        <-- org.junit.internal.runners.JUnit4ClassRunner
        --> org.junit.internal.runners.TestClass
    SuiteMethod
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> junit.framework.Test
        <-- org.junit.internal.builders.SuiteMethodBuilder
        --> org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.runners.AllTests
    TestClass
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.SecurityException *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.AfterClass
        --> org.junit.Before
        --> org.junit.BeforeClass
        --> org.junit.Test
        --> org.junit.internal.MethodSorter
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodValidator
        <-- org.junit.internal.runners.TestMethod
    TestMethod
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.util.List *
        --> org.junit.After
        --> org.junit.Before
        --> org.junit.Ignore
        --> org.junit.Test
        --> org.junit.Test$None
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        --> org.junit.internal.runners.TestClass
    package-info
        --> java.lang.Object *
org.junit.internal.runners.model
    EachTestNotifier
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.MultipleFailureException
    MultipleFailureException
        --> java.lang.Deprecated *
        --> java.util.List *
        <-> org.junit.runners.model.MultipleFailureException
    ReflectiveCallable
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationTargetException *
        <-- org.junit.runners.BlockJUnit4ClassRunner$1
        <-- org.junit.runners.model.FrameworkMethod$1
org.junit.internal.runners.rules
    RuleFieldValidator
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.ClassRule
        --> org.junit.Rule
        --> org.junit.internal.runners.rules.RuleFieldValidator[] *
        --> org.junit.rules.MethodRule
        --> org.junit.rules.TestRule
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkMember
        --> org.junit.runners.model.TestClass
    RuleFieldValidator[] *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
org.junit.internal.runners.statements
    ExpectException
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> org.junit.internal.AssumptionViolatedException
        <-- org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.Statement
    Fail
        --> java.lang.Throwable *
        <-- org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.Statement
    FailOnTimeout
        --> java.lang.Exception *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.StackTraceElement *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- org.junit.rules.Timeout
        <-- org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.Statement
    FailOnTimeout$StatementThread
        --> java.lang.InterruptedException *
        --> java.lang.StackTraceElement *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        <-- org.junit.internal.runners.statements.FailOnTimeout
        --> org.junit.runners.model.Statement
    InvokeMethod
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-- org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
    RunAfters
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.MultipleFailureException
        --> org.junit.runners.model.Statement
    RunBefores
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
org.junit.matchers
    JUnitMatchers
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        --> org.hamcrest.core.CombinableMatcher$CombinableBothMatcher
        --> org.hamcrest.core.CombinableMatcher$CombinableEitherMatcher
        --> org.junit.internal.matchers.StacktracePrintingMatcher
        <-- org.junit.rules.ExpectedExceptionMatcherBuilder
    package-info
        --> java.lang.Object *
org.junit.rules
    ErrorCollector
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.concurrent.Callable *
        --> org.hamcrest.Matcher
        <-> org.junit.rules.ErrorCollector$1
        --> org.junit.rules.Verifier
        --> org.junit.runners.model.MultipleFailureException
    ErrorCollector$1
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.concurrent.Callable *
        --> org.hamcrest.Matcher
        --> org.junit.Assert
        <-> org.junit.rules.ErrorCollector
    ExpectedException
        --> java.lang.AssertionError *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        --> org.hamcrest.SelfDescribing
        --> org.hamcrest.StringDescription
        --> org.junit.Assert
        --> org.junit.internal.matchers.ThrowableCauseMatcher
        --> org.junit.internal.matchers.ThrowableMessageMatcher
        <-> org.junit.rules.ExpectedException$ExpectedExceptionStatement
        --> org.junit.rules.ExpectedExceptionMatcherBuilder
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    ExpectedException$ExpectedExceptionStatement
        --> java.lang.AssertionError *
        --> java.lang.Throwable *
        --> org.junit.internal.AssumptionViolatedException
        <-> org.junit.rules.ExpectedException
        --> org.junit.rules.ExpectedExceptionMatcherBuilder
        --> org.junit.runners.model.Statement
    ExpectedExceptionMatcherBuilder
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> org.hamcrest.CoreMatchers
        --> org.hamcrest.Matcher
        --> org.junit.matchers.JUnitMatchers
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedException$ExpectedExceptionStatement
    ExternalResource
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-> org.junit.rules.ExternalResource$1
        <-- org.junit.rules.TemporaryFolder
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    ExternalResource$1
        --> java.lang.Throwable *
        <-> org.junit.rules.ExternalResource
        --> org.junit.runners.model.Statement
    MethodRule
        --> java.lang.Object *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.rules.TestWatchman
        <-- org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
    RuleChain
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    RunRules
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.Statement
    TemporaryFolder
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.IllegalStateException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> org.junit.rules.ExternalResource
    TestName
        --> java.lang.String *
        --> org.junit.rules.TestWatcher
        --> org.junit.runner.Description
    TestRule
        --> java.lang.Object *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExternalResource
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.RunRules
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.Timeout
        <-- org.junit.rules.Verifier
        --> org.junit.runner.Description
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.Statement
    TestWatcher
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.List *
        --> org.junit.internal.AssumptionViolatedException
        <-- org.junit.rules.TestName
        --> org.junit.rules.TestRule
        <-> org.junit.rules.TestWatcher$1
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    TestWatcher$1
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.junit.internal.AssumptionViolatedException
        <-> org.junit.rules.TestWatcher
        --> org.junit.runner.Description
        --> org.junit.runners.model.MultipleFailureException
        --> org.junit.runners.model.Statement
    TestWatchman
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> org.junit.rules.MethodRule
        <-> org.junit.rules.TestWatchman$1
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
    TestWatchman$1
        --> java.lang.Throwable *
        --> org.junit.internal.AssumptionViolatedException
        <-> org.junit.rules.TestWatchman
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.Statement
    Timeout
        --> java.lang.Object *
        --> org.junit.internal.runners.statements.FailOnTimeout
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    Verifier
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-- org.junit.rules.ErrorCollector
        --> org.junit.rules.TestRule
        <-> org.junit.rules.Verifier$1
        --> org.junit.runner.Description
        --> org.junit.runners.model.Statement
    Verifier$1
        --> java.lang.Throwable *
        <-> org.junit.rules.Verifier
        --> org.junit.runners.model.Statement
org.junit.runner
    Computer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-- org.junit.experimental.ParallelComputer
        <-> org.junit.runner.Computer$1
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        --> org.junit.runner.Runner
        --> org.junit.runners.Suite
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
    Computer$1
        --> java.lang.Class *
        --> java.lang.Throwable *
        <-> org.junit.runner.Computer
        --> org.junit.runner.Runner
        --> org.junit.runners.model.RunnerBuilder
    Describable
        --> java.lang.Object *
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestCaseFacade
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        --> org.junit.runner.Description
        <-- org.junit.runner.Runner
    Description
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- junit.framework.JUnit4TestCaseFacade
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.max.MaxHistory$TestComparator
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.builders.IgnoredClassRunner
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$2
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExternalResource
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.RunRules
        <-- org.junit.rules.TestName
        <-- org.junit.rules.TestRule
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.rules.Timeout
        <-- org.junit.rules.Verifier
        <-- org.junit.runner.Describable
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.Result$Listener
        <-- org.junit.runner.Runner
        <-- org.junit.runner.manipulation.Filter
        <-- org.junit.runner.manipulation.Filter$1
        <-- org.junit.runner.manipulation.Filter$2
        <-- org.junit.runner.manipulation.Filter$3
        <-- org.junit.runner.manipulation.Sorter
        <-- org.junit.runner.manipulation.Sorter$1
        <-- org.junit.runner.notification.Failure
        <-- org.junit.runner.notification.RunListener
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$1
        <-- org.junit.runner.notification.RunNotifier$3
        <-- org.junit.runner.notification.RunNotifier$6
        <-- org.junit.runner.notification.RunNotifier$7
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$4
        <-- org.junit.runners.Suite
        <-- xxl.java.junit.NullRunListener
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
    JUnitCore
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Class[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> junit.framework.Test
        --> junit.runner.Version
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.results.PrintableResult
        --> org.junit.internal.JUnitSystem
        --> org.junit.internal.RealSystem
        --> org.junit.internal.TextListener
        --> org.junit.internal.runners.JUnit38ClassRunner
        --> org.junit.runner.Computer
        --> org.junit.runner.Description
        <-> org.junit.runner.Request
        --> org.junit.runner.Result
        --> org.junit.runner.Runner
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        --> org.junit.runner.notification.RunNotifier
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
    Request
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Comparator *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.experimental.results.PrintableResult
        --> org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-> org.junit.internal.requests.ClassRequest
        <-> org.junit.internal.requests.FilterRequest
        <-> org.junit.internal.requests.SortingRequest
        --> org.junit.internal.runners.ErrorReportingRunner
        --> org.junit.runner.Computer
        --> org.junit.runner.Description
        <-> org.junit.runner.JUnitCore
        <-> org.junit.runner.Request$1
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
        <-- xxl.java.junit.JUnitSingleTestRunner
    Request$1
        <-> org.junit.runner.Request
        --> org.junit.runner.Runner
    Result
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.concurrent.atomic.AtomicInteger *
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.experimental.results.PrintableResult
        <-- org.junit.internal.TextListener
        <-- org.junit.runner.JUnitCore
        --> org.junit.runner.Result$1
        <-> org.junit.runner.Result$Listener
        <-> org.junit.runner.notification.RunListener
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$2
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.NullRunListener
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
    Result$1
        --> java.lang.Object *
        <-- org.junit.runner.Result
        <-- org.junit.runner.Result$Listener
    Result$Listener
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.System *
        --> java.util.List *
        --> java.util.concurrent.atomic.AtomicInteger *
        --> org.junit.runner.Description
        <-> org.junit.runner.Result
        --> org.junit.runner.Result$1
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
    RunWith
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Inherited *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.internal.builders.AnnotatedBuilder
    Runner
        --> java.lang.Object *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.IgnoredBuilder
        <-- org.junit.internal.builders.IgnoredClassRunner
        <-- org.junit.internal.builders.JUnit3Builder
        <-- org.junit.internal.builders.JUnit4Builder
        <-- org.junit.internal.builders.NullBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        <-- org.junit.internal.requests.ClassRequest
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.requests.SortingRequest
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Computer$1
        --> org.junit.runner.Describable
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Request
        <-- org.junit.runner.Request$1
        --> org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.model.RunnerBuilder
    package-info
        --> java.lang.Object *
org.junit.runner.manipulation
    Filter
        --> java.lang.Object *
        --> java.lang.String *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.categories.Categories$CategoryFilter
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        --> org.junit.runner.Description
        <-- org.junit.runner.Request
        <-> org.junit.runner.manipulation.Filter$1
        <-> org.junit.runner.manipulation.Filter$2
        <-> org.junit.runner.manipulation.Filter$3
        <-> org.junit.runner.manipulation.Filterable
        --> org.junit.runner.manipulation.NoTestsRemainException
        <-- org.junit.runners.ParentRunner
    Filter$1
        --> java.lang.Object *
        --> java.lang.String *
        --> org.junit.runner.Description
        <-> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.NoTestsRemainException
    Filter$2
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> org.junit.runner.Description
        <-> org.junit.runner.manipulation.Filter
    Filter$3
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.junit.runner.Description
        <-> org.junit.runner.manipulation.Filter
    Filterable
        --> java.lang.Object *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.NoTestsRemainException
        <-- org.junit.runners.ParentRunner
    NoTestsRemainException
        --> java.lang.Exception *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.internal.requests.FilterRequest
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.runner.manipulation.Filter
        <-- org.junit.runner.manipulation.Filter$1
        <-- org.junit.runner.manipulation.Filterable
        <-- org.junit.runners.ParentRunner
    Sortable
        --> java.lang.Object *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-> org.junit.runner.manipulation.Sorter
        <-- org.junit.runners.ParentRunner
    Sorter
        --> java.lang.Object *
        --> java.util.Comparator *
        <-- junit.framework.JUnit4TestAdapter
        <-- org.junit.internal.requests.SortingRequest
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$2
        --> org.junit.runner.Description
        <-> org.junit.runner.manipulation.Sortable
        --> org.junit.runner.manipulation.Sorter$1
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$4
    Sorter$1
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.junit.runner.Description
        <-- org.junit.runner.manipulation.Sorter
    package-info
        --> java.lang.Object *
org.junit.runner.notification
    Failure
        --> java.io.PrintWriter *
        --> java.io.Serializable *
        --> java.io.StringWriter *
        --> java.io.Writer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.internal.TextListener
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.model.EachTestNotifier
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-- org.junit.runner.Result$Listener
        <-- org.junit.runner.notification.RunListener
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$5
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- xxl.java.junit.NullRunListener
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
    RunListener
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Exception *
        --> java.lang.Object *
        <-- junit.framework.JUnit4TestAdapterCache
        <-- junit.framework.JUnit4TestAdapterCache$1
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxHistory
        <-- org.junit.experimental.max.MaxHistory$RememberingListener
        <-- org.junit.experimental.results.FailureList
        <-- org.junit.internal.TextListener
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        <-> org.junit.runner.Result
        <-- org.junit.runner.Result$Listener
        --> org.junit.runner.notification.Failure
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$1
        <-- org.junit.runner.notification.RunNotifier$2
        <-- org.junit.runner.notification.RunNotifier$3
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$5
        <-- org.junit.runner.notification.RunNotifier$6
        <-- org.junit.runner.notification.RunNotifier$7
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.NullRunListener
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
    RunNotifier
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collections *
        --> java.util.List *
        <-- junit.framework.JUnit4TestAdapter
        <-- junit.framework.JUnit4TestAdapterCache
        <-- org.junit.internal.builders.IgnoredClassRunner
        <-- org.junit.internal.runners.ClassRoadie
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner
        <-- org.junit.internal.runners.JUnit38ClassRunner$OldTestClassAdaptingListener
        <-- org.junit.internal.runners.JUnit4ClassRunner
        <-- org.junit.internal.runners.JUnit4ClassRunner$1
        <-- org.junit.internal.runners.MethodRoadie
        <-- org.junit.internal.runners.model.EachTestNotifier
        --> org.junit.runner.Description
        <-- org.junit.runner.JUnitCore
        --> org.junit.runner.Result
        <-- org.junit.runner.Runner
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier$1
        <-> org.junit.runner.notification.RunNotifier$2
        <-> org.junit.runner.notification.RunNotifier$3
        <-> org.junit.runner.notification.RunNotifier$4
        <-> org.junit.runner.notification.RunNotifier$5
        <-> org.junit.runner.notification.RunNotifier$6
        <-> org.junit.runner.notification.RunNotifier$7
        <-- org.junit.runner.notification.RunNotifier$SafeNotifier
        --> org.junit.runner.notification.StoppedByUserException
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$2
        <-- org.junit.runners.ParentRunner$3
        <-- org.junit.runners.Suite
    RunNotifier$1
        --> java.lang.Exception *
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$2
        --> java.lang.Exception *
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$3
        --> java.lang.Exception *
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$4
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$5
        --> java.lang.Exception *
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$6
        --> java.lang.Exception *
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$7
        --> java.lang.Exception *
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunListener
        <-> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.RunNotifier$SafeNotifier
    RunNotifier$SafeNotifier
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.Description
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        --> org.junit.runner.notification.RunNotifier
        <-- org.junit.runner.notification.RunNotifier$1
        <-- org.junit.runner.notification.RunNotifier$2
        <-- org.junit.runner.notification.RunNotifier$3
        <-- org.junit.runner.notification.RunNotifier$4
        <-- org.junit.runner.notification.RunNotifier$5
        <-- org.junit.runner.notification.RunNotifier$6
        <-- org.junit.runner.notification.RunNotifier$7
    StoppedByUserException
        --> java.lang.RuntimeException *
        <-- org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.ParentRunner
    package-info
        --> java.lang.Object *
org.junit.runners
    AllTests
        --> java.lang.Class *
        --> java.lang.Throwable *
        --> org.junit.internal.runners.SuiteMethod
    BlockJUnit4ClassRunner
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.After
        --> org.junit.Before
        --> org.junit.Ignore
        --> org.junit.Rule
        --> org.junit.Test
        --> org.junit.Test$None
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.internal.builders.JUnit4Builder
        --> org.junit.internal.runners.rules.RuleFieldValidator
        --> org.junit.internal.runners.statements.ExpectException
        --> org.junit.internal.runners.statements.Fail
        --> org.junit.internal.runners.statements.FailOnTimeout
        --> org.junit.internal.runners.statements.InvokeMethod
        --> org.junit.internal.runners.statements.RunAfters
        --> org.junit.internal.runners.statements.RunBefores
        --> org.junit.rules.MethodRule
        --> org.junit.rules.RunRules
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runner.notification.RunNotifier
        <-> org.junit.runners.BlockJUnit4ClassRunner$1
        <-- org.junit.runners.JUnit4
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        --> org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    BlockJUnit4ClassRunner$1
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> org.junit.internal.runners.model.ReflectiveCallable
        <-> org.junit.runners.BlockJUnit4ClassRunner
    JUnit4
        --> java.lang.Class *
        --> org.junit.runners.BlockJUnit4ClassRunner
        --> org.junit.runners.model.InitializationError
    MethodSorters
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        <-- org.junit.FixMethodOrder
        <-> org.junit.internal.MethodSorter
        --> org.junit.runners.MethodSorters[] *
    MethodSorters[] *
        <-- org.junit.runners.MethodSorters
    Parameterized
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.text.MessageFormat *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runners.Parameterized$Parameter
        --> org.junit.runners.Parameterized$Parameters
        <-> org.junit.runners.Parameterized$TestClassRunnerForParameters
        --> org.junit.runners.Suite
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.TestClass
    Parameterized$Parameter
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
    Parameterized$Parameters
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.runners.Parameterized
    Parameterized$TestClassRunnerForParameters
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Field *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.notification.RunNotifier
        --> org.junit.runners.BlockJUnit4ClassRunner
        <-> org.junit.runners.Parameterized
        --> org.junit.runners.Parameterized$Parameter
        --> org.junit.runners.model.FrameworkField
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    ParentRunner
        --> java.lang.Class *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Comparator *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.AfterClass
        --> org.junit.BeforeClass
        --> org.junit.ClassRule
        <-- org.junit.experimental.ParallelComputer
        --> org.junit.internal.AssumptionViolatedException
        --> org.junit.internal.runners.model.EachTestNotifier
        --> org.junit.internal.runners.rules.RuleFieldValidator
        --> org.junit.internal.runners.statements.RunAfters
        --> org.junit.internal.runners.statements.RunBefores
        --> org.junit.rules.RunRules
        --> org.junit.rules.TestRule
        --> org.junit.runner.Description
        --> org.junit.runner.Runner
        --> org.junit.runner.manipulation.Filter
        --> org.junit.runner.manipulation.Filterable
        --> org.junit.runner.manipulation.NoTestsRemainException
        --> org.junit.runner.manipulation.Sortable
        --> org.junit.runner.manipulation.Sorter
        --> org.junit.runner.notification.RunNotifier
        --> org.junit.runner.notification.StoppedByUserException
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-> org.junit.runners.ParentRunner$1
        <-> org.junit.runners.ParentRunner$2
        <-> org.junit.runners.ParentRunner$3
        <-> org.junit.runners.ParentRunner$4
        <-- org.junit.runners.Suite
        --> org.junit.runners.model.FrameworkMethod
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerScheduler
        --> org.junit.runners.model.Statement
        --> org.junit.runners.model.TestClass
    ParentRunner$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-> org.junit.runners.ParentRunner
        --> org.junit.runners.model.RunnerScheduler
    ParentRunner$2
        --> org.junit.runner.notification.RunNotifier
        <-> org.junit.runners.ParentRunner
        --> org.junit.runners.model.Statement
    ParentRunner$3
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> org.junit.runner.notification.RunNotifier
        <-> org.junit.runners.ParentRunner
    ParentRunner$4
        --> java.lang.Object *
        --> java.util.Comparator *
        --> org.junit.runner.Description
        --> org.junit.runner.manipulation.Sorter
        <-> org.junit.runners.ParentRunner
    Suite
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.List *
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.max.MaxCore
        <-- org.junit.experimental.max.MaxCore$1$1
        <-- org.junit.experimental.runners.Enclosed
        --> org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.runner.Computer
        --> org.junit.runner.Description
        --> org.junit.runner.Runner
        --> org.junit.runner.notification.RunNotifier
        <-- org.junit.runners.Parameterized
        --> org.junit.runners.ParentRunner
        --> org.junit.runners.Suite$SuiteClasses
        --> org.junit.runners.model.InitializationError
        --> org.junit.runners.model.RunnerBuilder
    Suite$SuiteClasses
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Inherited *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- org.junit.runners.Suite
    package-info
        --> java.lang.Object *
org.junit.runners.model
    FrameworkField
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        --> org.junit.runners.model.FrameworkMember
        <-- org.junit.runners.model.TestClass
    FrameworkMember
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.runners.model.FrameworkField
        <-- org.junit.runners.model.FrameworkMethod
        <-- org.junit.runners.model.TestClass
    FrameworkMethod
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.lang.reflect.Type *
        --> java.util.List *
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.AllMembersSupplier$MethodParameterValue
        <-- org.junit.internal.runners.statements.InvokeMethod
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.rules.MethodRule
        <-- org.junit.rules.TestWatchman
        <-- org.junit.rules.TestWatchman$1
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkMember
        <-> org.junit.runners.model.FrameworkMethod$1
        --> org.junit.runners.model.NoGenericTypeParametersValidator
        <-- org.junit.runners.model.TestClass
    FrameworkMethod$1
        --> java.lang.Object *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> org.junit.internal.runners.model.ReflectiveCallable
        <-> org.junit.runners.model.FrameworkMethod
    InitializationError
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Arrays *
        --> java.util.List *
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.max.MaxCore$1
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Request
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.JUnit4
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.Suite
        <-- org.junit.runners.model.RunnerBuilder
    MultipleFailureException
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        <-- org.junit.internal.runners.model.EachTestNotifier
        <-> org.junit.internal.runners.model.MultipleFailureException
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.rules.ErrorCollector
        <-- org.junit.rules.TestWatcher$1
    NoGenericTypeParametersValidator
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.GenericArrayType *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.ParameterizedType *
        --> java.lang.reflect.Type *
        --> java.lang.reflect.TypeVariable *
        --> java.lang.reflect.WildcardType *
        --> java.util.List *
        <-- org.junit.runners.model.FrameworkMethod
    RunnerBuilder
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.categories.Categories
        <-- org.junit.experimental.runners.Enclosed
        <-- org.junit.internal.builders.AllDefaultPossibilitiesBuilder
        <-- org.junit.internal.builders.AnnotatedBuilder
        <-- org.junit.internal.builders.IgnoredBuilder
        <-- org.junit.internal.builders.JUnit3Builder
        <-- org.junit.internal.builders.JUnit4Builder
        <-- org.junit.internal.builders.NullBuilder
        <-- org.junit.internal.builders.SuiteMethodBuilder
        --> org.junit.internal.runners.ErrorReportingRunner
        <-- org.junit.runner.Computer
        <-- org.junit.runner.Computer$1
        <-- org.junit.runner.Request
        --> org.junit.runner.Runner
        <-- org.junit.runners.Suite
        --> org.junit.runners.model.InitializationError
    RunnerScheduler
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-- org.junit.experimental.ParallelComputer
        <-- org.junit.experimental.ParallelComputer$1
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$1
    Statement
        --> java.lang.Object *
        --> java.lang.Throwable *
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1$1
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$2
        <-- org.junit.internal.runners.statements.ExpectException
        <-- org.junit.internal.runners.statements.Fail
        <-- org.junit.internal.runners.statements.FailOnTimeout
        <-- org.junit.internal.runners.statements.FailOnTimeout$StatementThread
        <-- org.junit.internal.runners.statements.InvokeMethod
        <-- org.junit.internal.runners.statements.RunAfters
        <-- org.junit.internal.runners.statements.RunBefores
        <-- org.junit.rules.ExpectedException
        <-- org.junit.rules.ExpectedException$ExpectedExceptionStatement
        <-- org.junit.rules.ExternalResource
        <-- org.junit.rules.ExternalResource$1
        <-- org.junit.rules.MethodRule
        <-- org.junit.rules.RuleChain
        <-- org.junit.rules.RunRules
        <-- org.junit.rules.TestRule
        <-- org.junit.rules.TestWatcher
        <-- org.junit.rules.TestWatcher$1
        <-- org.junit.rules.TestWatchman
        <-- org.junit.rules.TestWatchman$1
        <-- org.junit.rules.Timeout
        <-- org.junit.rules.Verifier
        <-- org.junit.rules.Verifier$1
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        <-- org.junit.runners.ParentRunner$2
    TestClass
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.BeforeClass
        <-- org.junit.experimental.theories.Theories
        <-- org.junit.experimental.theories.Theories$TheoryAnchor
        <-- org.junit.experimental.theories.Theories$TheoryAnchor$1
        <-- org.junit.experimental.theories.internal.AllMembersSupplier
        <-- org.junit.experimental.theories.internal.Assignments
        --> org.junit.internal.MethodSorter
        <-- org.junit.internal.runners.rules.RuleFieldValidator
        <-- org.junit.runners.BlockJUnit4ClassRunner
        <-- org.junit.runners.Parameterized
        <-- org.junit.runners.Parameterized$TestClassRunnerForParameters
        <-- org.junit.runners.ParentRunner
        --> org.junit.runners.model.FrameworkField
        --> org.junit.runners.model.FrameworkMember
        --> org.junit.runners.model.FrameworkMethod
org.slf4j *
    Logger *
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.Symbolic
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.LoggerLibrary
        <-- xxl.java.support.InvocationStopwatch
    LoggerFactory *
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarJava7
        <-- fr.inria.lille.repair.nopol.sps.gzoltar.GZoltarSuspiciousProgramStatements
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DefaultSynthesizer
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- xxl.java.library.LoggerLibrary
org.smtlib *
    IAccept *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ICommand *
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
    ICommand$IFactory *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    ICommand$IScript *
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    ICommand$Iassert *
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    ICommand$Ideclare_fun *
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ICommand$Idefine_fun *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
    ICommand$Iset_logic *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    ICommand$Iset_option *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    IExpr *
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
    IExpr$IAsIdentifier *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IAttribute *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IAttributeValue *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    IExpr$IAttributedExpr *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IBinaryLiteral *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    IExpr$IBinding *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IDecimal *
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    IExpr$IDeclaration *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
    IExpr$IError *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IExists *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.constraint.VerificationConstraint
    IExpr$IFactory *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    IExpr$IFcnExpr *
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
    IExpr$IForall *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IHexLiteral *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    IExpr$IIdentifier *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IKeyword *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    IExpr$ILet *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$INumeral *
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
    IExpr$IParameterizedIdentifier *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IQualifiedIdentifier *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$IStringLiteral *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IExpr$ISymbol *
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.operator.BinaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.DoubleOperator
        <-- fr.inria.lille.commons.synthesis.operator.Operator
        <-- fr.inria.lille.commons.synthesis.operator.TernaryOperator
        <-- fr.inria.lille.commons.synthesis.operator.UnaryOperator
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
    IExpr[] *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
    ILogic *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IParser *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    IParser$IFactory *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    IParser$ParserException *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    IResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
    IResponse$IAssertionsResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IAssignmentResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IAttributeList *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IError *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IProofResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IUnsatCoreResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IResponse$IValueResponse *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISolver *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
    ISort *
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
    ISort$IAbbreviation *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISort$IApplication *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISort$IFactory *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    ISort$IFamily *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISort$IFcnSort *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISort$IParameter *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    ISource *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    ITheory *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IVisitor *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    IVisitor$VisitorException *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
    SMT *
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
    SMT$Configuration *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
    Utils *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
org.smtlib.impl *
    Command *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    Response *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    SMTExpr$Keyword *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
    SMTExpr$Symbol *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    Sort *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
org.smtlib.logic *
    AUFLIA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    AUFLIRA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    AUFNIRA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    LRA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    QF_LIA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    QF_LRA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    QF_NIA *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
    QF_UF *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
org.smtlib.sexpr *
    ISexpr *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    ISexpr$IToken *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    Parser *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
    Sexpr$Seq *
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
org.smtlib.solvers *
    Solver_cvc4 *
        <-- fr.inria.lille.commons.synthesis.smt.solver.CVC4SolverFactory
    Solver_z3_4_3 *
        <-- fr.inria.lille.commons.synthesis.smt.solver.Z3SolverFactory
org.w3c.dom *
    Attr *
        <-- org.apache.tools.ant.util.DOMElementWriter
    CDATASection *
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.util.DOMUtils
    Document *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.DOMConfigurator$ParseAction
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.util.DOMUtils
        <-- spoon.processing.XMLAnnotationProcessor
    Element *
        <-- org.apache.log4j.net.SMTPAppender
        <-- org.apache.log4j.rewrite.RewriteAppender
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.UnrecognizedElementHandler
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.XmlLogger$TimedElement
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.taskdefs.cvslib.ChangeLogWriter
        <-- org.apache.tools.ant.taskdefs.cvslib.CvsTagDiff
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DOMUtils
        <-- spoon.processing.XMLAnnotationProcessor
    NamedNodeMap *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.util.DOMElementWriter
    Node *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.XmlLogger
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DOMUtils
        <-- spoon.processing.XMLAnnotationProcessor
    NodeList *
        <-- org.apache.log4j.lf5.viewer.configure.ConfigurationManager
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- spoon.processing.XMLAnnotationProcessor
    Text *
        <-- org.apache.tools.ant.util.DOMElementWriter
        <-- org.apache.tools.ant.util.DOMUtils
org.xml.sax *
    AttributeList *
        <-- org.apache.tools.ant.ProjectHelper
        <-- org.apache.tools.ant.RuntimeConfigurable
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
    Attributes *
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.or.sax.AttributesRenderer
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    ContentHandler *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
    DTDHandler *
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
    DocumentHandler *
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DescriptionHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
    EntityResolver *
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
    ErrorHandler *
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
    HandlerBase *
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
    InputSource *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.xml.DOMConfigurator
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.Log4jEntityResolver
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.types.XMLCatalog$CatalogResolver
        <-- org.apache.tools.ant.types.XMLCatalog$ExternalResolver
        <-- org.apache.tools.ant.types.XMLCatalog$InternalResolver
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
    Locator *
        <-- org.apache.tools.ant.Location
        <-- org.apache.tools.ant.helper.AntXMLContext
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
    Parser *
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.util.JAXPUtils
    SAXException *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.log4j.xml.DOMConfigurator$1
        <-- org.apache.log4j.xml.DOMConfigurator$2
        <-- org.apache.log4j.xml.DOMConfigurator$3
        <-- org.apache.log4j.xml.DOMConfigurator$4
        <-- org.apache.log4j.xml.DOMConfigurator$5
        <-- org.apache.log4j.xml.DOMConfigurator$ParseAction
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.taskdefs.XmlProperty
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- spoon.Launcher
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    SAXParseException *
        <-- org.apache.log4j.xml.SAXErrorHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelper2$AntHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$MainHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$AbstractHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$DataTypeHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$NestedElementHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$ProjectHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$RootHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TargetHandler
        <-- org.apache.tools.ant.helper.ProjectHelperImpl$TaskHandler
        <-- spoon.processing.XMLAnnotationProcessor
    XMLReader *
        <-- org.apache.log4j.chainsaw.LoadXMLAction
        <-- org.apache.tools.ant.helper.ProjectHelper2
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
        <-- org.apache.tools.ant.types.XMLCatalog
        <-- org.apache.tools.ant.util.JAXPUtils
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
org.xml.sax.helpers *
    AttributeListImpl *
        <-- org.apache.tools.ant.RuntimeConfigurable
    DefaultHandler *
        <-- org.apache.log4j.chainsaw.XMLFileHandler
        <-- org.apache.tools.ant.helper.ProjectHelper2$RootHandler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    XMLReaderAdapter *
        <-- org.apache.tools.ant.helper.ProjectHelperImpl
    XMLReaderFactory *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
sacha.finder.classes *
    ClassFinder *
        <-- fr.inria.lille.repair.TestClassesFinder
sacha.finder.classes.impl *
    ClassloaderFinder *
        <-- fr.inria.lille.repair.TestClassesFinder
sacha.finder.filters *
    ClassFilter *
        <-- fr.inria.lille.repair.TestClassesFinder
sacha.finder.filters.impl *
    TestFilter *
        <-- fr.inria.lille.repair.TestClassesFinder
sacha.finder.processor *
    Processor *
        <-- fr.inria.lille.repair.TestClassesFinder
spoon
    Launcher
        --> com.martiansoftware.jsap.FlaggedOption
        --> com.martiansoftware.jsap.JSAP
        --> com.martiansoftware.jsap.JSAPException
        --> com.martiansoftware.jsap.JSAPResult
        --> com.martiansoftware.jsap.Parameter
        --> com.martiansoftware.jsap.StringParser
        --> com.martiansoftware.jsap.Switch
        --> com.martiansoftware.jsap.stringparsers.FileStringParser
        --> com.martiansoftware.jsap.stringparsers.IntegerStringParser
        --> com.martiansoftware.jsap.stringparsers.StringStringParser
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ResourceBundle *
        --> org.apache.log4j.Logger
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.OutputType
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        <-> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        <-> spoon.support.DefaultCoreFactory
        <-> spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        --> spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-> spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-> spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.TestUtils$1
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.api.APITest$1
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
    OutputType
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.Launcher
        --> spoon.OutputType[] *
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler$1
    OutputType[] *
        <-- spoon.OutputType
    SpoonException
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.template.TemplateException
    SpoonTask
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Vector *
        --> org.apache.tools.ant.BuildException
        --> org.apache.tools.ant.DirectoryScanner
        --> org.apache.tools.ant.Project
        --> org.apache.tools.ant.taskdefs.Java
        --> org.apache.tools.ant.types.Commandline$Argument
        --> org.apache.tools.ant.types.CommandlineJava
        --> org.apache.tools.ant.types.FileSet
        --> org.apache.tools.ant.types.Path
        --> org.apache.tools.ant.types.Reference
        --> spoon.SpoonTask$ProcessorType
    SpoonTask$ProcessorType
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.SpoonTask
spoon.compiler
    Environment
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.Launcher
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProblemFixer
        --> spoon.processing.ProcessingManager
        <-> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
    InvalidClassPathException
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.exceptions.ExceptionTest
    ModelBuildingException
        --> java.lang.Exception *
        --> java.lang.String *
        --> spoon.SpoonException
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.exceptions.ExceptionTest
    SpoonCompiler
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.Launcher
        --> spoon.OutputType
        --> spoon.compiler.SpoonResource
        --> spoon.processing.FactoryAccessor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
    SpoonFile
        --> java.io.InputStream *
        --> java.lang.Object *
        <-- spoon.Launcher
        --> spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    SpoonFolder
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.Launcher
        <-> spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    SpoonResource
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonFile
        <-> spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
    SpoonResourceHelper
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Logger
        <-> spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.support.compiler.FileSystemFile
        <-> spoon.support.compiler.FileSystemFolder
        <-> spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
spoon.processing
    AbstractAnnotationProcessor
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.AnnotationProcessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtTypeReference
    AbstractManualProcessor
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
    AbstractProblemFixer
        --> java.lang.Object *
        --> spoon.processing.ProblemFixer
        --> spoon.reflect.factory.Factory
    AbstractProcessor
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        --> spoon.support.util.RtHelper
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
    AnnotationProcessor
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.util.Set *
        <-- spoon.processing.AbstractAnnotationProcessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
    FactoryAccessor
        --> java.lang.Object *
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.Processor
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
    FileGenerator
        --> java.io.File *
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        --> spoon.processing.Processor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    ProblemFixer
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractProblemFixer
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.Changes
        --> spoon.reflect.declaration.CtElement
        <-- spoon.support.StandardEnvironment
    ProcessingManager
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        <-- spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    Processor
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Object *
        --> java.util.Set *
        <-- spoon.Launcher
        <-> spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.FileGenerator
        <-- spoon.processing.ProcessingManager
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.test.processing.TestProcessor
    ProcessorProperties
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
    Property
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
    Severity
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractProcessor
        --> spoon.processing.Severity[] *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.StandardEnvironment$1
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.test.processing.TestProcessor
    Severity[] *
        <-- spoon.processing.Severity
    TraversalStrategy
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        --> spoon.processing.TraversalStrategy[] *
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.visitor.ProcessingVisitor
    TraversalStrategy[] *
        <-- spoon.processing.TraversalStrategy
    XMLAnnotationProcessor
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.regex.Pattern *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.ParserConfigurationException *
        --> org.apache.log4j.Logger
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractManualProcessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.processing.XmlProcessorProperties
spoon.reflect
    Changes
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        <-- spoon.processing.ProblemFixer
    ModelStreamer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> spoon.reflect.factory.Factory
        <-- spoon.support.SerializationModelStreamer
spoon.reflect.code
    BinaryOperatorKind
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> spoon.reflect.code.BinaryOperatorKind[] *
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtOperatorAssignment
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator$1
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$1
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.strings.StringTest
    BinaryOperatorKind[] *
        <-- spoon.reflect.code.BinaryOperatorKind
    CtAbstractInvocation
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtNewClass
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    CtAnnotationFieldAccess
        --> java.lang.Object *
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtArrayAccess
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtAssert
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtAssignment
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
    CtBinaryOperator
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        --> java.lang.Object *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.strings.StringTest
    CtBlock
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        --> spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    CtBreak
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.code.CtCFlowBreak
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtCFlowBreak
        --> java.lang.Object *
        <-- spoon.reflect.code.CtBreak
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
    CtCase
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
    CtCatch
        --> java.lang.Object *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.trycatch.TryCatchTest
    CtCodeElement
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        --> java.lang.Object *
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.Parameters$1
        <-- spoon.support.template.Parameters$2
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.eval.EvalTest
    CtCodeSnippetExpression
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.IntercessionTest
    CtCodeSnippetStatement
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.trycatch.TryCatchTest
    CtConditional
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtContinue
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtDo
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.control.ControlTest
    CtExpression
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLiteral
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.code.CtThisAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
        <-- spoon.test.control.ControlTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.strings.StringTest
    CtFieldAccess
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
    CtFor
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.control.ControlTest
    CtForEach
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtIf
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
    CtInvocation
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
    CtLiteral
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
    CtLocalVariable
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.trycatch.TryCatchTest
    CtLoop
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        --> java.lang.Object *
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        --> spoon.template.TemplateParameter
    CtNewArray
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtNewClass
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.secondaryclasses.ClassesTest
    CtOperatorAssignment
        --> java.lang.Object *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtReturn
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        --> java.lang.Object *
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        --> spoon.template.TemplateParameter
        <-- spoon.test.intercession.IntercessionTest
    CtStatement
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.nopol.synth.SynthesizerFactory
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$1
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCFlowBreak
        <-- spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewClass
        <-> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    CtStatementList
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        <-> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedStatementListTemplateParameter
    CtSuperAccess
        --> java.lang.Object *
        --> spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtSuperAccessImpl
    CtSwitch
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
    CtSynchronized
        --> java.lang.Object *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtTargetedAccess
        --> java.lang.Object *
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.test.fieldaccesses.FieldAccessTest
    CtTargetedExpression
        --> java.lang.Object *
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    CtThisAccess
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtThrow
        --> java.lang.Object *
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
        <-- spoon.test.intercession.IntercessionTest
    CtTry
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
        <-- spoon.test.trycatch.TryCatchTest
    CtUnaryOperator
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtVariableAccess
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        --> java.lang.Object *
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.casts.CastTest
    CtWhile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    UnaryOperatorKind
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.UnaryOperatorKind[] *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator$1
        <-- spoon.support.visitor.SignaturePrinter
    UnaryOperatorKind[] *
        <-- spoon.reflect.code.UnaryOperatorKind
spoon.reflect.cu
    CompilationUnit
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.processing.TestProcessor
    Import
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.reference.CtReference
        <-- spoon.support.reflect.cu.ImportImpl
    SourceCodeFragment
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
    SourcePosition
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.LocationFilter
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$2
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.sourcePosition.SourcePositionTest
spoon.reflect.declaration
    CtAnnotation
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.Map *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.annotation.AnnotationTest
    CtAnnotationType
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
    CtAnnotation[] *
        <-- spoon.test.annotation.AnnotationTest
    CtAnonymousExecutable
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> spoon.reflect.code.CtBlock
        <-> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.initializers.InitializerTest
    CtClass
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        <-> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    CtCodeSnippet
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
    CtConstructor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ProcessingTest
    CtElement
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.spoon.filter.BeforeLocationFilter
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.nopol.spoon.SpoonConditionalPredicate
        <-- fr.inria.lille.repair.nopol.spoon.SpoonInitialisationStatement
        <-- fr.inria.lille.repair.nopol.spoon.SpoonStatementPredicate
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        <-- fr.inria.lille.repair.nopol.synth.DelegatingProcessor
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$1
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtCodeElement
        --> spoon.reflect.cu.SourcePosition
        <-> spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer$1
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$1
        <-- spoon.support.reflect.declaration.CtElementImpl$2
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$2
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
    CtElement[] *
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
    CtEnum
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.declaration.CtClass
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.test.enums.EnumsTest
    CtExecutable
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.code.CtBlock
        <-- spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
    CtField
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        <-> spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
    CtGenericElement
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.compiler.jdt.ParentExiter
    CtInterface
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
    CtMethod
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$1
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    CtModifiable
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    CtNamedElement
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CodeFactory
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.gui.SpoonTreeBuilder$1
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
    CtPackage
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-> spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
    CtParameter
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        <-> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.generics.GenericsTest
    CtSimpleType
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCollectorProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Class *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnnotationType
        <-> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters$1
        <-- spoon.support.template.Parameters$2
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest$1$1
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.trycatch.TryCatchTest
    CtType
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
    CtTypeParameter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtTypedElement
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtMethod
        <-- spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.processing.TestProcessor
    CtVariable
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        --> java.lang.Object *
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CodeFactory
        <-> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.template.TemplateMatcher
    ModifierKind
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.Locale *
        <-- spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.ModifierKind[] *
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.util.RtHelper
        <-- spoon.test.initializers.InitializerTest
    ModifierKind[] *
        <-- spoon.reflect.declaration.ModifierKind
    ParentNotInitializedException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.template.TemplateMatcher
spoon.reflect.eval
    PartialEvaluator
        --> java.lang.Object *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    StepKind
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> spoon.reflect.eval.StepKind[] *
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    StepKind[] *
        <-- spoon.reflect.eval.StepKind
    SymbolicEvaluationPath
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        --> spoon.reflect.reference.CtExecutableReference
    SymbolicEvaluationStack
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Stack *
        --> spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
    SymbolicEvaluationStep
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluator
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.eval.SymbolicEvaluationStack
        <-> spoon.reflect.eval.SymbolicEvaluatorObserver
        <-> spoon.reflect.eval.SymbolicHeap
        <-> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluatorObserver
        --> java.lang.Object *
        --> spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicHeap
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicInstance
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Method *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> spoon.support.util.RtHelper
    SymbolicStackFrame
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.reflect.eval.observer
    SymbolicEvaluationPathsMaker
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> spoon.reflect.eval.SymbolicEvaluationPath
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluationPrinter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.compiler.Environment
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.reflect.factory
    AnnotationFactory
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtTypeReference
    ClassFactory
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.visibility.VisibilityTest
    CodeFactory
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
    CompilationUnitFactory
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.Import
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> spoon.support.reflect.cu.ImportImpl
    ConstructorFactory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Constructor *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.Substitution
    CoreFactory
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        <-- spoon.Launcher
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.parent.ParentTest
    EnumFactory
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
    EvalFactory
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.Map *
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    ExecutableFactory
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.TemplateMatcher
    Factory
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalAdder
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalReplacer
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Object *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.reflect.eval.SymbolicInstance
        <-> spoon.reflect.factory.AnnotationFactory
        <-> spoon.reflect.factory.ClassFactory
        <-> spoon.reflect.factory.CodeFactory
        <-> spoon.reflect.factory.CompilationUnitFactory
        <-> spoon.reflect.factory.ConstructorFactory
        <-> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-> spoon.reflect.factory.EvalFactory
        <-> spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FactoryImpl
        <-> spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-> spoon.reflect.factory.MethodFactory
        <-> spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.SubFactory
        <-> spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.SerializationModelStreamer$1
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$1
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.TestUtils$1
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    FactoryImpl
        --> java.io.Serializable *
        --> java.lang.Object *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.EnumFactory
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.InterfaceFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
    FieldFactory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Field *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    InterfaceFactory
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
    MethodFactory
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Void *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtTypeReference[] *
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.template.Substitution
        <-- spoon.test.processing.TestProcessor
    PackageFactory
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.TreeMap *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.InterfaceFactory
        --> spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
    SubFactory
        --> java.lang.Object *
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
    TypeFactory
        <-- fr.inria.lille.commons.spoon.SpoonedClass
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Date *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
spoon.reflect.reference
    CtAnnonTypeParameterReference
        --> java.lang.Object *
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
    CtArrayTypeReference
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.processing.ArrayResizeProcessor
    CtExecutableReference
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.List *
        <-- spoon.reflect.code.CtAbstractInvocation
        <-> spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.secondaryclasses.ClassesTest
    CtFieldReference
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Member *
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtTargetedAccess
        <-> spoon.reflect.declaration.CtField
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
    CtGenericElementReference
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.reflect.reference.CtExecutableReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    CtLocalVariableReference
        <-- fr.inria.lille.repair.nopol.spoon.IntialisationAdder
        --> java.lang.Object *
        <-> spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtPackageReference
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        --> java.lang.Object *
        --> java.lang.Package *
        <-> spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    CtParameterReference
        --> java.lang.Object *
        <-> spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
    CtReference
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.cu.Import
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        --> spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.SerializationModelStreamer$1
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
    CtTypeParameterReference
        --> java.lang.Object *
        --> java.util.List *
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.test.generics.GenericsTest
    CtTypeReference
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonMethodLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.symbolic.spoon.AssertReplacer
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Set *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        <-> spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
    CtTypeReference[] *
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
    CtVariableReference
        --> java.lang.Object *
        <-- spoon.reflect.code.CtVariableAccess
        <-> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
spoon.reflect.visitor
    Child
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Target *
    CtAbstractVisitor
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
    CtInheritanceScanner
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Set *
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    CtScanner
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtStackScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.SerializationModelStreamer$1
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.declaration.CtElementImpl$2
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher$1
        <-- spoon.template.TemplateMatcher$2
        <-- spoon.template.TemplateMatcher$3
    CtStackScanner
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Stack *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
    CtVisitor
        --> java.lang.Object *
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$1
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    DefaultJavaPrettyPrinter
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeMap *
        --> org.apache.log4j.Logger
        <-> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
        <-> spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-> spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.SortedList
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.LinesTest
    DefaultJavaPrettyPrinter$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.UnaryOperatorKind
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
    DefaultJavaPrettyPrinter$ImportScanner
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        <-> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$1
    DefaultJavaPrettyPrinter$Printingcontext
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Stack *
        --> spoon.reflect.declaration.CtSimpleType
        <-> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.test.generics.GenericsTest
    Filter
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor$1
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer
        --> java.lang.Class *
        --> java.lang.Object *
        <-- spoon.reflect.code.CtBlock
        <-> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$1
        <-- spoon.support.compiler.SnippetCompilationHelper$2
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
    FragmentDrivenJavaPrettyPrinter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    JavaIdentifiers
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.Arrays *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> spoon.reflect.visitor.JavaIdentifiers[] *
    JavaIdentifiers[] *
        <-- spoon.reflect.visitor.JavaIdentifiers
    ModelConsistencyChecker
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.Iterator *
        --> java.util.Stack *
        --> spoon.compiler.Environment
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.test.template.TemplateTest
    Parent
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Target *
    PrettyPrinter
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Map *
        <-- spoon.Launcher
        --> spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    Query
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.QueryVisitor
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
    QueryVisitor
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.Query
    ReferenceFilter
        --> java.lang.Class *
        --> java.lang.Object *
        <-- spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
    ReferenceQueryVisitor
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
    Root
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Target *
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.reference.CtReference
spoon.reflect.visitor.filter
    AbstractFilter
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.InBlockFilter
        <-- fr.inria.lille.commons.spoon.filter.LocationFilter
        <-- fr.inria.lille.commons.spoon.filter.VariableAssignmentFilter
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$1
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
    AbstractReferenceFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
    AnnotationFilter
        --> java.lang.Class *
        --> java.lang.annotation.Annotation *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
    CompositeFilter
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> java.lang.Class *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.CompositeFilter$1
        --> spoon.reflect.visitor.filter.FilteringOperator
        <-- spoon.test.filters.FilterTest
    CompositeFilter$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        <-- spoon.reflect.visitor.filter.CompositeFilter
        --> spoon.reflect.visitor.filter.FilteringOperator
    DirectReferenceFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
    FieldAccessFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.visitor.filter.AbstractFilter
    FilteringOperator
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter$1
        --> spoon.reflect.visitor.filter.FilteringOperator[] *
        <-- spoon.test.filters.FilterTest
    FilteringOperator[] *
        <-- spoon.reflect.visitor.filter.FilteringOperator
    InvocationFilter
        --> java.lang.Class *
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.template.TemplateMatcher
    NameFilter
        --> java.lang.Class *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.Filter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
    ReferenceTypeFilter
        --> java.lang.Class *
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
    RegexFilter
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        <-- spoon.test.filters.FilterTest
    ReturnOrThrowFilter
        --> java.lang.Class *
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
    TypeFilter
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        --> java.lang.Class *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.trycatch.TryCatchTest
    VariableAccessFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
spoon.support
    DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Cloneable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> org.apache.log4j.Logger
        <-> spoon.Launcher
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtArrayAccessImpl
        --> spoon.support.reflect.code.CtAssertImpl
        --> spoon.support.reflect.code.CtAssignmentImpl
        --> spoon.support.reflect.code.CtBinaryOperatorImpl
        --> spoon.support.reflect.code.CtBlockImpl
        --> spoon.support.reflect.code.CtBreakImpl
        --> spoon.support.reflect.code.CtCaseImpl
        --> spoon.support.reflect.code.CtCatchImpl
        --> spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        --> spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> spoon.support.reflect.code.CtConditionalImpl
        --> spoon.support.reflect.code.CtContinueImpl
        --> spoon.support.reflect.code.CtDoImpl
        --> spoon.support.reflect.code.CtFieldAccessImpl
        --> spoon.support.reflect.code.CtForEachImpl
        --> spoon.support.reflect.code.CtForImpl
        --> spoon.support.reflect.code.CtIfImpl
        --> spoon.support.reflect.code.CtInvocationImpl
        --> spoon.support.reflect.code.CtLiteralImpl
        --> spoon.support.reflect.code.CtLocalVariableImpl
        --> spoon.support.reflect.code.CtNewArrayImpl
        --> spoon.support.reflect.code.CtNewClassImpl
        --> spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> spoon.support.reflect.code.CtReturnImpl
        --> spoon.support.reflect.code.CtStatementListImpl
        --> spoon.support.reflect.code.CtSuperAccessImpl
        --> spoon.support.reflect.code.CtSwitchImpl
        --> spoon.support.reflect.code.CtSynchronizedImpl
        --> spoon.support.reflect.code.CtThisAccessImpl
        --> spoon.support.reflect.code.CtThrowImpl
        --> spoon.support.reflect.code.CtTryImpl
        --> spoon.support.reflect.code.CtUnaryOperatorImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.code.CtWhileImpl
        --> spoon.support.reflect.cu.CompilationUnitImpl
        --> spoon.support.reflect.cu.SourcePositionImpl
        --> spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        --> spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.declaration.CtAnnotationTypeImpl
        --> spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        --> spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtEnumImpl
        --> spoon.support.reflect.declaration.CtFieldImpl
        --> spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtPackageImpl
        --> spoon.support.reflect.declaration.CtParameterImpl
        --> spoon.support.reflect.declaration.CtTypeParameterImpl
        --> spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        --> spoon.support.reflect.reference.CtExecutableReferenceImpl
        --> spoon.support.reflect.reference.CtFieldReferenceImpl
        --> spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        --> spoon.support.reflect.reference.CtPackageReferenceImpl
        --> spoon.support.reflect.reference.CtParameterReferenceImpl
        --> spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.support.util.RtHelper
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest$1
    JavaOutputProcessor
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Logger
        <-> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.test.api.APITest$1
        <-- spoon.test.api.APITest$1$1
    QueueProcessingManager
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Thread *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.Queue *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    RuntimeProcessingManager
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Thread *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        --> spoon.compiler.Environment
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    SerializationModelStreamer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.ModelStreamer
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        <-> spoon.support.SerializationModelStreamer$1
        <-- spoon.support.gui.SpoonModelTree$1
    SerializationModelStreamer$1
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        <-> spoon.support.SerializationModelStreamer
    StandardEnvironment
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Deprecated *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> org.apache.log4j.Logger
        --> org.xml.sax.SAXException *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProblemFixer
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.support.StandardEnvironment$1
        --> spoon.support.processing.XmlProcessorProperties
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.generics.GenericsTest
    StandardEnvironment$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> spoon.processing.Severity
        <-- spoon.support.StandardEnvironment
spoon.support.compiler
    FileSystemFile
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    FileSystemFolder
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.SpoonException
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        <-> spoon.compiler.SpoonResourceHelper
        --> spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    SnippetCompilationError
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.SpoonException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
    SnippetCompilationHelper
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper$1
        --> spoon.support.compiler.SnippetCompilationHelper$2
        --> spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
    SnippetCompilationHelper$1
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.visitor.Filter
        <-- spoon.support.compiler.SnippetCompilationHelper
    SnippetCompilationHelper$2
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.visitor.Filter
        <-- spoon.support.compiler.SnippetCompilationHelper
    VirtualFile
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    VirtualFolder
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    ZipFile
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        <-> spoon.support.compiler.ZipFolder
    ZipFolder
        --> java.io.BufferedInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipInputStream *
        --> org.apache.log4j.Logger
        <-> spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        <-> spoon.compiler.SpoonResourceHelper
        <-> spoon.support.compiler.ZipFile
spoon.support.compiler.jdt
    CompilationUnitWrapper
        --> C[] *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Map *
        --> org.apache.commons.io.IOUtils
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> spoon.Launcher
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    CompilerClassLoader
        --> java.lang.ClassLoader *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    JDTBasedSpoonCompiler
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.URI *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.FileUtils
        --> org.apache.commons.io.IOUtils
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.core.compiler.CategorizedProblem[] *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.util.Util
        <-> spoon.Launcher
        --> spoon.OutputType
        --> spoon.compiler.Environment
        --> spoon.compiler.InvalidClassPathException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.QueueProcessingManager
        --> spoon.support.compiler.FileSystemFile
        --> spoon.support.compiler.FileSystemFolder
        --> spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        --> spoon.support.compiler.jdt.CompilerClassLoader
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler$1
        <-> spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
        <-> spoon.support.compiler.jdt.TreeBuilderRequestor
    JDTBasedSpoonCompiler$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> spoon.OutputType
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    JDTBatchCompiler
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.IOUtils
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit[] *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem
        --> org.eclipse.jdt.internal.compiler.batch.Main
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.support.compiler.jdt.CompilationUnitWrapper
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-> spoon.support.compiler.jdt.JDTBatchCompiler$1
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.compiler.jdt.TreeBuilderCompiler
        --> spoon.support.compiler.jdt.TreeBuilderRequestor
    JDTBatchCompiler$1
        --> java.lang.Object *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-> spoon.support.compiler.jdt.JDTBatchCompiler
    JDTSnippetCompiler
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.String[] *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonResource
        --> spoon.reflect.factory.Factory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.compiler.VirtualFile
        --> spoon.support.compiler.VirtualFolder
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTBatchCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
    JDTTreeBuilder
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.StringIndexOutOfBoundsException *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.internal.compiler.ASTVisitor
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.Annotation
        --> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.AssertStatement
        --> org.eclipse.jdt.internal.compiler.ast.Assignment
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.Block
        --> org.eclipse.jdt.internal.compiler.ast.BreakStatement
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment
        --> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.ContinueStatement
        --> org.eclipse.jdt.internal.compiler.ast.DoStatement
        --> org.eclipse.jdt.internal.compiler.ast.DoubleLiteral
        --> org.eclipse.jdt.internal.compiler.ast.EqualExpression
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.FalseLiteral
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference
        --> org.eclipse.jdt.internal.compiler.ast.FloatLiteral
        --> org.eclipse.jdt.internal.compiler.ast.ForStatement
        --> org.eclipse.jdt.internal.compiler.ast.ForeachStatement
        --> org.eclipse.jdt.internal.compiler.ast.IfStatement
        --> org.eclipse.jdt.internal.compiler.ast.Initializer
        --> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc
        --> org.eclipse.jdt.internal.compiler.ast.LabeledStatement
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.LongLiteral
        --> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral
        --> org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.PostfixExpression
        --> org.eclipse.jdt.internal.compiler.ast.PrefixExpression
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.ReturnStatement
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.Statement
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference
        --> org.eclipse.jdt.internal.compiler.ast.SwitchStatement
        --> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference
        --> org.eclipse.jdt.internal.compiler.ast.ThrowStatement
        --> org.eclipse.jdt.internal.compiler.ast.TrueLiteral
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference
        --> org.eclipse.jdt.internal.compiler.ast.UnaryExpression
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference
        --> org.eclipse.jdt.internal.compiler.ast.WhileStatement
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.impl.Constant
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$1
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-> spoon.support.compiler.jdt.ParentExiter
    JDTTreeBuilder$1
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.filter.TypeFilter
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
    JDTTreeBuilder$ASTPair
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> spoon.reflect.declaration.CtElement
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    JDTTreeBuilder$BuilderContext
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Stack *
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Expression
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-> spoon.support.compiler.jdt.ParentExiter
    JDTTreeBuilder$ReferenceBuilder
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration
        --> org.eclipse.jdt.internal.compiler.ast.Argument
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.Binding
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope
        --> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ParentExiter
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    TreeBuilderCompiler
        --> java.io.PrintWriter *
        --> org.eclipse.jdt.core.compiler.CompilationProgress
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.Compiler
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy
        --> org.eclipse.jdt.internal.compiler.IProblemFactory
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier
        --> org.eclipse.jdt.internal.compiler.parser.Parser
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    TreeBuilderRequestor
        --> java.lang.Object *
        --> java.util.List *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem
        --> org.eclipse.jdt.internal.compiler.CompilationResult
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
spoon.support.gui
    SpoonModelTree
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.GridLayout *
        --> java.awt.LayoutManager *
        --> java.awt.event.ActionListener *
        --> java.awt.event.KeyEvent *
        --> java.awt.event.KeyListener *
        --> java.awt.event.MouseEvent *
        --> java.awt.event.MouseListener *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> javax.swing.JFrame *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPanel *
        --> javax.swing.JPopupMenu *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTree *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.TreeNode *
        --> javax.swing.tree.TreePath *
        <-- spoon.Launcher
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        <-> spoon.support.gui.SpoonModelTree$1
        <-> spoon.support.gui.SpoonModelTree$2
        <-> spoon.support.gui.SpoonModelTree$3
        <-> spoon.support.gui.SpoonModelTree$4
        --> spoon.support.gui.SpoonObjectFieldsTable
        --> spoon.support.gui.SpoonTreeBuilder
    SpoonModelTree$1
        --> java.awt.Component *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> javax.swing.JFileChooser *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.factory.Factory
        --> spoon.support.SerializationModelStreamer
        <-> spoon.support.gui.SpoonModelTree
    SpoonModelTree$2
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JTree *
        --> javax.swing.tree.DefaultMutableTreeNode *
        <-> spoon.support.gui.SpoonModelTree
        --> spoon.support.gui.SpoonObjectFieldsTable
    SpoonModelTree$3
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.tree.DefaultMutableTreeNode *
        <-> spoon.support.gui.SpoonModelTree
    SpoonModelTree$4
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.tree.DefaultMutableTreeNode *
        <-> spoon.support.gui.SpoonModelTree
    SpoonObjectFieldsTable
        --> java.awt.BorderLayout *
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.LayoutManager *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JFrame *
        --> javax.swing.JPanel *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTable *
        --> javax.swing.table.TableModel *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$2
        <-> spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
    SpoonObjectFieldsTable$SpoonObjectTableModel
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.List *
        --> javax.swing.table.AbstractTableModel *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        <-> spoon.support.gui.SpoonObjectFieldsTable
    SpoonTreeBuilder
        --> java.lang.Object *
        --> java.util.Stack *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.MutableTreeNode *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.support.gui.SpoonModelTree
        <-> spoon.support.gui.SpoonTreeBuilder$1
    SpoonTreeBuilder$1
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.support.gui.SpoonTreeBuilder
spoon.support.processing
    SpoonletXmlHandler
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
        <-> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonResource
        --> spoon.processing.ProcessorProperties
        --> spoon.reflect.factory.Factory
        --> spoon.support.processing.XmlProcessorProperties
    XmlProcessorProperties
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Enum[] *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.processing.ProcessorProperties
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-> spoon.support.processing.XmlProcessorProperties$Loader
    XmlProcessorProperties$Loader
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Map *
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
        <-> spoon.support.processing.XmlProcessorProperties
spoon.support.reflect.code
    CtAnnotationFieldAccesImpl
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtFieldAccessImpl
    CtArrayAccessImpl
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
    CtAssertImpl
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtAssignmentImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtBinaryOperatorImpl
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
    CtBlockImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtBreakImpl
        --> java.lang.String *
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtCaseImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtCatchImpl
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
    CtCodeElementImpl
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtCodeSnippetExpressionImpl
        --> java.lang.String *
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtExpressionImpl
    CtCodeSnippetStatementImpl
        --> java.lang.String *
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtStatementImpl
    CtConditionalImpl
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
    CtContinueImpl
        --> java.lang.String *
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtDoImpl
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtLoopImpl
    CtExpressionImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtFieldAccessImpl
        --> spoon.reflect.code.CtFieldAccess
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
    CtForEachImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtLoopImpl
    CtForImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtIfImpl
        --> java.lang.Object *
        --> java.lang.Void *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtInvocationImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtLiteralImpl
        --> java.lang.Object *
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
    CtLocalVariableImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtLoopImpl
        --> java.lang.Object *
        --> java.lang.Void *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        --> spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtWhileImpl
    CtNewArrayImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtNewClassImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtOperatorAssignmentImpl
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtAssignmentImpl
    CtReturnImpl
        --> java.lang.Object *
        --> java.lang.Void *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtStatementImpl
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
    CtStatementListImpl
        <-- fr.inria.lille.repair.nopol.ifmetric.IfCountingInstrumentingProcessor
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtSuperAccessImpl
        --> spoon.reflect.code.CtSuperAccess
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtTargetedAccessImpl
    CtSwitchImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtSynchronizedImpl
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtTargetedAccessImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
    CtTargetedExpressionImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
    CtThisAccessImpl
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
    CtThrowImpl
        --> java.lang.Object *
        --> java.lang.Void *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
    CtTryImpl
        --> java.lang.Object *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtUnaryOperatorImpl
        <-- fr.inria.lille.repair.symbolic.spoon.ToJPFReplacer$2
        --> java.lang.String *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
    CtVariableAccessImpl
        --> java.lang.Object *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
    CtWhileImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtLoopImpl
spoon.support.reflect.cu
    CompilationUnitImpl
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
    CtLineElementComparator
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.util.Comparator *
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    ImportImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.reflect.cu.Import
        <-- spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    SourcePositionImpl
        --> java.io.File *
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.compiler.Environment
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
spoon.support.reflect.declaration
    CompilationUnitVirtualImpl
        --> java.lang.String *
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.cu.CompilationUnitImpl
    CtAnnotationImpl
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Proxy *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-> spoon.support.reflect.declaration.CtAnnotationImpl$1
        <-> spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        --> spoon.support.reflect.declaration.CtElementImpl
    CtAnnotationImpl$1
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.TreeMap *
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        <-> spoon.support.reflect.declaration.CtAnnotationImpl
    CtAnnotationImpl$AnnotationInvocationHandler
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Method *
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.reference.CtTypeReference
        <-> spoon.support.reflect.declaration.CtAnnotationImpl
    CtAnnotationTypeImpl
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtAnonymousExecutableImpl
        --> java.lang.Object *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
    CtClassImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtConstructorImpl
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtExecutableImpl
    CtElementImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Field *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ModelConsistencyChecker
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-> spoon.support.reflect.declaration.CtElementImpl$1
        <-> spoon.support.reflect.declaration.CtElementImpl$2
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        --> spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.support.util.RtHelper
        --> spoon.support.visitor.SignaturePrinter
        --> spoon.support.visitor.TypeReferenceScanner
    CtElementImpl$1
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        <-> spoon.support.reflect.declaration.CtElementImpl
    CtElementImpl$2
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtScanner
        <-> spoon.support.reflect.declaration.CtElementImpl
    CtEnumImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtClassImpl
    CtExecutableImpl
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtFieldImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtInterfaceImpl
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtTypeImpl
    CtMethodImpl
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.test.factory.FactoryTest$1MyCtMethod
        <-- spoon.test.filters.FilterTest
    CtNamedElementImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtReference
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtPackageImpl
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtParameterImpl
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtSimpleTypeImpl
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        --> spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        <-> spoon.support.reflect.declaration.CtSimpleTypeImpl$1NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
    CtSimpleTypeImpl$1NestedTypeScanner
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.CtScanner
        <-> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtTypeImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtTypeParameterImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
    CtUncomparableException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.reflect.declaration.CtElementImpl
spoon.support.reflect.eval
    ReturnException
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.reflect.code.CtReturn
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicWrappedException
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicInstance
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    VisitorPartialEvaluator
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator$1
        --> spoon.support.util.RtHelper
    VisitorPartialEvaluator$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.UnaryOperatorKind
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    VisitorSymbolicEvaluator
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.NoSuchFieldError *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.reflect.eval.ReturnException
        --> spoon.support.reflect.eval.SymbolicWrappedException
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator$1
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
    VisitorSymbolicEvaluator$1
        --> java.lang.NoSuchFieldError *
        --> java.lang.Object *
        --> spoon.reflect.code.BinaryOperatorKind
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    VisitorSymbolicEvaluator$BranchingPoint
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicInstance
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.support.reflect.reference
    CtArrayTypeReferenceImpl
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.Array *
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtExecutableReferenceImpl
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtTypeReference[] *
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.RtHelper
    CtFieldReferenceImpl
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.util.RtHelper
    CtLocalVariableReferenceImpl
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtPackageReferenceImpl
        --> java.lang.Package *
        --> java.lang.String *
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
    CtParameterReferenceImpl
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtReferenceImpl
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.visitor.SignaturePrinter
    CtTypeParameterReferenceImpl
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtTypeReferenceImpl
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> spoon.support.util.RtHelper
    CtVariableReferenceImpl
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
spoon.support.template
    DefaultParameterMatcher
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.support.template.ParameterMatcher
        <-- spoon.template.Parameter
        <-> spoon.template.TemplateMatcher
    ParameterMatcher
        --> java.lang.Object *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        <-- spoon.support.template.DefaultParameterMatcher
        <-> spoon.template.TemplateMatcher
    Parameters
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.template.Parameters$1
        --> spoon.support.template.Parameters$2
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.support.template.UndefinedParameterException
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        <-- spoon.template.Substitution
        --> spoon.template.Template
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
    Parameters$1
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.template.Parameters
        --> spoon.template.TemplateParameter
    Parameters$2
        --> java.lang.Object *
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.template.Parameters
        --> spoon.template.TemplateParameter
    SkipException
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> spoon.SpoonException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    SubstitutionVisitor
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.template.Parameters
        --> spoon.support.template.SkipException
        <-> spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.support.template.UndefinedParameterException
        <-- spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    SubstitutionVisitor$InheritanceSustitutionScanner
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.annotation.Annotation *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.VariableAccessFilter
        --> spoon.support.template.Parameters
        --> spoon.support.template.SkipException
        <-> spoon.support.template.SubstitutionVisitor
        --> spoon.template.Local
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    UndefinedParameterException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
spoon.support.util
    BasicCompilationUnit
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> org.eclipse.jdt.core.compiler.CharOperation
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit
        --> org.eclipse.jdt.internal.compiler.util.Util
    NotDirectlyModifiableList
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
    NotDirectlyModifiableSet
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.TreeSet *
    RtHelper
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Field[] *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Method[] *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        <-- spoon.processing.AbstractProcessor
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
    SortedList
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    Timer
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Stack *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
spoon.support.visitor
    ProcessingVisitor
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.ConcurrentModificationException *
        --> java.util.Iterator *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.Processor
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
    SignaturePrinter
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.apache.log4j.Logger
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
    TypeReferenceScanner
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.support.reflect.declaration.CtElementImpl
spoon.template
    BlockTemplate
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    ExpressionTemplate
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Local
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Target *
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
    Parameter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
        --> spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$3
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
    StatementTemplate
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Substitution
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        --> spoon.support.template.Parameters
        --> spoon.support.template.SubstitutionVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        --> spoon.template.Local
        --> spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        --> spoon.template.Template
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
    Template
        --> java.lang.Object *
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.SuperTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
    TemplateException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.template.TemplateMatcher
    TemplateMatcher
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalStateException *
        --> java.lang.InstantiationException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> org.apache.log4j.Logger
        --> spoon.Launcher
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.InvocationFilter
        <-> spoon.support.template.DefaultParameterMatcher
        <-> spoon.support.template.ParameterMatcher
        --> spoon.support.template.Parameters
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        --> spoon.template.TemplateException
        --> spoon.template.TemplateMatcher$1
        <-> spoon.template.TemplateMatcher$2
        <-> spoon.template.TemplateMatcher$3
        --> spoon.template.TemplateParameter
    TemplateMatcher$1
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        <-- spoon.template.TemplateMatcher
    TemplateMatcher$2
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtScanner
        <-> spoon.template.TemplateMatcher
    TemplateMatcher$3
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.visitor.CtScanner
        --> spoon.template.Parameter
        <-> spoon.template.TemplateMatcher
    TemplateParameter
        --> java.lang.Object *
        <-- spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$1
        <-- spoon.support.template.Parameters$2
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithFieldsAndMethods
    TypedBlockTemplateParameter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    TypedStatementListTemplateParameter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.List *
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
spoon.test
    SampleClass
        --> java.lang.Object *
        --> java.lang.Thread *
        <-> spoon.test.SampleClass$1
        <-> spoon.test.SampleClass$2
        <-> spoon.test.SampleClass$3
        <-> spoon.test.SampleClass$4
        <-> spoon.test.SampleClass$5
    SampleClass$1
        --> java.lang.Thread *
        <-> spoon.test.SampleClass
    SampleClass$2
        --> java.lang.Thread *
        <-> spoon.test.SampleClass
    SampleClass$3
        --> java.lang.Thread *
        <-> spoon.test.SampleClass
    SampleClass$4
        --> java.lang.Thread *
        <-> spoon.test.SampleClass
    SampleClass$5
        --> java.lang.Thread *
        <-> spoon.test.SampleClass
    TestUtils
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
        --> spoon.test.TestUtils$1
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    TestUtils$1
        --> com.martiansoftware.jsap.JSAPException
        --> spoon.Launcher
        --> spoon.reflect.factory.Factory
        <-- spoon.test.TestUtils
spoon.test.annotation
    AnnotParam
        --> java.lang.Object *
    AnnotationTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.Target *
        --> java.util.List *
        --> java.util.Map *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotation[] *
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.annotation.Bound
    Bound
        --> java.lang.Object *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.ElementType *
        --> java.lang.annotation.Target *
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Main
    Main
        --> java.lang.Object *
        --> spoon.test.annotation.Bound
    PersistenceProperty
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Annotation *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.RetentionPolicy *
        --> java.lang.annotation.Target *
spoon.test.api
    APITest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.Launcher
        <-> spoon.test.api.APITest$1
    APITest$1
        --> com.martiansoftware.jsap.JSAPException
        --> java.io.File *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.support.JavaOutputProcessor
        <-> spoon.test.api.APITest
        <-> spoon.test.api.APITest$1$1
    APITest$1$1
        --> java.lang.Object *
        --> java.util.List *
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.support.JavaOutputProcessor
        <-> spoon.test.api.APITest$1
spoon.test.arrays
    ArrayClass
        --> I[][] *
        --> java.lang.Object *
    ArraysTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.test.TestUtils
spoon.test.casts
    CastTest
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.control
    ControlTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
    DoWhile
        --> java.lang.Object *
    Fors
        --> java.lang.Object *
    Ifs
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.System *
        --> spoon.test.control.Ifs$Token
    Ifs$Token
        --> java.lang.Object *
        <-- spoon.test.control.Ifs
spoon.test.ctCase
    ClassWithSwitchExample
        --> java.lang.Object *
    SwitchCaseTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.enums
    EnumsTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.test.TestUtils
        --> spoon.test.enums.Regular
    OpCode
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-> spoon.test.enums.OpCode$1
        <-> spoon.test.enums.OpCode$2
        --> spoon.test.enums.Performable
    OpCode$1
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Stack *
        <-> spoon.test.enums.OpCode
    OpCode$2
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Stack *
        <-> spoon.test.enums.OpCode
    Performable
        --> java.lang.Object *
        --> java.util.Stack *
        <-- spoon.test.enums.OpCode
    Regular
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        <-- spoon.test.enums.EnumsTest
spoon.test.eval
    EvalTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.test.TestUtils
    ToEvaluate
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
spoon.test.exceptions
    ExceptionTest
        --> java.io.FileNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.InvalidClassPathException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
spoon.test.factory
    FactoryTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.compiler.Environment
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.support.StandardEnvironment
        --> spoon.test.TestUtils
        <-> spoon.test.factory.FactoryTest$1
        <-> spoon.test.factory.FactoryTest$1MyCtMethod
    FactoryTest$1
        --> spoon.reflect.declaration.CtMethod
        --> spoon.support.DefaultCoreFactory
        <-> spoon.test.factory.FactoryTest
        --> spoon.test.factory.FactoryTest$1MyCtMethod
    FactoryTest$1MyCtMethod
        --> spoon.support.reflect.declaration.CtMethodImpl
        <-> spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$1
spoon.test.fieldaccesses
    BCUBug20140402
        --> java.lang.Object *
    FieldAccessTest
        --> java.lang.Boolean *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
    InnerClassThisAccess
        --> java.lang.Object *
        <-> spoon.test.fieldaccesses.InnerClassThisAccess$1InnerClass
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
    InnerClassThisAccess$1InnerClass
        --> java.lang.Object *
        <-> spoon.test.fieldaccesses.InnerClassThisAccess
    InnerClassThisAccess$InnerClassForTest
        --> java.lang.Object *
        --> spoon.test.fieldaccesses.InnerClassThisAccess
    InternalSuperCall
        --> java.lang.Object *
        --> java.lang.String *
    Mouse
        --> java.lang.Object *
    TargetedAccessPosition
        --> java.lang.Object *
spoon.test.filters
    FilterTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.CompositeFilter
        --> spoon.reflect.visitor.filter.FilteringOperator
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.RegexFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.test.TestUtils
    Foo
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.System *
spoon.test.generics
    ACLass
        --> java.lang.Object *
        <-- spoon.test.generics.BugCollection
    BugCollection
        --> java.lang.Object *
        --> java.util.Map$Entry *
        --> spoon.test.generics.ACLass
        <-- spoon.test.generics.BugCollection$Foo
    BugCollection$Foo
        --> java.lang.Object *
        --> java.lang.UnsupportedOperationException *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.test.generics.BugCollection
    ClassThatBindsAGenericType
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.util.ArrayList *
    ClassThatDefinesANewTypeArgument
        --> java.lang.Object *
    ComparableComparator
        --> java.lang.Object *
    ComparableComparatorBug
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
    GenericConstructor
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
    GenericMethodCallWithExtend
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
    GenericsTest
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.compiler.Environment
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.StandardEnvironment
        --> spoon.test.TestUtils
    InstanceOfMapEntryGeneric
        --> java.lang.Object *
        --> java.util.Map$Entry *
    SimilarSignatureMethodes
        --> java.lang.Object *
        --> java.lang.Throwable *
    Tree
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.util.ArrayList *
spoon.test.initializers
    InitializerTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
    InstanceInitializers
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        <-> spoon.test.initializers.InstanceInitializers$1
    InstanceInitializers$1
        --> java.lang.Double *
        --> java.lang.Object *
        --> java.util.ArrayList *
        <-> spoon.test.initializers.InstanceInitializers
    InternalClassStaticFieldInit
        --> java.lang.Object *
    InternalClassStaticFieldInit$InternalClass
        --> java.lang.Object *
        --> java.lang.String *
spoon.test.intercession
    IntercessionTest
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
    RemoveTest
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
spoon.test.intercession.insertBefore
    InsertBeforeExample
        --> java.lang.Object *
    InsertBeforeTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
spoon.test.limits
    MultipleInternalClass
        --> java.lang.Object *
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
    StaticClassAnon
        --> java.lang.Object *
        <-- spoon.test.limits.StaticClassAnon$1StaticIntern
    StaticClassAnon$1StaticIntern
        --> java.lang.Object *
        --> spoon.test.limits.StaticClassAnon
    StaticConstructorAccessOnInstance
        --> java.lang.Class *
        --> java.lang.Object *
        --> spoon.test.limits.utils.ContainInternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
    StaticFieldAccesOnInstance
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
spoon.test.limits.utils
    ContainInternalClass
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-> spoon.test.limits.utils.ContainInternalClass$1
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass
    ContainInternalClass$1
        --> java.lang.Object *
        --> java.lang.Runnable *
        <-> spoon.test.limits.utils.ContainInternalClass
    ContainInternalClass$InternalClass
        --> java.lang.Object *
        <-- spoon.test.limits.MultipleInternalClass
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        --> spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
        <-- spoon.test.limits.utils.InternalTest
    ContainInternalClass$InternalClass$InsideInternalClass
        --> java.lang.Object *
        <-- spoon.test.limits.MultipleInternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
        <-- spoon.test.limits.utils.InternalTest
    InternalTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
spoon.test.main
    MainTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> org.junit.Test
        --> spoon.Launcher
spoon.test.model
    BlockTest
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
    SwitchCaseTest
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.parent
    Foo
        --> java.lang.Object *
    ParentTest
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
spoon.test.prettyprinter
    DefaultPrettyPrinterDependency
        --> java.lang.Object *
    DefaultPrettyPrinterTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.TypeFilter
    LinesTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
    PrinterTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
    Validation
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.SecurityManager *
        --> java.lang.String *
        --> java.lang.System *
        --> java.security.AccessController *
        --> java.security.PrivilegedAction *
        --> spoon.test.prettyprinter.Validation$1
    Validation$1
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.security.PrivilegedAction *
        <-- spoon.test.prettyprinter.Validation
spoon.test.processing
    ArrayResizeProcessor
        --> spoon.processing.AbstractProcessor
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.test.template.ArrayResizeTemplate
    ProcessingTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
    SampleForInsertBefore
        --> java.lang.Object *
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore$1
        <-> spoon.test.processing.SampleForInsertBefore$2
        <-> spoon.test.processing.SampleForInsertBefore$3
        <-> spoon.test.processing.SampleForInsertBefore$4
        <-> spoon.test.processing.SampleForInsertBefore$5
    SampleForInsertBefore$1
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore
    SampleForInsertBefore$2
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore
    SampleForInsertBefore$3
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore
    SampleForInsertBefore$4
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore
    SampleForInsertBefore$5
        --> java.lang.Thread *
        <-> spoon.test.processing.SampleForInsertBefore
    TestProcessor
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.util.Collection *
        --> java.util.Date *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.test.template.TemplateWithConstructor
spoon.test.replace
    Bar
        --> java.lang.Object *
    Foo
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.System *
    ReplaceTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Before
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
spoon.test.secondaryclasses
    AnonymousClass
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> javax.swing.JButton *
        <-> spoon.test.secondaryclasses.AnonymousClass$1
        <-> spoon.test.secondaryclasses.AnonymousClass$2
    AnonymousClass$1
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.JOptionPane *
        <-> spoon.test.secondaryclasses.AnonymousClass
    AnonymousClass$2
        --> java.lang.Object *
        <-> spoon.test.secondaryclasses.AnonymousClass
        --> spoon.test.secondaryclasses.AnonymousClass$I
    AnonymousClass$I
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.AnonymousClass$2
        <-- spoon.test.secondaryclasses.ClassesTest
    ClassWithInternalPublicClassOrInterf
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
    ClassWithInternalPublicClassOrInterf$InternalClass
        --> java.lang.Object *
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.Test
    ClassWithInternalPublicClassOrInterf$InternalInterf
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.Test
    ClassesTest
        --> java.awt.event.ActionListener *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.compiler.Environment
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.secondaryclasses.AnonymousClass$I
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        --> spoon.test.secondaryclasses.PrivateInnerClasses
    E
        --> java.lang.Class *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
    I
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.Secondary
    K
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.Secondary
    PrivateInnerClasses
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        <-- spoon.test.secondaryclasses.ClassesTest
        <-> spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
    PrivateInnerClasses$DataClassComparator
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        <-> spoon.test.secondaryclasses.PrivateInnerClasses
    Secondary
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Map *
        --> spoon.test.secondaryclasses.I
        --> spoon.test.secondaryclasses.K
    Test
        --> java.lang.Object *
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalInterf
    TopLevel
        --> java.lang.Object *
        <-- spoon.test.secondaryclasses.TopLevel$InnerClass
    TopLevel$InnerClass
        --> java.lang.Object *
        --> java.util.Vector *
        --> spoon.test.secondaryclasses.TopLevel
spoon.test.snippets
    SnippetTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
spoon.test.sourcePosition
    SourcePositionTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.strings
    Main
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
    StringLiteralTest
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
    StringTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.template
    ArrayResizeTemplate
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
        <-- spoon.test.processing.ArrayResizeProcessor
        --> spoon.test.template._TargetType_
        --> spoon.test.template._TargetType_[][] *
        --> spoon.test.template._Type_
    C1
        --> java.lang.Object *
        <-- spoon.test.template.TemplateTest
    SubClass
        --> spoon.test.template.SuperClass
        <-- spoon.test.template.TemplateTest
    SubTemplate
        --> spoon.test.template.SuperTemplate
        <-- spoon.test.template.TemplateTest
    SuperClass
        --> java.lang.Object *
        <-- spoon.test.template.SubClass
        <-- spoon.test.template.TemplateTest
    SuperTemplate
        --> java.lang.Object *
        --> spoon.template.Template
        <-- spoon.test.template.SubTemplate
        <-- spoon.test.template.TemplateTest
    TemplateTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Date *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ModelConsistencyChecker
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
        --> spoon.test.template.C1
        --> spoon.test.template.SubClass
        --> spoon.test.template.SubTemplate
        --> spoon.test.template.SuperClass
        --> spoon.test.template.SuperTemplate
        --> spoon.test.template.TemplateWithConstructor
        --> spoon.test.template.TemplateWithFieldsAndMethods
    TemplateWithConstructor
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
    TemplateWithFieldsAndMethods
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
        <-- spoon.test.template.TemplateTest
    _Interf_
        --> java.lang.Object *
    _TargetType_
        --> java.lang.Object *
        <-- spoon.test.template.ArrayResizeTemplate
    _TargetType_[][] *
        <-- spoon.test.template.ArrayResizeTemplate
    _Type_
        --> java.lang.Object *
        <-- spoon.test.template.ArrayResizeTemplate
spoon.test.trycatch
    Main
        --> java.io.BufferedReader *
        --> java.io.FileReader *
        --> java.io.PrintStream *
        --> java.io.Reader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
    TryCatchTest
        --> java.lang.Class *
        --> java.lang.Error *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
spoon.test.visibility
    MethodeWithNonAccessibleTypeArgument
        --> java.lang.Object *
        <-- spoon.test.visibility.VisibilityTest
        --> spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
        --> spoon.test.visibility.packageprotected.NonAccessibleInterf
    VisibilityTest
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> org.junit.Assert
        --> org.junit.Test
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.test.TestUtils
        --> spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        --> spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
spoon.test.visibility.packageprotected
    AccessibleClassFromNonAccessibleInterf
        --> java.lang.Object *
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        --> spoon.test.visibility.packageprotected.NonAccessibleInterf
    NonAccessibleInterf
        --> java.lang.Object *
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
sun.misc *
    UUEncoder *
        <-- org.apache.tools.ant.taskdefs.email.UUMailer
xxl.java.compiler
    BytecodeClassLoader
        --> B[] *
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        --> java.io.ByteArrayInputStream *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.Map *
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.StringLibrary
    BytecodeClassLoaderBuilder
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.net.URL *
        --> java.util.Map *
        --> xxl.java.compiler.BytecodeClassLoader
        --> xxl.java.compiler.DynamicClassCompiler
        --> xxl.java.container.classic.MetaMap
    DynamicClassCompiler
        --> B[] *
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        --> java.io.Writer *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URL *
        --> java.nio.charset.Charset *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        --> java.util.Set *
        --> javax.tools.Diagnostic *
        --> javax.tools.DiagnosticCollector *
        --> javax.tools.DiagnosticListener *
        --> javax.tools.JavaCompiler *
        --> javax.tools.JavaCompiler$CompilationTask *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.StandardJavaFileManager *
        --> javax.tools.StandardLocation *
        --> javax.tools.ToolProvider *
        --> org.slf4j.Logger *
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        --> xxl.java.compiler.DynamicCompilationException
        --> xxl.java.compiler.VirtualClassFileObject
        --> xxl.java.compiler.VirtualFileObjectManager
        --> xxl.java.compiler.VirtualSourceFileObject
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.JavaLibrary
        --> xxl.java.library.LoggerLibrary
        --> xxl.java.library.StringLibrary
    DynamicCompilationException
        --> java.lang.IllegalStateException *
        --> java.lang.String *
        <-- xxl.java.compiler.DynamicClassCompiler
    JarPackage
        --> B[] *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.OutputStream *
        --> java.lang.Character *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.jar.JarOutputStream *
        --> java.util.zip.ZipEntry *
        --> xxl.java.library.JavaLibrary
    VirtualClassFileObject
        --> java.io.ByteArrayInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.net.URI *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.SimpleJavaFileObject *
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        --> xxl.java.library.FileLibrary
    VirtualFileObjectManager
        --> B[] *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URI *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> javax.tools.FileObject *
        --> javax.tools.ForwardingJavaFileManager *
        --> javax.tools.JavaFileManager *
        --> javax.tools.JavaFileManager$Location *
        --> javax.tools.JavaFileObject *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.StandardLocation *
        <-- xxl.java.compiler.DynamicClassCompiler
        --> xxl.java.compiler.VirtualClassFileObject
        --> xxl.java.compiler.VirtualSourceFileObject
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.FileLibrary
    VirtualSourceFileObject
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.net.URI *
        --> javax.tools.JavaFileObject$Kind *
        --> javax.tools.SimpleJavaFileObject *
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        --> xxl.java.library.FileLibrary
xxl.java.container.classic
    MetaCollection
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Object[] *
        --> java.lang.SafeVarargs *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Enumeration *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.NoSuchElementException *
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-> xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.various.Bag
        --> xxl.java.library.ClassLibrary
        <-- xxl.java.library.NumberLibrary
    MetaList
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.SpoonedProject
        <-- fr.inria.lille.commons.spoon.collectable.CompoundProcessor
        <-- fr.inria.lille.commons.spoon.util.SpoonLoopLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.CodeLine
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.SynthesisScriptBuilder
        <-- fr.inria.lille.commons.synthesis.SynthesisTheoriesBuilder
        <-- fr.inria.lille.commons.synthesis.expression.Expression
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibParser
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.synthesis.smt.constraint.AcyclicityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConsistencyConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.Constraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LibraryConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.IndexedLocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariable
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.LocationVariableContainer
        <-- fr.inria.lille.commons.synthesis.smt.locationVariables.OperatorLocationVariable
        <-- fr.inria.lille.commons.trace.RuntimeValuesInstrumenter
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.TestClassesFinder
        <-- fr.inria.lille.repair.infinitel.loop.While
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.LinkedList *
        --> java.util.List *
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-> xxl.java.container.classic.MetaCollection
        <-> xxl.java.container.classic.MetaList$1
        <-> xxl.java.container.classic.MetaList$2
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.junit.CompoundResult
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        <-- xxl.java.library.ClassLibrary
        <-- xxl.java.library.JavaLibrary
        --> xxl.java.library.NumberLibrary
        --> xxl.java.support.Factory
    MetaList$1
        --> java.lang.Object *
        --> java.util.List *
        <-> xxl.java.container.classic.MetaList
        --> xxl.java.support.Factory
    MetaList$2
        --> java.lang.Object *
        --> java.util.List *
        <-> xxl.java.container.classic.MetaList
        --> xxl.java.support.Factory
    MetaMap
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.synthesis.CodeGenesis
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLib
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopDoorkeeper
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.ProjectMonitorImplanter
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.IdentityHashMap *
        --> java.util.Iterator *
        --> java.util.LinkedHashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.BytecodeClassLoaderBuilder
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.VirtualFileObjectManager
        --> xxl.java.container.classic.MetaMap$1
        <-> xxl.java.container.classic.MetaMap$2
        <-> xxl.java.container.classic.MetaMap$3
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Bag
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.container.various.NullBag
        <-- xxl.java.container.various.Table
        --> xxl.java.library.ClassLibrary
        <-- xxl.java.library.LoggerLibrary
        --> xxl.java.library.NumberLibrary
        <-- xxl.java.library.StringLibrary
        --> xxl.java.support.Factory
        --> xxl.java.support.Function
        <-- xxl.java.support.Singleton
    MetaMap$1
        --> java.lang.Object *
        --> java.util.Map *
        <-- xxl.java.container.classic.MetaMap
        --> xxl.java.support.Function
    MetaMap$2
        --> java.lang.Object *
        --> java.util.Map *
        <-> xxl.java.container.classic.MetaMap
        --> xxl.java.support.Factory
    MetaMap$3
        --> java.lang.Object *
        --> java.util.Map *
        <-> xxl.java.container.classic.MetaMap
        --> xxl.java.support.Factory
    MetaSet
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.spoon.collectable.ReachableVariableVisitor
        <-- fr.inria.lille.commons.spoon.collectable.SubconditionVisitor
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.synthesis.smt.constraint.CompoundConstraint
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> java.util.HashSet *
        --> java.util.LinkedHashSet *
        --> java.util.List *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaCollection
        <-> xxl.java.container.classic.MetaSet$1
        <-> xxl.java.container.classic.MetaSet$2
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.junit.TestCase
        <-- xxl.java.junit.TestCasesListener
        --> xxl.java.library.NumberLibrary
        --> xxl.java.support.Factory
    MetaSet$1
        --> java.lang.Object *
        --> java.util.Set *
        <-> xxl.java.container.classic.MetaSet
        --> xxl.java.support.Factory
    MetaSet$2
        --> java.lang.Object *
        --> java.util.Set *
        <-> xxl.java.container.classic.MetaSet
        --> xxl.java.support.Factory
xxl.java.container.map
    DoubleMap
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.map.NeoMap
        --> xxl.java.support.Factory
    Multimap
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.smt.constraint.ConnectivityConstraint
        <-- fr.inria.lille.commons.synthesis.smt.constraint.LineBoundConstraint
        --> java.lang.Object *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.IdentityHashMap *
        --> java.util.Iterator *
        --> java.util.LinkedHashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.container.map.NeoMap
        --> xxl.java.support.Factory
    NeoMap
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaMap
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        --> xxl.java.support.Factory
xxl.java.container.various
    Bag
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$12
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$13
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$14
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$15
        <-- fr.inria.lille.repair.infinitel.loop.implant.NullLoopStatistics
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IndexOutOfBoundsException *
        --> java.lang.Integer *
        --> java.lang.Math *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.lang.String *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaMap
        <-- xxl.java.container.various.MappingBag
        <-> xxl.java.container.various.NullBag
    MappingBag
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> java.lang.Object *
        --> java.util.Iterator *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.container.various.Bag
        --> xxl.java.support.Function
    NullBag
        --> java.util.Map *
        --> xxl.java.container.classic.MetaMap
        <-> xxl.java.container.various.Bag
    Pair
        <-- fr.inria.lille.commons.trace.collector.ArrayCollector
        <-- fr.inria.lille.commons.trace.collector.CharSequenceCollector
        <-- fr.inria.lille.commons.trace.collector.CollectionCollector
        <-- fr.inria.lille.commons.trace.collector.DictionaryCollector
        <-- fr.inria.lille.commons.trace.collector.EnumerationCollector
        <-- fr.inria.lille.commons.trace.collector.IteratorCollector
        <-- fr.inria.lille.commons.trace.collector.MapCollector
        <-- fr.inria.lille.commons.trace.collector.PrimitiveTypeCollector
        <-- fr.inria.lille.commons.trace.collector.ValueCollector
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> xxl.java.library.ClassLibrary
        <-- xxl.java.support.RangeMapper
    Table
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaMap
        --> xxl.java.library.JavaLibrary
        --> xxl.java.library.StringLibrary
        --> xxl.java.support.Factory
xxl.java.junit
    CompoundResult
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        --> java.lang.Class *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> org.junit.runner.Result
        --> xxl.java.container.classic.MetaList
        <-- xxl.java.junit.TestSuiteExecution
    CustomClassLoaderThreadFactory
        <-- fr.inria.lille.repair.TestClassesFinder
        --> java.lang.ClassLoader *
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.Thread *
        --> java.util.concurrent.ThreadFactory *
        <-- xxl.java.junit.TestSuiteExecution
    JUnitRunner
        --> com.google.common.base.Preconditions *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Class[] *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.String[] *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.concurrent.Callable *
        --> javax.annotation.Nonnull *
        --> org.junit.runner.JUnitCore
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> xxl.java.container.classic.MetaList
        <-- xxl.java.junit.TestSuiteExecution
        --> xxl.java.library.ClassLibrary
    JUnitSingleTestRunner
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.util.concurrent.Callable *
        --> org.junit.runner.JUnitCore
        --> org.junit.runner.Request
        --> org.junit.runner.Result
        --> org.junit.runner.notification.RunListener
        --> xxl.java.junit.TestCase
        <-- xxl.java.junit.TestSuiteExecution
    NullRunListener
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        --> java.lang.Exception *
        --> org.junit.runner.Description
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        <-- xxl.java.junit.TestSuiteExecution
    TestCase
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Set *
        --> xxl.java.container.classic.MetaSet
        <-- xxl.java.junit.JUnitSingleTestRunner
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
    TestCasesListener
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestListener
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.StackTraceElement *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Set *
        --> org.junit.runner.Description
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        --> org.slf4j.Logger *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.container.classic.MetaSet
        --> xxl.java.junit.TestCase
        --> xxl.java.library.LoggerLibrary
    TestSuiteExecution
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.NoPol
        <-- fr.inria.lille.repair.nopol.ifmetric.IfMetric
        <-- fr.inria.lille.repair.nopol.patch.TestPatch
        <-- fr.inria.lille.repair.nopol.synth.ConstraintModelBuilder
        <-- fr.inria.lille.repair.symbolic.SymbolicFixer
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.InterruptedException *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.concurrent.Callable *
        --> java.util.concurrent.ExecutionException *
        --> java.util.concurrent.ExecutorService *
        --> java.util.concurrent.Executors *
        --> java.util.concurrent.Future *
        --> java.util.concurrent.ThreadFactory *
        --> java.util.concurrent.TimeUnit *
        --> java.util.concurrent.TimeoutException *
        --> org.junit.runner.Description
        --> org.junit.runner.Result
        --> org.junit.runner.notification.Failure
        --> org.junit.runner.notification.RunListener
        --> org.slf4j.Logger *
        --> xxl.java.container.classic.MetaList
        --> xxl.java.junit.CompoundResult
        --> xxl.java.junit.CustomClassLoaderThreadFactory
        --> xxl.java.junit.JUnitRunner
        --> xxl.java.junit.JUnitSingleTestRunner
        --> xxl.java.junit.NullRunListener
        --> xxl.java.junit.TestCase
        --> xxl.java.library.LoggerLibrary
        --> xxl.java.support.Singleton
xxl.java.library
    ClassLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonElementLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonReferenceLibrary
        <-- fr.inria.lille.commons.spoon.util.SpoonStatementLibrary
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.expression.ObjectTemplate
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        --> java.lang.Class *
        --> java.lang.Class[] *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        <-- xxl.java.container.classic.MetaCollection
        --> xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.various.Pair
        <-- xxl.java.junit.JUnitRunner
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.support.InvocationStopwatch
    FileLibrary
        <-- fr.inria.lille.commons.spoon.filter.CodeSnippetFilter
        <-- fr.inria.lille.commons.spoon.filter.LocationFilter
        <-- fr.inria.lille.commons.synthesis.smt.solver.SolverFactory
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.nopol.SourceLocation
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalProcessor
        <-- fr.inria.lille.repair.nopol.spoon.InitialisationProcessor
        <-- fr.inria.lille.repair.nopol.synth.BugKindDetector
        --> java.io.File *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.net.MalformedURLException *
        --> java.net.URI *
        --> java.net.URL *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        <-- xxl.java.compiler.VirtualClassFileObject
        <-- xxl.java.compiler.VirtualFileObjectManager
        <-- xxl.java.compiler.VirtualSourceFileObject
        <-- xxl.java.library.JavaLibrary
    JavaLibrary
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.util.SpoonModelLibrary
        <-- fr.inria.lille.repair.Main
        <-- fr.inria.lille.repair.ProjectReference
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.net.URL[] *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        <-- xxl.java.compiler.DynamicClassCompiler
        <-- xxl.java.compiler.JarPackage
        --> xxl.java.container.classic.MetaList
        <-- xxl.java.container.various.Table
        --> xxl.java.library.ClassLibrary
        --> xxl.java.library.FileLibrary
        <-- xxl.java.library.LoggerLibrary
        --> xxl.java.library.StringLibrary
    LoggerLibrary
        <-- fr.inria.lille.commons.spoon.SpoonedFile
        <-- fr.inria.lille.commons.spoon.collectable.CollectableValueFinder
        <-- fr.inria.lille.commons.synthesis.ConstraintBasedSynthesis
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibEqualVisitor
        <-- fr.inria.lille.commons.trace.SpecificationTestCasesListener
        <-- fr.inria.lille.repair.infinitel.InfiniteLoopFixer
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.symbolic.Symbolic
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> org.slf4j.Logger *
        --> org.slf4j.LoggerFactory *
        <-- xxl.java.compiler.DynamicClassCompiler
        --> xxl.java.container.classic.MetaMap
        <-- xxl.java.junit.TestCasesListener
        <-- xxl.java.junit.TestSuiteExecution
        --> xxl.java.library.JavaLibrary
        --> xxl.java.library.StringLibrary
        <-- xxl.java.support.InvocationStopwatch
    NumberLibrary
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Math *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.List *
        --> xxl.java.container.classic.MetaCollection
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaSet
        --> xxl.java.library.NumberLibrary$1
        --> xxl.java.support.Function
    NumberLibrary$1
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.lang.String *
        <-- xxl.java.library.NumberLibrary
        --> xxl.java.support.Function
    ObjectLibrary
        --> java.lang.Object *
        --> xxl.java.library.ObjectLibrary$1
        --> xxl.java.library.ObjectLibrary$2
        --> xxl.java.library.ObjectLibrary$3
        <-- xxl.java.library.StringLibrary
        --> xxl.java.support.Function
    ObjectLibrary$1
        --> java.lang.Object *
        --> java.lang.String *
        <-- xxl.java.library.ObjectLibrary
        --> xxl.java.support.Function
    ObjectLibrary$2
        --> java.lang.Object *
        <-- xxl.java.library.ObjectLibrary
        --> xxl.java.support.Function
    ObjectLibrary$3
        --> java.lang.Object *
        <-- xxl.java.library.ObjectLibrary
        --> xxl.java.support.Function
    StringLibrary
        <-- fr.inria.lille.commons.synthesis.smt.ObjectToExpr
        <-- fr.inria.lille.commons.synthesis.smt.SMTLibScriptSolution
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        --> java.lang.Character *
        --> java.lang.Math *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.math.BigDecimal *
        --> java.text.DecimalFormat *
        --> java.text.DecimalFormatSymbols *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.Locale *
        --> java.util.Map *
        <-- xxl.java.compiler.BytecodeClassLoader
        <-- xxl.java.compiler.DynamicClassCompiler
        --> xxl.java.container.classic.MetaMap
        <-- xxl.java.container.various.Table
        <-- xxl.java.library.JavaLibrary
        <-- xxl.java.library.LoggerLibrary
        --> xxl.java.library.ObjectLibrary
        --> xxl.java.support.Function
xxl.java.support
    Factory
        --> java.lang.Object *
        <-- xxl.java.container.classic.MetaList
        <-- xxl.java.container.classic.MetaList$1
        <-- xxl.java.container.classic.MetaList$2
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaMap$2
        <-- xxl.java.container.classic.MetaMap$3
        <-- xxl.java.container.classic.MetaSet
        <-- xxl.java.container.classic.MetaSet$1
        <-- xxl.java.container.classic.MetaSet$2
        <-- xxl.java.container.map.DoubleMap
        <-- xxl.java.container.map.Multimap
        <-- xxl.java.container.map.NeoMap
        <-- xxl.java.container.various.Table
    Function
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        <-- fr.inria.lille.repair.infinitel.loop.examination.LoopTestResult
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$1
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$10
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$11
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$12
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$13
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$14
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$15
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$2
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$3
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$4
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$5
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$6
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$7
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$8
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopStatistics$9
        --> java.lang.Object *
        <-- xxl.java.container.classic.MetaMap
        <-- xxl.java.container.classic.MetaMap$1
        <-- xxl.java.container.various.MappingBag
        <-- xxl.java.library.NumberLibrary
        <-- xxl.java.library.NumberLibrary$1
        <-- xxl.java.library.ObjectLibrary
        <-- xxl.java.library.ObjectLibrary$1
        <-- xxl.java.library.ObjectLibrary$2
        <-- xxl.java.library.ObjectLibrary$3
        <-- xxl.java.library.StringLibrary
        <-- xxl.java.support.RangeMapper
    GlobalToggle
        <-- fr.inria.lille.commons.trace.RuntimeValues
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopMonitor
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.Thread *
        --> xxl.java.support.Lockable
    InvocationStopwatch
        --> java.lang.Class *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.reflect.Method *
        --> org.slf4j.Logger *
        --> xxl.java.library.ClassLibrary
        --> xxl.java.library.LoggerLibrary
    Lockable
        --> java.lang.Object *
        --> java.lang.String *
        <-- xxl.java.support.GlobalToggle
    Observable
        --> java.lang.Object *
        --> java.util.Collection *
        --> xxl.java.support.Observer
    Observer
        --> java.lang.Object *
        <-- xxl.java.support.Observable
    OperatingSystem
        --> java.io.PrintStream *
        --> java.lang.Boolean *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuilder *
        --> java.lang.System *
    RangeMapper
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician$1
        --> java.lang.Double *
        --> java.lang.Integer *
        --> java.lang.Math *
        --> java.lang.Object *
        --> xxl.java.container.various.Pair
        --> xxl.java.support.Function
    Singleton
        <-- fr.inria.lille.repair.infinitel.Infinitel
        <-- fr.inria.lille.repair.infinitel.InfinitelDiagnostician
        <-- fr.inria.lille.repair.infinitel.loop.implant.LoopInstrumenter
        <-- fr.inria.lille.repair.infinitel.loop.implant.MonitoringTestExecutor
        <-- fr.inria.lille.repair.nopol.spoon.ConditionalLoggingInstrumenter
        <-- fr.inria.lille.repair.symbolic.Symbolic
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Method *
        --> java.util.Map *
        --> xxl.java.container.classic.MetaMap
        <-- xxl.java.junit.TestSuiteExecution
