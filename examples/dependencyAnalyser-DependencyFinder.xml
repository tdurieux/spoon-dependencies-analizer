<?xml version="1.0" encoding="utf-8" ?>

<!DOCTYPE dependencies SYSTEM "http://depfind.sourceforge.net/dtd/dependencies.dtd">

<dependencies>
    <package confirmed="no">
        <name>com.martiansoftware.jsap</name>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.FlaggedOption</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.FlaggedOption.FlaggedOption(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, char, java.lang.String,
                    java.lang.String)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.FlaggedOption.setList(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.FlaggedOption.setListSeparator(char)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.JSAP</name>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAP.NO_DEFAULT</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAP.STRING_PARSER</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.JSAPException</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.JSAPResult</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAPResult.getBoolean(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAPResult.getString(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAPResult.getStringArray(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.JSAPResult.success()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.Parameter</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.QualifiedSwitch</name>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.QualifiedSwitch.QualifiedSwitch(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, char, java.lang.String,
                    java.lang.String)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.SimpleJSAP</name>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.SimpleJSAP.SimpleJSAP(java.lang.String, java.lang.String,
                    com.martiansoftware.jsap.Parameter[])
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.SimpleJSAP.getHelp()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.SimpleJSAP.getUsage()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.SimpleJSAP.parse(java.lang.String[])</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.StringParser</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
        </class>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.UnflaggedOption</name>
            <feature confirmed="no">
                <name>com.martiansoftware.jsap.UnflaggedOption.UnflaggedOption(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, boolean, java.lang.String)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>com.martiansoftware.jsap.stringparsers</name>
        <class confirmed="no">
            <name>com.martiansoftware.jsap.stringparsers.StringStringParser</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.config
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.config
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.config
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreExternalDependences
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreRegex
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.level
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.outputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.verbose
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreRegex
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.classPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getClassPath()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setClassPath(java.lang.String)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getClassPath()</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.classPath
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getIgnoreRegex()</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreRegex
                </outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getLevel()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.level
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutput()</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.output
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutputFormat()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.outputFormat
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getProjectPath()</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.projectPath
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreExternalDependences</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isIgnoreExternalDependences()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setIgnoreExternalDependences(boolean)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreRegex</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getIgnoreRegex()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isIgnoreExternalDependences()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreExternalDependences
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isVerbose()</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.verbose
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.level</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getLevel()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.output</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutput()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutput(java.lang.String)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.outputFormat</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutputFormat()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutputFormat(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.projectPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getProjectPath()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setProjectPath(java.lang.String)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setClassPath(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.classPath
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setIgnoreExternalDependences(boolean)</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreExternalDependences
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.level
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutput(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.output
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutputFormat(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.outputFormat
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setProjectPath(java.lang.String)</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.projectPath
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setVerbose(boolean)</name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.verbose
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig.verbose</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isVerbose()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setVerbose(boolean)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getLevel()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.level</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.AnalyzerConfig$Level(java.lang.String,
                    int)
                </name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static
                    {}
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static
                    {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ENUM$VALUES</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static
                    {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.values()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static
                    {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ordinal()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static {}</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.AnalyzerConfig$Level(java.lang.String, int)
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ENUM$VALUES
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.values()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ENUM$VALUES
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int,
                    java.lang.Object, int, int)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutputFormat()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.outputFormat
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutputFormat(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.AnalyzerConfig$OutputFormat(java.lang.String,
                    int)
                </name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.DOT</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ENUM$VALUES</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.values()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ordinal()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.AnalyzerConfig$OutputFormat(java.lang.String,
                    int)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.DOT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ENUM$VALUES
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.values()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ENUM$VALUES
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int,
                    java.lang.Object, int, int)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                github.tdurieux.dependencyAnalyzer.DependencyAnalizer)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
            </inbound>
            <inbound type="feature" confirmed="yes">dependencyAnalyzer</inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ordinal()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.values()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level
                </outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getClassPath()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.config
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.factory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.projectPath
                </outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.add(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">spoon.Launcher.Launcher()</outbound>
                <outbound type="feature" confirmed="no">spoon.Launcher.addInputResource(spoon.compiler.SpoonResource)
                </outbound>
                <outbound type="feature" confirmed="no">spoon.Launcher.createCompiler(spoon.reflect.factory.Factory)
                </outbound>
                <outbound type="feature" confirmed="no">spoon.Launcher.getFactory()</outbound>
                <outbound type="feature" confirmed="no">spoon.Launcher.run(spoon.compiler.SpoonCompiler,
                    java.lang.String, boolean, spoon.OutputType, java.io.File, java.util.List, boolean, java.io.File,
                    boolean, java.lang.String, java.lang.String, java.util.List, java.util.List)
                </outbound>
                <outbound type="class" confirmed="no">spoon.OutputType</outbound>
                <outbound type="feature" confirmed="no">spoon.OutputType.NO_OUTPUT</outbound>
                <outbound type="class" confirmed="no">spoon.compiler.Environment</outbound>
                <outbound type="feature" confirmed="no">spoon.compiler.Environment.setNoClasspath(boolean)</outbound>
                <outbound type="class" confirmed="no">spoon.compiler.SpoonCompiler</outbound>
                <outbound type="feature" confirmed="no">spoon.compiler.SpoonCompiler.getFactory()</outbound>
                <outbound type="class" confirmed="no">spoon.compiler.SpoonResource</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.factory.Factory</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.factory.Factory.getEnvironment()</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.support.compiler.FileSystemFolder.FileSystemFolder(java.io.File)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.config</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.util.ArrayList</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.list(java.util.Enumeration)</outbound>
                <outbound type="class" confirmed="no">java.util.Enumeration</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">org.apache.log4j.Level</outbound>
                <outbound type="feature" confirmed="no">org.apache.log4j.Level.OFF</outbound>
                <outbound type="feature" confirmed="no">org.apache.log4j.LogManager.getCurrentLoggers()</outbound>
                <outbound type="feature" confirmed="no">org.apache.log4j.LogManager.getRootLogger()</outbound>
                <outbound type="class" confirmed="no">org.apache.log4j.Logger</outbound>
                <outbound type="feature" confirmed="no">org.apache.log4j.Logger.setLevel(org.apache.log4j.Level)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.factory</name>
                <outbound type="class" confirmed="no">spoon.reflect.factory.Factory</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.projectPath</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.ordinal()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getLevel()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isVerbose()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.config
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.factory
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.ClassDependencyFactory()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.ClassDependencyLocationFactory()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.PackageDependencyFactory()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.PackageDependencyLocationFactory()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.processing.ProcessingManager.addProcessor(spoon.processing.Processor)
                </outbound>
                <outbound type="feature" confirmed="no">
                    spoon.processing.ProcessingManager.process(java.util.Collection)
                </outbound>
                <outbound type="class" confirmed="no">spoon.processing.Processor</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.factory.ClassFactory</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.factory.ClassFactory.getAll()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.factory.Factory</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.factory.Factory.Class()</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.support.QueueProcessingManager.QueueProcessingManager(spoon.reflect.factory.Factory)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.graph</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.graph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.dependencyGraph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencyGraph()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.isToIgnore(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation.getQualifiedName()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes
                </outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes
                </outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap(java.util.Map)</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.isToIgnore(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutputFormat(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes</name>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.graph.export</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport</name>
            <outbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport
            </outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.DotExport</inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.TxtExport</inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getIgnoreRegex()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.config
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.graph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.ignoreRegex
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.compile(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.config</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.graph</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.ignoreRegex</name>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isIgnoreExternalDependences()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.config
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.ignoreRegex
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getSimpleName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isExternal()
                </outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Matcher</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Matcher.find()</outbound>
                <outbound type="class" confirmed="no">java.util.regex.Pattern</outbound>
                <outbound type="feature" confirmed="no">java.util.regex.Pattern.matcher(java.lang.CharSequence)
                </outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport.generate()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.DotExport.i
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport.config</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </name>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.DotExport.i
                </outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence,
                    java.lang.CharSequence)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.config
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.graph
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isExternal()
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Character.isUpperCase(char)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.charAt(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.HashMap.HashMap()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="feature" confirmed="no">java.util.List.size()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.put(java.lang.Object, java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.remove(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport.graph</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.DotExport.i</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.export.TxtExport</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.config</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.config
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.graph
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PACKAGE
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.equals(java.lang.Object)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getSimpleName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getType()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isAnonymous()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isExternal()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isInternal()
                </outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.replace(java.lang.CharSequence,
                    java.lang.CharSequence)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.String.split(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collections.sort(java.util.List)</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.contains(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.containsKey(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.get(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.graph</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.export.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.graph.node</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
            </outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory
            </inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory
            </inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory.AbstractDependencyLocationFactory()
                </name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.ClassDependencyLocationFactory()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.PackageDependencyLocationFactory()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory
            </inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.AbstractNodeFactory()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.ClassDependencyFactory()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.PackageDependencyFactory()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
                </name>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.cu.SourcePosition</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.cu.SourcePosition.getFile()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtElement</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtElement.getPosition()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtPackage</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.reference.CtReference)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.reference.CtReference)
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtElement</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtReference.getDeclaration()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
            </outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation.getFile()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation.getLine()</name>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation.getQualifiedName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
            </outbound>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.file
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.line
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.file</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getFile()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getFile()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.file
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getLine()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.line
                </outbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getQualifiedName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.line</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getLine()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.file
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.line
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.valueOf(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode</name>
            <outbound type="class" confirmed="no">java.lang.Comparable</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(java.lang.Object)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getSimpleName()</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getType()</name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isAbstract()</name>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isAnonymous()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isExternal()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.isInternal()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type</name>
            <outbound type="class" confirmed="no">java.lang.Enum</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean, boolean,
                boolean, boolean, boolean, java.lang.String, int)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getType()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean, boolean,
                boolean, boolean, boolean)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getType()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.type
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ANNOTATION</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.CLASS</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.DependencyNode$Type(java.lang.String,
                    int)
                </name>
                <outbound type="feature" confirmed="no">java.lang.Enum.Enum(java.lang.String, int)</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM$VALUES</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.values()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.INTERFACE</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.METHOD</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PACKAGE</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PRIMITIVE</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ANNOTATION
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.DependencyNode$Type(java.lang.String,
                    int)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM$VALUES
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.INTERFACE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.METHOD
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PACKAGE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PRIMITIVE
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.valueOf(java.lang.String)</name>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.Enum</outbound>
                <outbound type="feature" confirmed="no">java.lang.Enum.valueOf(java.lang.Class, java.lang.String)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.values()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM$VALUES
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.arraycopy(java.lang.Object, int,
                    java.lang.Object, int, int)
                </outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
            </outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl
            </inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAbstract
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAnonymous
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isExternal
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isInternal
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isPrimitive
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.simpleName
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.type
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.compareTo(java.lang.String)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(java.lang.Object)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(java.lang.Object)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getQualifiedName()
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getQualifiedName()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getSimpleName()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.simpleName
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getType()</name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.type
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.hashCode()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.hashCode()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAbstract</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAbstract()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAbstract()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAbstract
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAnonymous</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAnonymous()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAnonymous()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isAnonymous
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isExternal</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isExternal()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isExternal()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isExternal
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isInternal</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isInternal()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isInternal()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isInternal
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isPrimitive</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isPrimitive()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isPrimitive()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.isPrimitive
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getQualifiedName()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.hashCode()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.toString()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.simpleName</name>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getSimpleName()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.toString()</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.type</name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getType()
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.locationFactory
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
            </inbound>
            <inbound type="feature" confirmed="yes">nodeFactory</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.graph.node.classDep</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.ClassDependencyFactory()
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.AbstractNodeFactory()
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ANNOTATION
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.INTERFACE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PRIMITIVE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.isExternal(spoon.reflect.reference.CtReference)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotation()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isEnum()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isInterface()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isMemberClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoClassDefFoundError</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">spoon.SpoonException</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtAnnotationType</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtEnum</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtInterface</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtSimpleType</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.isTopLevel()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.ModifierKind</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.ModifierKind.ABSTRACT</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtReference</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getActualClass()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getDeclaration()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getSimpleName()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isAnonymous()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isPrimitive()</outbound>
            </feature>
            <feature confirmed="no">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.isExternal(spoon.reflect.reference.CtReference)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory</name>
            <outbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.ClassDependencyLocationFactory()
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory.AbstractDependencyLocationFactory()
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ANNOTATION
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.ENUM
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.INTERFACE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PRIMITIVE
                </outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isAnnotation()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isEnum()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isMemberClass()</outbound>
                <outbound type="feature" confirmed="no">java.lang.Class.isPrimitive()</outbound>
                <outbound type="class" confirmed="no">java.lang.NoClassDefFoundError</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.contains(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">spoon.SpoonException</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.cu.SourcePosition</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.cu.SourcePosition.getFile()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.cu.SourcePosition.getLine()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtElement</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtSimpleType</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getActualClass()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getModifiers()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getReference()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getSimpleName()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.isTopLevel()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.reflect.declaration.CtTypedElement.getParent(java.lang.Class)
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtTypedElement.getPosition()
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.ModifierKind</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.ModifierKind.ABSTRACT</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isAnonymous()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isInterface()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isPrimitive()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.classDep.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.graph.node.packageDep</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory</name>
            <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.PackageDependencyFactory()
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.AbstractNodeFactory()
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PACKAGE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.isExternal(spoon.reflect.reference.CtReference)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtPackageReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtPackageReference.getSimpleName()
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtReference</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getPackage()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.isPrimitive()</outbound>
            </feature>
            <feature confirmed="no">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.isExternal(spoon.reflect.reference.CtReference)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory</name>
            <outbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory
            </outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.PackageDependencyLocationFactory()
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory.AbstractDependencyLocationFactory()
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </name>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean, java.lang.String, int)
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.PACKAGE
                </outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Class</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.isEmpty()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.cu.SourcePosition</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.cu.SourcePosition.getFile()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.cu.SourcePosition.getLine()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtElement</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtPackage</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtPackage.getQualifiedName()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtPackage.getSimpleName()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtSimpleType</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getPackage()</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getParent()</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.reflect.declaration.CtSimpleType.getParent(java.lang.Class)
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtSimpleType.getSimpleName()
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.reflect.declaration.CtTypedElement.getParent(java.lang.Class)
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtTypedElement.getPosition()
                </outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.graph.node.packageDep.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.gui</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui</name>
            <outbound type="class" confirmed="no">javax.swing.JFrame</outbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.this$0
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.this$0
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JComboBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.this$0
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JCheckBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.this$0
            </inbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.add(java.awt.Component,
                    java.lang.Object)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.config
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setDefaultCloseOperation(int)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setLocationRelativeTo(java.awt.Component)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setSize(int, int)
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setTitle(java.lang.String)
                </outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JButton.JButton(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">
                    javax.swing.JButton.addActionListener(java.awt.event.ActionListener)
                </outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JCheckBox.JCheckBox(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">
                    javax.swing.JCheckBox.addChangeListener(javax.swing.event.ChangeListener)
                </outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.JComboBox(java.lang.Object[])</outbound>
                <outbound type="feature" confirmed="no">
                    javax.swing.JComboBox.addActionListener(java.awt.event.ActionListener)
                </outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.setSelectedIndex(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFrame.JFrame()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JScrollPane.JScrollPane(java.awt.Component, int,
                    int)
                </outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.JTextArea()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.setEditable(boolean)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JToolBar.JToolBar()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JToolBar.add(java.awt.Component)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JToolBar.setFloatable(boolean)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ChangeListener</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.GUILauncher.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.config
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    github.tdurieux.dependencyAnalyzer.DependencyAnalizer)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">dependencyAnalyzer</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">dependencyAnalyzer</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.add(java.awt.Component,
                    java.lang.Object)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.config</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>dependencyAnalyzer</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    github.tdurieux.dependencyAnalyzer.DependencyAnalizer)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.serialVersionUID</name>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setDefaultCloseOperation(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setLocationRelativeTo(java.awt.Component)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setSize(int, int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setTitle(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setVisible(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.GUILauncher.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getProjectPath()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setProjectPath(java.lang.String)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    github.tdurieux.dependencyAnalyzer.DependencyAnalizer)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="class" confirmed="no">java.awt.Component</outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getAbsolutePath()</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="feature" confirmed="no">java.lang.Exception.printStackTrace()</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.JFileChooser()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.getSelectedFile()</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.setAcceptAllFileFilterUsed(boolean)
                </outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.setCurrentDirectory(java.io.File)
                </outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.setDialogTitle(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.setFileSelectionMode(int)</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JFileChooser.showOpenDialog(java.awt.Component)
                </outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.setText(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.this$0</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.val$jtGraph</name>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.setText(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.this$0</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.val$jtGraph</name>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3</name>
            <outbound type="class" confirmed="no">java.awt.event.ActionListener</outbound>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jcLevels
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jcLevels
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="class" confirmed="no">java.awt.event.ActionEvent</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JComboBox.getSelectedItem()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.setText(java.lang.String)</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.this$0</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jcLevels</name>
                <outbound type="class" confirmed="no">javax.swing.JComboBox</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jtGraph</name>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <outbound type="class" confirmed="no">javax.swing.event.ChangeListener</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jchExternalDep
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setIgnoreExternalDependences(boolean)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.this$0
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jchExternalDep
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jtGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$0(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.access$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JCheckBox.isSelected()</outbound>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <outbound type="feature" confirmed="no">javax.swing.JTextArea.setText(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">javax.swing.event.ChangeEvent</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.this$0</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jchExternalDep</name>
                <outbound type="class" confirmed="no">javax.swing.JCheckBox</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jtGraph</name>
                <outbound type="class" confirmed="no">javax.swing.JTextArea</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.gui.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.main</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.main.GUILauncher</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.main.GUILauncher.GUILauncher()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.main.GUILauncher.main(java.lang.String[])</name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.setVisible(boolean)
                </outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.main.Main</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.DOT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ordinal()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.values()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="class" confirmed="no">java.lang.NoSuchFieldError</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.main.Main.Main()</name>
                <outbound type="feature" confirmed="no">java.lang.Object.Object()</outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])</name>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.FlaggedOption</outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.FlaggedOption.FlaggedOption(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, char, java.lang.String,
                    java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.FlaggedOption.setList(boolean)
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.FlaggedOption.setListSeparator(char)
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.JSAP.NO_DEFAULT</outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.JSAP.STRING_PARSER</outbound>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.JSAPException</outbound>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.JSAPResult</outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.JSAPResult.getBoolean(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.JSAPResult.getString(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.JSAPResult.getStringArray(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.JSAPResult.success()</outbound>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.Parameter</outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.QualifiedSwitch.QualifiedSwitch(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, char, java.lang.String,
                    java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.SimpleJSAP.SimpleJSAP(java.lang.String,
                    java.lang.String, com.martiansoftware.jsap.Parameter[])
                </outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.SimpleJSAP.getHelp()</outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.SimpleJSAP.getUsage()</outbound>
                <outbound type="feature" confirmed="no">com.martiansoftware.jsap.SimpleJSAP.parse(java.lang.String[])
                </outbound>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.StringParser</outbound>
                <outbound type="feature" confirmed="no">
                    com.martiansoftware.jsap.UnflaggedOption.UnflaggedOption(java.lang.String,
                    com.martiansoftware.jsap.StringParser, java.lang.String, boolean, boolean, java.lang.String)
                </outbound>
                <outbound type="class" confirmed="no">com.martiansoftware.jsap.stringparsers.StringStringParser
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.CLASS
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.PACKAGE
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.DOT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.TXT
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setClassPath(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setIgnoreExternalDependences(boolean)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setLevel(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutput(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutputFormat(github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setProjectPath(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setVerbose(boolean)
                </outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println()</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.exit(int)</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
                </outbound>
                <outbound type="feature" confirmed="no">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.ordinal()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutput()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutputFormat()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getProjectPath()
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.isVerbose()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport.generate()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.DotExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.TxtExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </outbound>
                <outbound type="class" confirmed="no">java.io.File</outbound>
                <outbound type="feature" confirmed="no">java.io.File.File(java.lang.String)</outbound>
                <outbound type="feature" confirmed="no">java.io.File.getParentFile()</outbound>
                <outbound type="feature" confirmed="no">java.io.File.mkdirs()</outbound>
                <outbound type="feature" confirmed="no">java.io.FileWriter.FileWriter(java.io.File)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileWriter.append(java.lang.CharSequence)</outbound>
                <outbound type="feature" confirmed="no">java.io.FileWriter.close()</outbound>
                <outbound type="class" confirmed="no">java.io.PrintStream</outbound>
                <outbound type="feature" confirmed="no">java.io.PrintStream.println(java.lang.String)</outbound>
                <outbound type="class" confirmed="no">java.io.Writer</outbound>
                <outbound type="class" confirmed="no">java.lang.CharSequence</outbound>
                <outbound type="class" confirmed="no">java.lang.Exception</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="class" confirmed="no">java.lang.String</outbound>
                <outbound type="feature" confirmed="no">java.lang.String.equals(java.lang.Object)</outbound>
                <outbound type="class" confirmed="no">java.lang.StringBuilder</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.StringBuilder(java.lang.String)
                </outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.append(int)</outbound>
                <outbound type="feature" confirmed="no">java.lang.StringBuilder.toString()</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.err</outbound>
                <outbound type="feature" confirmed="no">java.lang.System.out</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.keySet()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.size()</outbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.main.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="yes">
        <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer</name>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor</name>
            <outbound type="class" confirmed="no">spoon.processing.AbstractProcessor</outbound>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.dependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.locationFactory
                </outbound>
                <outbound type="feature" confirmed="yes">nodeFactory</outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.versbose
                </outbound>
                <outbound type="feature" confirmed="no">spoon.processing.AbstractProcessor.AbstractProcessor()
                </outbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </outbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.dependencyGraph
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencyGraph()
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="feature" confirmed="no">java.util.Collection.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Map</outbound>
                <outbound type="feature" confirmed="no">java.util.Map.values()</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.code.CtInvocation</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.code.CtInvocation.getExecutable()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.code.CtLiteral</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.code.CtLiteral.getValue()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtAnnotation</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtAnnotation.getAnnotationType()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtAnnotation.getElementValues()
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtMethod</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtMethod.getThrownTypes()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtTypedElement.getAnnotations()
                </outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtTypedElement.getType()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtExecutableReference</outbound>
                <outbound type="feature" confirmed="no">
                    spoon.reflect.reference.CtExecutableReference.getActualTypeArguments()
                </outbound>
                <outbound type="feature" confirmed="no">
                    spoon.reflect.reference.CtExecutableReference.getDeclaringType()
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </name>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.add(java.lang.Object)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="class" confirmed="no">java.util.Set</outbound>
                <outbound type="feature" confirmed="no">java.util.Set.iterator()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtClass</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtClass.getSuperclass()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtSimpleType</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtType</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.declaration.CtType.getSuperInterfaces()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <outbound type="feature" confirmed="no">spoon.reflect.reference.CtTypeReference.getDeclaration()
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencyGraph()
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.dependencyGraph
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.locationFactory
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>nodeFactory</name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory
                </outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtElement)
                </name>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtElement</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
            </feature>
            <feature confirmed="yes">
                <name>
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </name>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </outbound>
                <outbound type="class" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </outbound>
                <outbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencyGraph()
                </outbound>
                <outbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.locationFactory
                </outbound>
                <outbound type="feature" confirmed="yes">nodeFactory</outbound>
                <outbound type="class" confirmed="no">java.lang.Object</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.ArrayList(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.ArrayList.iterator()</outbound>
                <outbound type="class" confirmed="no">java.util.Collection</outbound>
                <outbound type="class" confirmed="no">java.util.Iterator</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.hasNext()</outbound>
                <outbound type="feature" confirmed="no">java.util.Iterator.next()</outbound>
                <outbound type="class" confirmed="no">java.util.List</outbound>
                <outbound type="feature" confirmed="no">java.util.List.addAll(java.util.Collection)</outbound>
                <outbound type="feature" confirmed="no">java.util.List.iterator()</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.declaration.CtTypedElement</outbound>
                <outbound type="class" confirmed="no">spoon.reflect.reference.CtTypeReference</outbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtElement)
                </inbound>
            </feature>
            <feature confirmed="yes">
                <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.versbose</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
            </feature>
        </class>
        <class confirmed="yes">
            <name>github.tdurieux.dependencyAnalyzer.spoon.analyzer.package-info</name>
            <outbound type="class" confirmed="no">java.lang.Object</outbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.awt</name>
        <class confirmed="no">
            <name>java.awt.Component</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.awt.event</name>
        <class confirmed="no">
            <name>java.awt.event.ActionEvent</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
        </class>
        <class confirmed="no">
            <name>java.awt.event.ActionListener</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.io</name>
        <class confirmed="no">
            <name>java.io.File</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>java.io.File.File(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getAbsolutePath()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.getParentFile()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.File.mkdirs()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.FileWriter</name>
            <feature confirmed="no">
                <name>java.io.FileWriter.FileWriter(java.io.File)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileWriter.append(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.FileWriter.close()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.PrintStream</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>java.io.PrintStream.println()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.io.PrintStream.println(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.io.Writer</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>java.lang</name>
        <class confirmed="no">
            <name>java.lang.CharSequence</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Character</name>
            <feature confirmed="no">
                <name>java.lang.Character.isUpperCase(char)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Class</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>java.lang.Class.isAnnotation()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isEnum()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isInterface()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isMemberClass()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Class.isPrimitive()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Comparable</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode</inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Enum</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.valueOf(java.lang.String)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.valueOf(java.lang.String)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.valueOf(java.lang.String)
            </inbound>
            <feature confirmed="no">
                <name>java.lang.Enum.Enum(java.lang.String, int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.AnalyzerConfig$Level(java.lang.String, int)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.AnalyzerConfig$OutputFormat(java.lang.String,
                    int)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.DependencyNode$Type(java.lang.String,
                    int)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.Enum.valueOf(java.lang.Class, java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.valueOf(java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.valueOf(java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.valueOf(java.lang.String)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.Exception</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>java.lang.Exception.printStackTrace()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.NoClassDefFoundError</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.NoSuchFieldError</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$Level()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.$SWITCH_TABLE$github$tdurieux$dependencyAnalyzer$AnalyzerConfig$OutputFormat()
            </inbound>
        </class>
        <class confirmed="no">
            <name>java.lang.Object</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig</inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.values()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.values()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.isToIgnore(java.lang.String)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.export.package-info</inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.values()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(java.lang.Object)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.classDep.package-info
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.node.package-info</inbound>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.package-info
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.package-info</inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.package-info</inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.main.GUILauncher</inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.main.Main</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.main.package-info</inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.package-info</inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.spoon.analyzer.package-info
            </inbound>
            <feature confirmed="no">
                <name>java.lang.Object.Object()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractDependencyLocationFactory.AbstractDependencyLocationFactory()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.AbstractNodeFactory()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                    java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean,
                    boolean, boolean, boolean, boolean)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JComboBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                    javax.swing.JCheckBox, javax.swing.JTextArea)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.GUILauncher.GUILauncher()
                </inbound>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.main.Main.Main()</inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.String</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.AnalyzerConfig$Level(java.lang.String, int)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.static {}
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.AnalyzerConfig$OutputFormat(java.lang.String,
                int)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.static {}
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.classPath
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getClassPath()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getOutput()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getProjectPath()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.output</inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.projectPath
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setClassPath(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setOutput(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.setProjectPath(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.projectPath
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.isToIgnore(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DependencyGraphExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation.getFile()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.DependencyLocationImpl(java.lang.String,
                java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean, boolean,
                boolean, boolean, boolean, java.lang.String, int)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.file
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.getFile()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.DependencyNode$Type(java.lang.String,
                int)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.static {}
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.valueOf(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getQualifiedName()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode.getSimpleName()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.DependencyNodeImpl(java.lang.String,
                java.lang.String, github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type, boolean, boolean,
                boolean, boolean, boolean)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getQualifiedName()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.getSimpleName()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.hashCode()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.qualifiedName
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.simpleName
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.GUILauncher.main(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>java.lang.String.charAt(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.compareTo(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.compareTo(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.equals(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.isToIgnore(java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.equals(java.lang.Object)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.hashCode()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNodeImpl.hashCode()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.isEmpty()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.replace(java.lang.CharSequence, java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.split(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.String.valueOf(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.StringBuilder</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.StringBuilder(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.append(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.StringBuilder.toString()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocationImpl.toString()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.lang.System</name>
            <feature confirmed="no">
                <name>java.lang.System.arraycopy(java.lang.Object, int, java.lang.Object, int, int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$Level.values()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig$OutputFormat.values()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode$Type.values()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.err</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.exit(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.argsParser(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.lang.System.out</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util</name>
        <class confirmed="no">
            <name>java.util.ArrayList</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.ArrayList(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.ArrayList.iterator()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collection</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>java.util.Collection.iterator()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Collections</name>
            <feature confirmed="no">
                <name>java.util.Collections.list(java.util.Enumeration)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Collections.sort(java.util.List)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Enumeration</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
        </class>
        <class confirmed="no">
            <name>java.util.HashMap</name>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.HashMap.HashMap(java.util.Map)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Iterator</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>java.util.Iterator.hasNext()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Iterator.next()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.List</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.AnalyzerConfig()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.getIgnoreRegex()
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.AnalyzerConfig.ignoreRegex
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.ignoreRegex
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>java.util.List.add(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig.addIgnoreRegex(java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.addAll(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.iterator()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.List.size()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Map</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.DependencyGraph()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedByNodes()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.getUsedNodes()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedByNodes
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.usedNodes
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                java.lang.String)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>java.util.Map.containsKey(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.get(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.addDependencyNode(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.createSubGraphs(java.util.Map,
                    java.lang.String)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.keySet()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.put(java.lang.Object, java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.DependencyGraph.initializeListsInMaps(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode,
                    github.tdurieux.dependencyAnalyzer.graph.node.DependencyLocation)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.remove(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Map.values()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.Set</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.TxtExport.generate()
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>java.util.Set.contains(java.lang.Object)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.iterator()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.DotExport.generate()
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.Set.size()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.main.Main.main(java.lang.String[])
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>java.util.regex</name>
        <class confirmed="no">
            <name>java.util.regex.Matcher</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <feature confirmed="no">
                <name>java.util.regex.Matcher.find()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>java.util.regex.Pattern</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
            </inbound>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.compile(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.AbstractExport(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>java.util.regex.Pattern.matcher(java.lang.CharSequence)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.export.AbstractExport.isToIgnore(github.tdurieux.dependencyAnalyzer.graph.node.DependencyNode)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing</name>
        <class confirmed="no">
            <name>javax.swing.JButton</name>
            <feature confirmed="no">
                <name>javax.swing.JButton.JButton(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JButton.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JCheckBox</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JCheckBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jchExternalDep
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <feature confirmed="no">
                <name>javax.swing.JCheckBox.JCheckBox(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JCheckBox.addChangeListener(javax.swing.event.ChangeListener)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JCheckBox.isSelected()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JComboBox</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JComboBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jcLevels
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.JComboBox(java.lang.Object[])</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.addActionListener(java.awt.event.ActionListener)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.getSelectedItem()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JComboBox.setSelectedIndex(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JFileChooser</name>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.JFileChooser()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.getSelectedFile()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.setAcceptAllFileFilterUsed(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.setCurrentDirectory(java.io.File)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.setDialogTitle(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.setFileSelectionMode(int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JFileChooser.showOpenDialog(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JFrame</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui</inbound>
            <feature confirmed="no">
                <name>javax.swing.JFrame.JFrame()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JScrollPane</name>
            <feature confirmed="no">
                <name>javax.swing.JScrollPane.JScrollPane(java.awt.Component, int, int)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JTextArea</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.DependencyAnalyzerGui$1(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.val$jtGraph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.DependencyAnalyzerGui$2(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.val$jtGraph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.DependencyAnalyzerGui$3(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JComboBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.val$jtGraph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.DependencyAnalyzerGui$4(github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui,
                javax.swing.JCheckBox, javax.swing.JTextArea)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.val$jtGraph
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
            <feature confirmed="no">
                <name>javax.swing.JTextArea.JTextArea()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextArea.setEditable(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JTextArea.setText(java.lang.String)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$1.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$2.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$3.actionPerformed(java.awt.event.ActionEvent)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>javax.swing.JToolBar</name>
            <feature confirmed="no">
                <name>javax.swing.JToolBar.JToolBar()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JToolBar.add(java.awt.Component)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>javax.swing.JToolBar.setFloatable(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>javax.swing.event</name>
        <class confirmed="no">
            <name>javax.swing.event.ChangeEvent</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4.stateChanged(javax.swing.event.ChangeEvent)
            </inbound>
        </class>
        <class confirmed="no">
            <name>javax.swing.event.ChangeListener</name>
            <inbound type="class" confirmed="yes">github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui$4
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.gui.DependencyAnalyzerGui.DependencyAnalyzerGui()
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>org.apache.log4j</name>
        <class confirmed="no">
            <name>org.apache.log4j.Level</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
            <feature confirmed="no">
                <name>org.apache.log4j.Level.OFF</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.log4j.LogManager</name>
            <feature confirmed="no">
                <name>org.apache.log4j.LogManager.getCurrentLoggers()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>org.apache.log4j.LogManager.getRootLogger()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>org.apache.log4j.Logger</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
            </inbound>
            <feature confirmed="no">
                <name>org.apache.log4j.Logger.setLevel(org.apache.log4j.Level)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.disableLog()
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon</name>
        <class confirmed="no">
            <name>spoon.Launcher</name>
            <feature confirmed="no">
                <name>spoon.Launcher.Launcher()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.Launcher.addInputResource(spoon.compiler.SpoonResource)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.Launcher.createCompiler(spoon.reflect.factory.Factory)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.Launcher.getFactory()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.Launcher.run(spoon.compiler.SpoonCompiler, java.lang.String, boolean, spoon.OutputType,
                    java.io.File, java.util.List, boolean, java.io.File, boolean, java.lang.String, java.lang.String,
                    java.util.List, java.util.List)
                </name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.OutputType</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <feature confirmed="no">
                <name>spoon.OutputType.NO_OUTPUT</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.SpoonException</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.compiler</name>
        <class confirmed="no">
            <name>spoon.compiler.Environment</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <feature confirmed="no">
                <name>spoon.compiler.Environment.setNoClasspath(boolean)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.compiler.SpoonCompiler</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <feature confirmed="no">
                <name>spoon.compiler.SpoonCompiler.getFactory()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.compiler.SpoonResource</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.processing</name>
        <class confirmed="no">
            <name>spoon.processing.AbstractProcessor</name>
            <inbound type="class" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor
            </inbound>
            <feature confirmed="no">
                <name>spoon.processing.AbstractProcessor.AbstractProcessor()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.DependencyAnalyzer(github.tdurieux.dependencyAnalyzer.graph.DependencyGraph,
                    github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory,
                    github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.processing.ProcessingManager</name>
            <feature confirmed="no">
                <name>spoon.processing.ProcessingManager.addProcessor(spoon.processing.Processor)</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.processing.ProcessingManager.process(java.util.Collection)</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.processing.Processor</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.reflect.code</name>
        <class confirmed="no">
            <name>spoon.reflect.code.CtInvocation</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.code.CtInvocation.getExecutable()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.code.CtLiteral</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.code.CtLiteral.getValue()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.reflect.cu</name>
        <class confirmed="no">
            <name>spoon.reflect.cu.SourcePosition</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.cu.SourcePosition.getFile()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.cu.SourcePosition.getLine()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.reflect.declaration</name>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtAnnotation</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtAnnotation.getAnnotationType()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtAnnotation.getElementValues()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtAnnotationType</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtClass</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtClass.getSuperclass()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtElement</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.reference.CtReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtElement.getPosition()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtEnum</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtInterface</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtMethod</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtMethod.getThrownTypes()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtPackage</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.declaration.CtElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtPackage.getQualifiedName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtPackage.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtSimpleType</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getActualClass()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getModifiers()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getPackage()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getParent()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getParent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getQualifiedName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getReference()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtSimpleType.isTopLevel()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtType</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtType.getSuperInterfaces()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.CtTypedElement</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.LocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtTypedElement.getAnnotations()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtTypedElement.getParent(java.lang.Class)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtTypedElement.getPosition()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.CtTypedElement.getType()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.declaration.ModifierKind</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.declaration.ModifierKind.ABSTRACT</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.reflect.factory</name>
        <class confirmed="no">
            <name>spoon.reflect.factory.ClassFactory</name>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.factory.ClassFactory.getAll()</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.factory.Factory</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.factory
            </inbound>
            <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.factory.Factory.Class()</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.factory.Factory.getEnvironment()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.reflect.reference</name>
        <class confirmed="no">
            <name>spoon.reflect.reference.CtExecutableReference</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtExecutableReference.getActualTypeArguments()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtExecutableReference.getDeclaringType()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.reference.CtPackageReference</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtPackageReference.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.reference.CtReference</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.reference.CtReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtReference.getDeclaration()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.AbstractNodeFactory.isExternal(spoon.reflect.reference.CtReference)
                </inbound>
            </feature>
        </class>
        <class confirmed="no">
            <name>spoon.reflect.reference.CtTypeReference</name>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.NodeFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
            </inbound>
            <inbound type="feature" confirmed="yes">
                github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.process(spoon.reflect.declaration.CtTypedElement)
            </inbound>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.getActualClass()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.getDeclaration()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.spoon.analyzer.DependencyAnalyzerProcessor.getDependencies(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.getPackage()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.getQualifiedName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.getSimpleName()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.isAnonymous()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.isInterface()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
            </feature>
            <feature confirmed="no">
                <name>spoon.reflect.reference.CtTypeReference.isPrimitive()</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.classDep.ClassDependencyLocationFactory.createDependencyLocation(spoon.reflect.declaration.CtTypedElement)
                </inbound>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.graph.node.packageDep.PackageDependencyFactory.createDependencyNode(spoon.reflect.reference.CtTypeReference)
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.support</name>
        <class confirmed="no">
            <name>spoon.support.QueueProcessingManager</name>
            <feature confirmed="no">
                <name>spoon.support.QueueProcessingManager.QueueProcessingManager(spoon.reflect.factory.Factory)</name>
                <inbound type="feature" confirmed="yes">github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.run()
                </inbound>
            </feature>
        </class>
    </package>
    <package confirmed="no">
        <name>spoon.support.compiler</name>
        <class confirmed="no">
            <name>spoon.support.compiler.FileSystemFolder</name>
            <feature confirmed="no">
                <name>spoon.support.compiler.FileSystemFolder.FileSystemFolder(java.io.File)</name>
                <inbound type="feature" confirmed="yes">
                    github.tdurieux.dependencyAnalyzer.DependencyAnalyzer.DependencyAnalizer(java.lang.String,
                    github.tdurieux.dependencyAnalyzer.AnalyzerConfig)
                </inbound>
            </feature>
        </class>
    </package>
</dependencies>
