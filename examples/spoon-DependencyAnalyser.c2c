<UnknowPackage> *
    <Anonymous> *
        <-- spoon.template.TemplateMatcher
    A *
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.reference.CtReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    BuildException *
        <-- spoon.SpoonTask
    DirectoryScanner *
        <-- spoon.SpoonTask
    E *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Processor
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
    FileSet *
        <-- spoon.SpoonTask
    Java *
        <-- spoon.SpoonTask
    N *
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
    NestedTypeScanner *
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
    P *
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.support.reflect.declaration.CtElementImpl
    Path *
        <-- spoon.SpoonTask
    R *
        <-- spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    Reference *
        <-- spoon.SpoonTask
    S *
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtIf
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtIfImpl
    T *
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessorProperties
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtLiteral
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters$
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateParameter
    byte *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
com.martiansoftware.jsap *
    FlaggedOption *
        <-- spoon.Launcher
    JSAP *
        <-- spoon.Launcher
    JSAPException *
        <-- spoon.Launcher
    JSAPResult *
        <-- spoon.Launcher
    Parameter *
        <-- spoon.Launcher
    Switch *
        <-- spoon.Launcher
com.martiansoftware.jsap.stringparsers *
    FileStringParser *
        <-- spoon.Launcher
    IntegerStringParser *
        <-- spoon.Launcher
    StringStringParser *
        <-- spoon.Launcher
java.awt *
    BorderLayout *
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Component *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Container *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    DisplayMode *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Frame *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsConfiguration *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsDevice *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GridLayout *
        <-- spoon.support.gui.SpoonModelTree
    Window *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
java.awt.event *
    ActionEvent *
        <-- spoon.support.gui.SpoonModelTree$
    ActionListener *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
    ComponentEvent *
        <-- spoon.support.gui.SpoonModelTree
    KeyEvent *
        <-- spoon.support.gui.SpoonModelTree
    KeyListener *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
    MouseEvent *
        <-- spoon.support.gui.SpoonModelTree
    MouseListener *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
java.io *
    BufferedInputStream *
        <-- spoon.support.compiler.ZipFolder
    ByteArrayInputStream *
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    ByteArrayOutputStream *
        <-- spoon.support.compiler.ZipFolder
    File *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.FileGenerator
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.util.BasicCompilationUnit
    FileInputStream *
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
    FileNotFoundException *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.ZipFolder
    FileOutputStream *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree$
    IOException *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.util.BasicCompilationUnit
    InputStream *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonFile
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.processing.XmlProcessorProperties
    ObjectInputStream *
        <-- spoon.support.SerializationModelStreamer
    ObjectOutputStream *
        <-- spoon.support.SerializationModelStreamer
    OutputStream *
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.ZipFolder
    PrintStream *
        <-- spoon.Launcher
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    PrintWriter *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Serializable *
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
java.lang *
    Boolean *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Byte *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Character *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Class *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    ClassCastException *
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
    ClassLoader *
        <-- spoon.compiler.Environment
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    ClassNotFoundException *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
    Cloneable *
        <-- spoon.support.DefaultCoreFactory
    Comparable *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    Deprecated *
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.StandardEnvironment
    Double *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Enum *
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    Exception *
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    Float *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    IllegalAccessException *
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    IllegalArgumentException *
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
    IllegalStateException *
        <-- spoon.Launcher
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.template.TemplateMatcher
    InstantiationException *
        <-- spoon.template.TemplateMatcher
    Integer *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    Iterable *
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    Long *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    NoSuchMethodException *
        <-- spoon.support.util.RtHelper
    NullPointerException *
        <-- spoon.support.visitor.SignaturePrinter
    Number *
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
    Object *
        <-- spoon.Launcher
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    Override *
        <-- spoon.OutputType
        <-- spoon.SpoonTask
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher$
    Package *
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
    RuntimeException *
        <-- spoon.SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.Timer
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
    SafeVarargs *
        <-- spoon.reflect.visitor.filter.CompositeFilter
    Short *
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    String *
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.SpoonException
        <-- spoon.SpoonTask
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.Property
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtBreak
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    StringBuffer *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.visitor.SignaturePrinter
    StringIndexOutOfBoundsException *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SuppressWarnings *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
    System *
        <-- spoon.Launcher
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.util.Timer
    Thread *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Throwable *
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    UnsupportedOperationException *
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.declaration.CtClassImpl
    Void *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.BlockTemplate
        <-- spoon.template.StatementTemplate
java.lang.annotation *
    Annotation *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.support.reflect.reference.CtReferenceImpl
    ElementType *
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.template.Local
        <-- spoon.template.Parameter
java.lang.reflect *
    AccessibleObject *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
    AnnotatedElement *
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Array *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.RtHelper
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    Constructor *
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Field *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    InvocationHandler *
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
    InvocationTargetException *
        <-- spoon.support.util.RtHelper
    Member *
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
    Method *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.util.RtHelper
    Modifier *
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    Proxy *
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
java.net *
    URI *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    URL *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    URLClassLoader *
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
java.util *
    AbstractSet *
        <-- spoon.support.util.NotDirectlyModifiableSet
    ArrayList *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.TemplateMatcher
    Arrays *
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtReferenceImpl
    Collection *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    Collections *
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
    Comparator *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.util.SortedList
    Date *
        <-- spoon.reflect.factory.TypeFactory
    Enumeration *
        <-- spoon.support.gui.SpoonModelTree
    HashMap *
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
    HashSet *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.visitor.TypeReferenceScanner
    Iterator *
        <-- spoon.Launcher
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.template.TemplateMatcher
    LinkedList *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.util.SortedList
    List *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.FileGenerator
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtEnum
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TypedStatementListTemplateParameter
    Locale *
        <-- spoon.reflect.declaration.ModifierKind
    Map *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        Entry *
                <-- spoon.reflect.eval.SymbolicHeap
                <-- spoon.reflect.eval.SymbolicStackFrame
                <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
                <-- spoon.support.DefaultCoreFactory
                <-- spoon.support.processing.XmlProcessorProperties
                <-- spoon.support.reflect.declaration.CtAnnotationImpl
    Queue *
        <-- spoon.support.QueueProcessingManager
    ResourceBundle *
        <-- spoon.Launcher
    Set *
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    Stack *
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.util.Timer
    StringTokenizer *
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.JavaIdentifiers
    TreeMap *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
    TreeSet *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
    Vector *
        <-- spoon.SpoonTask
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
java.util.regex *
    Matcher *
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
    Pattern *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
java.util.zip *
    ZipEntry *
        <-- spoon.support.compiler.ZipFolder
    ZipInputStream *
        <-- spoon.support.compiler.ZipFolder
javax.swing *
    AbstractButton *
        <-- spoon.support.gui.SpoonModelTree
    JFileChooser *
        <-- spoon.support.gui.SpoonModelTree$
    JFrame *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JMenuItem *
        <-- spoon.support.gui.SpoonModelTree
    JOptionPane *
        <-- spoon.support.gui.SpoonModelTree
    JPanel *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JPopupMenu *
        <-- spoon.support.gui.SpoonModelTree
    JScrollPane *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JTable *
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JTree *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
javax.swing.table *
    AbstractTableModel *
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
javax.swing.tree *
    DefaultMutableTreeNode *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
    TreePath *
        <-- spoon.support.gui.SpoonModelTree
javax.xml.parsers *
    DocumentBuilder *
        <-- spoon.processing.XMLAnnotationProcessor
    DocumentBuilderFactory *
        <-- spoon.processing.XMLAnnotationProcessor
    ParserConfigurationException *
        <-- spoon.processing.XMLAnnotationProcessor
org.apache.commons.io *
    FileUtils *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    IOUtils *
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
org.apache.log4j *
    Category *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    Logger *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
org.eclipse.jdt.core.compiler *
    CategorizedProblem *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    CharOperation *
        <-- spoon.support.util.BasicCompilationUnit
    CompilationProgress *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblem *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
org.eclipse.jdt.internal.compiler *
    ASTVisitor *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
    CompilationResult *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    Compiler *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    ICompilerRequestor *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    IErrorHandlingPolicy *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblemFactory *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.ast *
    AND_AND_Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ASTNode *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    AbstractMethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Annotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AnnotationMethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Argument *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ArrayAllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayInitializer *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AssertStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Assignment *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BinaryExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Block *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BreakStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CaseStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CastExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CharLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ClassLiteralAccess *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CompilationUnitDeclaration *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    CompoundAssignment *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConditionalExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConstructorDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ContinueStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoubleLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    EqualExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ExplicitConstructorCall *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ExtendedStringLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FalseLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FloatLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForeachStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IfStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Initializer *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    InstanceOfExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IntLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Javadoc *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    LabeledStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    LocalDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LongLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MarkerAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MemberValuePair *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MessageSend *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    NameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NormalAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NullLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    OR_OR_Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ParameterizedQualifiedTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ParameterizedSingleTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PostfixExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PrefixExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedAllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedNameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedSuperReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedThisReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ReturnStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleMemberAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleNameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Statement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteralConcatenation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SuperReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SwitchStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SynchronizedStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThisReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThrowStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TrueLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TryStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeParameter *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    UnaryExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    UnionTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    WhileStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
org.eclipse.jdt.internal.compiler.batch *
    CompilationUnit *
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    FileSystem *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    Main *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
org.eclipse.jdt.internal.compiler.env *
    ICompilationUnit *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.util.BasicCompilationUnit
    INameEnvironment *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.impl *
    CompilerOptions *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Constant *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ReferenceContext *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
org.eclipse.jdt.internal.compiler.lookup *
    ArrayBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BaseTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BinaryTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    Binding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BlockScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    CaptureBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ClassScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CompilationUnitScope *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    FieldBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LocalTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LocalVariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LookupEnvironment *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    MethodBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodVerifier *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    PackageBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ParameterizedTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ProblemReferenceBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    RawTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ReferenceBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    Scope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    SourceTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    TypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    TypeVariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    VariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    WildcardBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
org.eclipse.jdt.internal.compiler.parser *
    Parser *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.util *
    Util *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.util.BasicCompilationUnit
org.w3c.dom *
    Document *
        <-- spoon.processing.XMLAnnotationProcessor
    Element *
        <-- spoon.processing.XMLAnnotationProcessor
    Node *
        <-- spoon.processing.XMLAnnotationProcessor
    NodeList *
        <-- spoon.processing.XMLAnnotationProcessor
org.xml.sax *
    Attributes *
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    InputSource *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
    SAXException *
        <-- spoon.Launcher
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    SAXParseException *
        <-- spoon.processing.XMLAnnotationProcessor
    XMLReader *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
org.xml.sax.helpers *
    DefaultHandler *
        <-- spoon.Launcher
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    XMLReaderFactory *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
<UnknowPackage> *
    short *
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
spoon *
    BuildException *
        <-- spoon.SpoonTask
    DirectoryScanner *
        <-- spoon.SpoonTask
    FileSet *
        <-- spoon.SpoonTask
    Java *
        <-- spoon.SpoonTask
    Launcher
        --> com.martiansoftware.jsap.FlaggedOption *
        --> com.martiansoftware.jsap.JSAP *
        --> com.martiansoftware.jsap.JSAPException *
        --> com.martiansoftware.jsap.JSAPResult *
        --> com.martiansoftware.jsap.Parameter *
        --> com.martiansoftware.jsap.Switch *
        --> com.martiansoftware.jsap.stringparsers.FileStringParser *
        --> com.martiansoftware.jsap.stringparsers.IntegerStringParser *
        --> com.martiansoftware.jsap.stringparsers.StringStringParser *
        --> java.awt.event.KeyListener *
        --> java.awt.event.MouseListener *
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Serializable *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ResourceBundle *
        --> javax.swing.JFrame *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.DefaultHandler *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.OutputType
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.JavaOutputProcessor
        --> spoon.support.StandardEnvironment
        --> spoon.support.compiler.ZipFolder
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.gui.SpoonModelTree
        <-> spoon.support.processing.SpoonletXmlHandler
    OutputType
        --> java.lang.Override *
        --> java.lang.String *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    Path *
        <-- spoon.SpoonTask
    Reference *
        <-- spoon.SpoonTask
    SpoonException
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
    SpoonTask
        --> BuildException *
        --> DirectoryScanner *
        --> FileSet *
        --> Java *
        --> Path *
        --> Reference *
        --> java.io.File *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Vector *
        --> spoon.BuildException *
        --> spoon.DirectoryScanner *
        --> spoon.FileSet *
        --> spoon.Java *
        --> spoon.Path *
        --> spoon.Reference *
        --> spoon.SpoonTask$ProcessorType
        ProcessorType
                --> java.lang.Object *
                --> java.lang.String *
                <-- spoon.SpoonTask
spoon.compiler
    Environment
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        <-- spoon.Launcher
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        <-> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.visitor.ProcessingVisitor
    InvalidClassPathException
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    ModelBuildingException
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    SpoonCompiler
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        <-- spoon.Launcher
        --> spoon.OutputType
        --> spoon.compiler.SpoonResource
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    SpoonFile
        --> java.io.InputStream *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    SpoonFolder
        --> java.util.List *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    SpoonResource
        --> java.io.File *
        --> java.lang.String *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
    SpoonResourceHelper
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.support.compiler.FileSystemFile
        <-> spoon.support.compiler.FileSystemFolder
        <-> spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
spoon.processing
    AbstractAnnotationProcessor
        --> E *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    AbstractManualProcessor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
    AbstractProblemFixer
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProblemFixer
        --> spoon.reflect.factory.Factory
    AbstractProcessor
        --> E *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        --> spoon.support.util.RtHelper
    AnnotationProcessor
        --> A *
        --> E *
        --> java.lang.Comparable *
        --> java.util.Set *
        <-- spoon.processing.AbstractAnnotationProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
    FactoryAccessor
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    FileGenerator
        --> java.io.File *
        --> java.util.List *
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    ProblemFixer
        --> T *
        --> java.lang.String *
        <-- spoon.processing.AbstractProblemFixer
        --> spoon.reflect.Changes
    ProcessingManager
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Collection *
        <-- spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    Processor
        --> E *
        --> java.util.Set *
        <-- spoon.Launcher
        <-> spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProcessingManager
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.visitor.ProcessingVisitor
    ProcessorProperties
        --> T *
        --> java.lang.Class *
        --> java.lang.String *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
    Property
        --> java.lang.String *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
    Severity
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    TraversalStrategy
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.visitor.ProcessingVisitor
    XMLAnnotationProcessor
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.regex.Pattern *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.ParserConfigurationException *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractManualProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.processing.XmlProcessorProperties
spoon.reflect
    Changes
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        <-- spoon.processing.ProblemFixer
    ModelStreamer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> spoon.reflect.factory.Factory
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.gui.SpoonModelTree$
spoon.reflect.code
    BinaryOperatorKind
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtOperatorAssignment
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtAbstractInvocation
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
    CtAnnotationFieldAccess
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtArrayAccess
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtAssert
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtAssignment
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtBinaryOperator
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtBlock
        --> T *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtBreak
        --> java.lang.String *
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtCFlowBreak
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
    CtCase
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtCatch
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtCodeElement
        --> R *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtCodeSnippetExpression
        --> E *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtCodeSnippetStatement
        --> S *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtConditional
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtContinue
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtDo
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtExpression
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    CtFieldAccess
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
    CtFor
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtForEach
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtIf
        --> S *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtInvocation
        --> java.util.List *
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    CtLiteral
        --> T *
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
    CtLocalVariable
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtLoop
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtNewArray
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtNewClass
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtOperatorAssignment
        --> spoon.reflect.code.BinaryOperatorKind
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtReturn
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        --> spoon.template.TemplateParameter
    CtStatement
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewClass
        <-> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtStatementList
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        <-> spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtSuperAccess
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtSuperAccessImpl
    CtSwitch
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtSynchronized
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtTargetedAccess
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
    CtTargetedExpression
        --> E *
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
    CtThisAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtThrow
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtTry
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtUnaryOperator
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    CtVariableAccess
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
    CtWhile
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.template.TemplateParameter
    UnaryOperatorKind
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.visitor.SignaturePrinter
spoon.reflect.cu
    CompilationUnit
        --> java.io.File *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
    Import
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.reference.CtReference
        <-- spoon.support.reflect.cu.ImportImpl
    SourceCodeFragment
        --> java.lang.Object *
        --> java.lang.String *
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
    SourcePosition
        --> java.io.File *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
spoon.reflect.declaration
    CtAnnotation
        --> A *
        --> T *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Map *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtGenericElementReference
        <-> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtAnnotationType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
    CtAnonymousExecutable
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        --> spoon.template.TemplateParameter
    CtClass
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtCodeSnippet
        --> java.lang.String *
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtConstructor
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
    CtElement
        --> A *
        --> P *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.SpoonException
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-> spoon.reflect.reference.CtReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        --> spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtEnum
        --> java.util.List *
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
    CtExecutable
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        <-- spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        <-> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        --> spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtField
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        <-> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    CtGenericElement
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtInterface
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
    CtMethod
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtModifiable
        --> java.util.Set *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtNamedElement
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder$
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtPackage
        --> T *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    CtParameter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        <-> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    CtSimpleType
        --> N *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Deprecated *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtType
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        <-> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtTypeParameter
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtTypedElement
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CtVariable
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        <-> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        --> spoon.template.TemplateParameter
    ModifierKind
        --> java.lang.Enum *
        --> java.lang.String *
        --> java.util.Locale *
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.util.RtHelper
    ParentNotInitializedException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.template.TemplateMatcher
spoon.reflect.eval
    PartialEvaluator
        --> R *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluationPath
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
    SymbolicEvaluationStack
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Stack *
        --> java.util.Vector *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
    SymbolicEvaluationStep
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Map *
        --> spoon.reflect.eval.StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        <-> spoon.reflect.eval.SymbolicEvaluatorObserver
        <-> spoon.reflect.eval.SymbolicHeap
        <-> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> spoon.template.TemplateParameter
    SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.visitor.CtVisitor
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicHeap
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.HashMap *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicInstance
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    SymbolicStackFrame
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.reflect.eval.observer
    SymbolicEvaluationPathsMaker
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> spoon.reflect.eval.SymbolicEvaluationPath
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluationPrinter
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.compiler.Environment
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.reflect.factory
    AnnotationFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    ClassFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    CodeFactory
        --> E *
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.template.TemplateParameter
    CompilationUnitFactory
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.Import
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> spoon.support.reflect.cu.ImportImpl
    ConstructorFactory
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.Substitution
        --> spoon.template.TemplateParameter
    CoreFactory
        --> T *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.reflect.Array *
        <-- spoon.Launcher
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    EnumFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    EvalFactory
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Map *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    ExecutableFactory
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
    Factory
        --> java.io.Serializable *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.reflect.eval.SymbolicInstance
        <-> spoon.reflect.factory.AnnotationFactory
        <-> spoon.reflect.factory.ClassFactory
        <-> spoon.reflect.factory.CodeFactory
        <-> spoon.reflect.factory.CompilationUnitFactory
        <-> spoon.reflect.factory.ConstructorFactory
        <-> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-> spoon.reflect.factory.EvalFactory
        <-> spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FactoryImpl
        <-> spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-> spoon.reflect.factory.MethodFactory
        <-> spoon.reflect.factory.PackageFactory
        <-> spoon.reflect.factory.SubFactory
        <-> spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    FactoryImpl
        --> java.io.Serializable *
        --> java.lang.Object *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.EnumFactory
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.InterfaceFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
    FieldFactory
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Field *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.factory.CoreFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.template.TemplateParameter
    InterfaceFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    MethodFactory
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.template.Substitution
        --> spoon.template.TemplateParameter
    PackageFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.InterfaceFactory
        --> spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    SubFactory
        --> java.lang.Object *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    TypeFactory
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Date *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
spoon.reflect.reference
    CtAnnonTypeParameterReference
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtArrayTypeReference
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
    CtExecutableReference
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.declaration.CtElement
        <-> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
    CtFieldReference
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Member *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.declaration.CtElement
        <-> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    CtGenericElementReference
        --> java.lang.Comparable *
        --> java.util.List *
        <-- spoon.processing.AbstractAnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtParameterReference
        <-> spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    CtLocalVariableReference
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        <-> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    CtPackageReference
        --> java.lang.Comparable *
        --> java.lang.Package *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    CtParameterReference
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
    CtReference
        --> A *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        <-- spoon.processing.AbstractAnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.cu.Import
        <-> spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-> spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    CtTypeParameterReference
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    CtTypeReference
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Set *
        <-- spoon.processing.AbstractAnnotationProcessor
        --> spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        <-> spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    CtVariableReference
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        <-> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
spoon.reflect.visitor
    Child
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
    CtAbstractVisitor
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.Collection *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
    CtInheritanceScanner
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.template.TemplateParameter
    CtScanner
        --> E *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtStackScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        --> spoon.template.TemplateParameter
    CtStackScanner
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Stack *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
    CtVisitor
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        <-- spoon.Launcher
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        <-> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        <-> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.SerializationModelStreamer$
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
        --> spoon.template.TemplateParameter
    DefaultJavaPrettyPrinter
        --> E *
        --> T *
        --> byte *
        --> java.io.PrintStream *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.SuppressWarnings *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeMap *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.SortedList
        --> spoon.template.TemplateParameter
        ImportScanner
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.util.List *
                --> java.util.Map *
                --> java.util.Set *
                --> java.util.TreeMap *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtExpression
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.code.CtTargetedAccess
                --> spoon.reflect.code.CtTargetedExpression
                --> spoon.reflect.code.CtVariableAccess
                --> spoon.reflect.declaration.CtAnnotationType
                --> spoon.reflect.declaration.CtClass
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtEnum
                --> spoon.reflect.declaration.CtGenericElement
                --> spoon.reflect.declaration.CtInterface
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtSimpleType
                --> spoon.reflect.declaration.CtType
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.reference.CtArrayTypeReference
                --> spoon.reflect.reference.CtExecutableReference
                --> spoon.reflect.reference.CtFieldReference
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.reflect.reference.CtVariableReference
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
                <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
                --> spoon.template.TemplateParameter
        Printingcontext
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.util.Stack *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtSimpleType
                <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    Filter
        --> T *
        --> java.lang.Class *
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.SnippetCompilationHelper$
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
    FragmentDrivenJavaPrettyPrinter
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    JavaIdentifiers
        --> java.lang.Character *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.StringTokenizer *
    ModelConsistencyChecker
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Stack *
        --> java.util.Vector *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.declaration.CtElementImpl
    Parent
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
    PrettyPrinter
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Map *
        <-- spoon.Launcher
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
    Query
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.QueryVisitor
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
    QueryVisitor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.Query
    ReferenceFilter
        --> T *
        --> java.lang.Class *
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
    ReferenceQueryVisitor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
    Root
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
spoon.reflect.visitor.filter
    AbstractFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
    AbstractReferenceFilter
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
    AnnotationFilter
        --> E *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
    CompositeFilter
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.FilteringOperator
    DirectReferenceFilter
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
    FieldAccessFilter
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
    FilteringOperator
        <-- spoon.reflect.visitor.filter.CompositeFilter
    InvocationFilter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
    NameFilter
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.Filter
    ReferenceTypeFilter
        --> T *
        --> java.lang.Class *
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
    RegexFilter
        --> E *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
    ReturnOrThrowFilter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
    TypeFilter
        --> T *
        --> java.lang.Class *
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    VariableAccessFilter
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.template.TemplateParameter
spoon.support
    DefaultCoreFactory
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Cloneable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtArrayAccessImpl
        --> spoon.support.reflect.code.CtAssertImpl
        --> spoon.support.reflect.code.CtAssignmentImpl
        --> spoon.support.reflect.code.CtBinaryOperatorImpl
        --> spoon.support.reflect.code.CtBlockImpl
        --> spoon.support.reflect.code.CtBreakImpl
        --> spoon.support.reflect.code.CtCaseImpl
        --> spoon.support.reflect.code.CtCatchImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        --> spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> spoon.support.reflect.code.CtConditionalImpl
        --> spoon.support.reflect.code.CtContinueImpl
        --> spoon.support.reflect.code.CtDoImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtFieldAccessImpl
        --> spoon.support.reflect.code.CtForEachImpl
        --> spoon.support.reflect.code.CtForImpl
        --> spoon.support.reflect.code.CtIfImpl
        --> spoon.support.reflect.code.CtInvocationImpl
        --> spoon.support.reflect.code.CtLiteralImpl
        --> spoon.support.reflect.code.CtLocalVariableImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtNewArrayImpl
        --> spoon.support.reflect.code.CtNewClassImpl
        --> spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> spoon.support.reflect.code.CtReturnImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtStatementListImpl
        --> spoon.support.reflect.code.CtSuperAccessImpl
        --> spoon.support.reflect.code.CtSwitchImpl
        --> spoon.support.reflect.code.CtSynchronizedImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.code.CtThisAccessImpl
        --> spoon.support.reflect.code.CtThrowImpl
        --> spoon.support.reflect.code.CtTryImpl
        --> spoon.support.reflect.code.CtUnaryOperatorImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.code.CtWhileImpl
        --> spoon.support.reflect.cu.CompilationUnitImpl
        --> spoon.support.reflect.cu.SourcePositionImpl
        --> spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        --> spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.declaration.CtAnnotationTypeImpl
        --> spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        --> spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtEnumImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtFieldImpl
        --> spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtPackageImpl
        --> spoon.support.reflect.declaration.CtParameterImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
        --> spoon.support.reflect.declaration.CtTypeParameterImpl
        --> spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        --> spoon.support.reflect.reference.CtExecutableReferenceImpl
        --> spoon.support.reflect.reference.CtFieldReferenceImpl
        --> spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        --> spoon.support.reflect.reference.CtPackageReferenceImpl
        --> spoon.support.reflect.reference.CtParameterReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    JavaOutputProcessor
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.PrettyPrinter
    QueueProcessingManager
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.LinkedList *
        --> java.util.Queue *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    RuntimeProcessingManager
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.util.Collection *
        --> java.util.LinkedList *
        --> java.util.List *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    SerializationModelStreamer
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.io.Serializable *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.reflect.ModelStreamer
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.gui.SpoonModelTree$
        <Anonymous>
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.factory.Factory
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
    StandardEnvironment
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Serializable *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.reflect.Array *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.xml.sax.SAXException *
        <-- spoon.Launcher
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> spoon.support.processing.XmlProcessorProperties
spoon.support.compiler
    FileSystemFile
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    FileSystemFolder
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.compiler.SpoonResourceHelper
        --> spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    SnippetCompilationError
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.SpoonException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
    SnippetCompilationHelper
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.SpoonException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.template.TemplateParameter
        <Anonymous>
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Exception *
                --> java.lang.Object *
                --> java.lang.String *
                --> java.lang.SuppressWarnings *
                --> java.lang.Throwable *
                --> org.apache.log4j.Category *
                --> org.apache.log4j.Logger *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtExecutable
                --> spoon.reflect.declaration.CtGenericElement
                --> spoon.reflect.declaration.CtMethod
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.visitor.Filter
    VirtualFile
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    VirtualFolder
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    ZipFile
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.support.compiler.ZipFolder
    ZipFolder
        --> java.io.BufferedInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipInputStream *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        <-- spoon.Launcher
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        <-> spoon.compiler.SpoonResourceHelper
        <-> spoon.support.compiler.ZipFile
spoon.support.compiler.jdt
    CompilationUnitWrapper
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.Map *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    CompilerClassLoader
        --> java.lang.ClassLoader *
        --> java.lang.reflect.Array *
        --> java.net.URLClassLoader *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    JDTBasedSpoonCompiler
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Serializable *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.net.URI *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.FileUtils *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem *
        --> org.eclipse.jdt.core.compiler.IProblem *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.util.Util *
        <-> spoon.Launcher
        --> spoon.OutputType
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.compiler.InvalidClassPathException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.QueueProcessingManager
        --> spoon.support.compiler.FileSystemFile
        --> spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        --> spoon.support.compiler.jdt.CompilerClassLoader
        <-> spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
        <-> spoon.support.compiler.jdt.TreeBuilderRequestor
    JDTBatchCompiler
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.Compiler *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy *
        --> org.eclipse.jdt.internal.compiler.IProblemFactory *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions *
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonResource
        --> spoon.processing.FactoryAccessor
        --> spoon.support.compiler.jdt.CompilationUnitWrapper
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler$
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.compiler.jdt.TreeBuilderCompiler
        --> spoon.support.compiler.jdt.TreeBuilderRequestor
        <Anonymous>
                --> java.lang.Object *
                --> java.lang.reflect.Array *
                --> java.util.List *
                --> org.eclipse.jdt.internal.compiler.CompilationResult *
                --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
                --> org.eclipse.jdt.internal.compiler.batch.Main *
                --> spoon.compiler.SpoonCompiler
                --> spoon.processing.FactoryAccessor
                --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
                --> spoon.support.compiler.jdt.JDTBatchCompiler
    JDTSnippetCompiler
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem *
        --> org.eclipse.jdt.core.compiler.IProblem *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.factory.Factory
        --> spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.compiler.VirtualFile
        --> spoon.support.compiler.VirtualFolder
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTBatchCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
    JDTTreeBuilder
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringIndexOutOfBoundsException *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeSet *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.Annotation *
        --> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.Argument *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.AssertStatement *
        --> org.eclipse.jdt.internal.compiler.ast.Assignment *
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression *
        --> org.eclipse.jdt.internal.compiler.ast.Block *
        --> org.eclipse.jdt.internal.compiler.ast.BreakStatement *
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement *
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression *
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment *
        --> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.ContinueStatement *
        --> org.eclipse.jdt.internal.compiler.ast.DoStatement *
        --> org.eclipse.jdt.internal.compiler.ast.DoubleLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.EqualExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall *
        --> org.eclipse.jdt.internal.compiler.ast.Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.FalseLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference *
        --> org.eclipse.jdt.internal.compiler.ast.FloatLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.ForStatement *
        --> org.eclipse.jdt.internal.compiler.ast.ForeachStatement *
        --> org.eclipse.jdt.internal.compiler.ast.IfStatement *
        --> org.eclipse.jdt.internal.compiler.ast.Initializer *
        --> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression *
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc *
        --> org.eclipse.jdt.internal.compiler.ast.LabeledStatement *
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.LongLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair *
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend *
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.NameReference *
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.PostfixExpression *
        --> org.eclipse.jdt.internal.compiler.ast.PrefixExpression *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.ReturnStatement *
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference *
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.Statement *
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation *
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference *
        --> org.eclipse.jdt.internal.compiler.ast.SwitchStatement *
        --> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement *
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference *
        --> org.eclipse.jdt.internal.compiler.ast.ThrowStatement *
        --> org.eclipse.jdt.internal.compiler.ast.TrueLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement *
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter *
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.UnaryExpression *
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.WhileStatement *
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit *
        --> org.eclipse.jdt.internal.compiler.impl.Constant *
        --> org.eclipse.jdt.internal.compiler.lookup.Binding *
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope *
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope *
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.Scope *
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        --> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-> spoon.support.compiler.jdt.ParentExiter
        --> spoon.template.TemplateParameter
        <Anonymous>
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> java.lang.String *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtLocalVariable
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.declaration.CtVariable
                --> spoon.reflect.visitor.Filter
                --> spoon.reflect.visitor.filter.AbstractFilter
                --> spoon.reflect.visitor.filter.TypeFilter
        ASTPair
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                <-- spoon.support.compiler.jdt.JDTTreeBuilder
                <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        BuilderContext
                --> java.lang.Comparable *
                --> java.lang.Iterable *
                --> java.lang.Object *
                --> java.lang.RuntimeException *
                --> java.lang.String *
                --> java.lang.SuppressWarnings *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.List *
                --> java.util.Stack *
                --> java.util.Vector *
                --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
                --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
                --> org.eclipse.jdt.internal.compiler.ast.Expression *
                --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration *
                --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtBlock
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtExpression
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.code.CtStatementList
                --> spoon.reflect.cu.CompilationUnit
                --> spoon.reflect.cu.SourcePosition
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtSimpleType
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.factory.CompilationUnitFactory
                --> spoon.reflect.factory.CoreFactory
                --> spoon.reflect.factory.Factory
                --> spoon.reflect.factory.SubFactory
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.reflect.visitor.CtInheritanceScanner
                --> spoon.reflect.visitor.CtVisitor
                <-- spoon.support.compiler.jdt.JDTTreeBuilder
                --> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
                --> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
                <-> spoon.support.compiler.jdt.ParentExiter
                --> spoon.template.TemplateParameter
        ReferenceBuilder
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.RuntimeException *
                --> java.lang.String *
                --> java.lang.SuppressWarnings *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.List *
                --> java.util.Map *
                --> java.util.Set *
                --> java.util.TreeMap *
                --> java.util.TreeSet *
                --> org.apache.log4j.Category *
                --> org.apache.log4j.Logger *
                --> org.eclipse.jdt.internal.compiler.ASTVisitor *
                --> org.eclipse.jdt.internal.compiler.ast.Argument *
                --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration *
                --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext *
                --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.Binding *
                --> org.eclipse.jdt.internal.compiler.lookup.BlockScope *
                --> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.MethodScope *
                --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.Scope *
                --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding *
                --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtLocalVariable
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.declaration.CtVariable
                --> spoon.reflect.factory.CoreFactory
                --> spoon.reflect.factory.Factory
                --> spoon.reflect.reference.CtArrayTypeReference
                --> spoon.reflect.reference.CtExecutableReference
                --> spoon.reflect.reference.CtFieldReference
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtLocalVariableReference
                --> spoon.reflect.reference.CtPackageReference
                --> spoon.reflect.reference.CtParameterReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeParameterReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.reflect.reference.CtVariableReference
                <-> spoon.support.compiler.jdt.JDTTreeBuilder
                <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ParentExiter
        --> E *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtVisitor
        <-> spoon.support.compiler.jdt.JDTTreeBuilder
        <-> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> spoon.template.TemplateParameter
    TreeBuilderCompiler
        --> java.io.PrintWriter *
        --> java.lang.reflect.Array *
        --> org.eclipse.jdt.core.compiler.CompilationProgress *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.Compiler *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy *
        --> org.eclipse.jdt.internal.compiler.IProblemFactory *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier *
        --> org.eclipse.jdt.internal.compiler.parser.Parser *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    TreeBuilderRequestor
        --> java.lang.Object *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        <-> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
spoon.support.gui
    SpoonModelTree
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.Frame *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.GridLayout *
        --> java.awt.Window *
        --> java.awt.event.ActionListener *
        --> java.awt.event.ComponentEvent *
        --> java.awt.event.KeyEvent *
        --> java.awt.event.KeyListener *
        --> java.awt.event.MouseEvent *
        --> java.awt.event.MouseListener *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> javax.swing.AbstractButton *
        --> javax.swing.JFrame *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPanel *
        --> javax.swing.JPopupMenu *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTree *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.TreePath *
        <-- spoon.Launcher
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.gui.SpoonModelTree$
        --> spoon.support.gui.SpoonObjectFieldsTable
        --> spoon.support.gui.SpoonTreeBuilder
        <Anonymous>
                --> java.awt.event.ActionEvent *
                --> java.awt.event.ActionListener *
                --> java.awt.event.KeyListener *
                --> java.awt.event.MouseListener *
                --> java.io.File *
                --> java.io.FileOutputStream *
                --> java.io.IOException *
                --> java.lang.Object *
                --> java.lang.String *
                --> java.lang.Throwable *
                --> javax.swing.JFileChooser *
                --> javax.swing.JFrame *
                --> javax.swing.JTree *
                --> javax.swing.tree.DefaultMutableTreeNode *
                --> org.apache.log4j.Category *
                --> org.apache.log4j.Logger *
                --> spoon.reflect.ModelStreamer
                --> spoon.reflect.factory.Factory
                --> spoon.support.SerializationModelStreamer
                --> spoon.support.gui.SpoonModelTree
                --> spoon.support.gui.SpoonObjectFieldsTable
    SpoonObjectFieldsTable
        --> java.awt.BorderLayout *
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.Frame *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.Window *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> javax.swing.JFrame *
        --> javax.swing.JPanel *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTable *
        --> javax.swing.table.AbstractTableModel *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonModelTree$
        --> spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        SpoonObjectTableModel
                --> java.lang.Class *
                --> java.lang.IllegalAccessException *
                --> java.lang.IllegalArgumentException *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.lang.Throwable *
                --> java.lang.reflect.AccessibleObject *
                --> java.lang.reflect.Array *
                --> java.lang.reflect.Field *
                --> java.lang.reflect.Modifier *
                --> java.util.ArrayList *
                --> java.util.List *
                --> javax.swing.table.AbstractTableModel *
                --> org.apache.log4j.Category *
                --> org.apache.log4j.Logger *
                <-- spoon.support.gui.SpoonObjectFieldsTable
    SpoonTreeBuilder
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Stack *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.gui.SpoonModelTree
        <Anonymous>
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> javax.swing.tree.DefaultMutableTreeNode *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
spoon.support.processing
    SpoonletXmlHandler
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
        <-> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonResource
        --> spoon.processing.ProcessorProperties
        --> spoon.reflect.factory.Factory
        --> spoon.support.processing.XmlProcessorProperties
    XmlProcessorProperties
        --> T *
        --> byte *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.DefaultHandler *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessorProperties
        <-- spoon.processing.XMLAnnotationProcessor
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        --> spoon.support.processing.XmlProcessorProperties$Loader
        Loader
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.lang.SuppressWarnings *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.Collection *
                --> java.util.Map *
                --> org.xml.sax.Attributes *
                --> org.xml.sax.SAXException *
                --> org.xml.sax.helpers.DefaultHandler *
                <-- spoon.support.processing.XmlProcessorProperties
spoon.support.reflect.code
    CtAnnotationFieldAccesImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtFieldAccessImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtArrayAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtAssertImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtAssignmentImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBinaryOperatorImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBlockImpl
        --> R *
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBreakImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtCaseImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCatchImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCodeElementImpl
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtCodeSnippetExpressionImpl
        --> E *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCodeSnippetStatementImpl
        --> S *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtConditionalImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtContinueImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtDoImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtExpressionImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtFieldAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtForEachImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtForImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtIfImpl
        --> S *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtInvocationImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLiteralImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLocalVariableImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLoopImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        --> spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtNewArrayImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtNewClassImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtOperatorAssignmentImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtAssignmentImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtReturnImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtStatementImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtStatementListImpl
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtSuperAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtSwitchImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtSynchronizedImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTargetedAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTargetedExpressionImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtThisAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtThrowImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTryImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtUnaryOperatorImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtVariableAccessImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtWhileImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoon.support.reflect.cu
    CompilationUnitImpl
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
    CtLineElementComparator
        --> java.lang.Comparable *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.util.Comparator *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    ImportImpl
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.Import
        <-- spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
    SourcePositionImpl
        --> java.io.File *
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.factory.Factory
        <-- spoon.support.DefaultCoreFactory
spoon.support.reflect.declaration
    CompilationUnitVirtualImpl
        --> java.lang.Override *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.cu.CompilationUnitImpl
    CtAnnotationImpl
        --> A *
        --> E *
        --> T *
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Proxy *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        <-> spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoonsupportreflectdeclarationCtAnnotationImpl
        
                --> java.io.Serializable *
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.TreeMap *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.factory.Factory
                --> spoon.reflect.factory.SubFactory
                --> spoon.reflect.factory.TypeFactory
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.support.reflect.declaration.CtElementImpl
spoon.support.reflect.declaration
        AnnotationInvocationHandler
                --> java.io.Serializable *
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.String *
                --> java.lang.Throwable *
                --> java.lang.reflect.Array *
                --> java.lang.reflect.InvocationHandler *
                --> java.lang.reflect.Method *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtExpression
                --> spoon.reflect.code.CtLiteral
                --> spoon.reflect.declaration.CtAnnotation
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeReference
                <-> spoon.support.reflect.declaration.CtAnnotationImpl
                --> spoon.support.reflect.declaration.CtElementImpl
                --> spoon.template.TemplateParameter
    CtAnnotationTypeImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtAnonymousExecutableImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtClassImpl
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.UnsupportedOperationException *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtConstructorImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtElementImpl
        --> A *
        --> P *
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ModelConsistencyChecker
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl$
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        --> spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.support.util.RtHelper
        --> spoon.support.visitor.SignaturePrinter
        --> spoon.support.visitor.TypeReferenceScanner
        <Anonymous>
                --> java.io.Serializable *
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.cu.SourcePosition
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
                --> spoon.support.reflect.declaration.CtElementImpl
    CtEnumImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
    CtExecutableImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtFieldImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtInterfaceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
    CtMethodImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtNamedElementImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
    CtPackageImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtParameterImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtSimpleTypeImpl
        --> N *
        --> NestedTypeScanner *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        <-> spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        NestedTypeScanner
                --> java.io.Serializable *
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.util.Set *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.declaration.CtAnnotationType
                --> spoon.reflect.declaration.CtClass
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtEnum
                --> spoon.reflect.declaration.CtGenericElement
                --> spoon.reflect.declaration.CtInterface
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtSimpleType
                --> spoon.reflect.declaration.CtType
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
                --> spoon.support.reflect.declaration.CtElementImpl
                --> spoon.support.reflect.declaration.CtNamedElementImpl
                <-> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtTypeImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtTypeParameterImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
    CtUncomparableException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.reflect.declaration.CtElementImpl
spoon.support.reflect.eval
    ReturnException
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> spoon.template.TemplateParameter
    SymbolicWrappedException
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicInstance
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    VisitorPartialEvaluator
        --> R *
        --> T *
        --> byte *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> short *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    VisitorSymbolicEvaluator
        --> T *
        --> byte *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> short *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        <-> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.reflect.eval.ReturnException
        --> spoon.support.reflect.eval.SymbolicWrappedException
        <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> spoon.template.TemplateParameter
        BranchingPoint
                --> java.lang.Comparable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.Arrays *
                --> java.util.List *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.eval.SymbolicEvaluationStack
                --> spoon.reflect.eval.SymbolicEvaluator
                --> spoon.reflect.eval.SymbolicInstance
                --> spoon.reflect.visitor.CtVisitor
                <-> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.support.reflect.reference
    CtArrayTypeReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtExecutableReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.RtHelper
    CtFieldReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.util.RtHelper
    CtLocalVariableReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtPackageReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.Package *
        --> java.lang.String *
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
    CtParameterReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.IllegalStateException *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtReferenceImpl
        --> A *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.visitor.SignaturePrinter
    CtTypeParameterReferenceImpl
        --> A *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtTypeReferenceImpl
        --> A *
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.lang.Void *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> short *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.DefaultCoreFactory
        --> spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> spoon.support.util.RtHelper
    CtVariableReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
spoon.support.template
    DefaultParameterMatcher
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.support.template.ParameterMatcher
        <-- spoon.template.Parameter
        <-> spoon.template.TemplateMatcher
    ParameterMatcher
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.template.Parameter
        <-> spoon.template.TemplateMatcher
    Parameters
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.support.template.UndefinedParameterException
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        <-- spoon.template.Substitution
        --> spoon.template.Template
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
        <Anonymous>
                --> T *
                --> java.lang.Comparable *
                --> java.lang.Number *
                --> java.lang.Object *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtSimpleType
                --> spoon.template.TemplateParameter
    SkipException
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    SubstitutionVisitor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.template.Parameters
        --> spoon.support.template.SkipException
        <-> spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.support.template.UndefinedParameterException
        <-- spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
        InheritanceSustitutionScanner
                --> java.io.Serializable *
                --> java.lang.Class *
                --> java.lang.Comparable *
                --> java.lang.Enum *
                --> java.lang.Integer *
                --> java.lang.Iterable *
                --> java.lang.Object *
                --> java.lang.Override *
                --> java.lang.RuntimeException *
                --> java.lang.String *
                --> java.lang.SuppressWarnings *
                --> java.lang.reflect.Array *
                --> java.util.ArrayList *
                --> java.util.Collection *
                --> java.util.List *
                --> java.util.Set *
                --> java.util.TreeSet *
                --> spoon.SpoonException
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.code.CtAbstractInvocation
                --> spoon.reflect.code.CtArrayAccess
                --> spoon.reflect.code.CtBlock
                --> spoon.reflect.code.CtCFlowBreak
                --> spoon.reflect.code.CtCodeElement
                --> spoon.reflect.code.CtExpression
                --> spoon.reflect.code.CtFieldAccess
                --> spoon.reflect.code.CtForEach
                --> spoon.reflect.code.CtInvocation
                --> spoon.reflect.code.CtLiteral
                --> spoon.reflect.code.CtLocalVariable
                --> spoon.reflect.code.CtLoop
                --> spoon.reflect.code.CtNewArray
                --> spoon.reflect.code.CtReturn
                --> spoon.reflect.code.CtStatement
                --> spoon.reflect.code.CtStatementList
                --> spoon.reflect.code.CtTargetedAccess
                --> spoon.reflect.code.CtTargetedExpression
                --> spoon.reflect.code.CtVariableAccess
                --> spoon.reflect.declaration.CtAnnotation
                --> spoon.reflect.declaration.CtClass
                --> spoon.reflect.declaration.CtConstructor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtExecutable
                --> spoon.reflect.declaration.CtField
                --> spoon.reflect.declaration.CtGenericElement
                --> spoon.reflect.declaration.CtMethod
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtParameter
                --> spoon.reflect.declaration.CtSimpleType
                --> spoon.reflect.declaration.CtType
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.declaration.CtVariable
                --> spoon.reflect.factory.CodeFactory
                --> spoon.reflect.factory.CoreFactory
                --> spoon.reflect.factory.Factory
                --> spoon.reflect.factory.FieldFactory
                --> spoon.reflect.factory.PackageFactory
                --> spoon.reflect.factory.SubFactory
                --> spoon.reflect.factory.TypeFactory
                --> spoon.reflect.reference.CtArrayTypeReference
                --> spoon.reflect.reference.CtExecutableReference
                --> spoon.reflect.reference.CtFieldReference
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtLocalVariableReference
                --> spoon.reflect.reference.CtPackageReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.reflect.reference.CtVariableReference
                --> spoon.reflect.visitor.CtInheritanceScanner
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
                --> spoon.reflect.visitor.Filter
                --> spoon.reflect.visitor.Query
                --> spoon.reflect.visitor.filter.AbstractFilter
                --> spoon.reflect.visitor.filter.VariableAccessFilter
                --> spoon.support.template.Parameters
                --> spoon.support.template.SkipException
                <-> spoon.support.template.SubstitutionVisitor
                --> spoon.template.Local
                --> spoon.template.Template
                --> spoon.template.TemplateParameter
    UndefinedParameterException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
spoon.support.util
    BasicCompilationUnit
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> org.eclipse.jdt.core.compiler.CharOperation *
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit *
        --> org.eclipse.jdt.internal.compiler.util.Util *
    NotDirectlyModifiableList
        --> E *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
    NotDirectlyModifiableSet
        --> E *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.AbstractSet *
        --> java.util.Collection *
        --> java.util.TreeSet *
    RtHelper
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        <-- spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        --> spoon.template.TemplateParameter
    SortedList
        --> E *
        --> java.lang.Override *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.LinkedList *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    Timer
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Stack *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
spoon.support.visitor
    ProcessingVisitor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
    SignaturePrinter
        --> E *
        --> T *
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.template.TemplateParameter
    TypeReferenceScanner
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        <-- spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoon.template
    BlockTemplate
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    ExpressionTemplate
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Local
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
    Parameter
        --> java.lang.Class *
        --> java.lang.String *
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
        --> spoon.support.template.DefaultParameterMatcher
        --> spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateMatcher$
    StatementTemplate
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Substitution
        --> E *
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        --> spoon.support.template.Parameters
        --> spoon.support.template.SubstitutionVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        --> spoon.template.Local
        --> spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    Template
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    TemplateException
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
        <-- spoon.template.TemplateMatcher
    TemplateMatcher
        -->  *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalStateException *
        --> java.lang.InstantiationException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.InvocationFilter
        <-> spoon.support.template.DefaultParameterMatcher
        <-> spoon.support.template.ParameterMatcher
        --> spoon.support.template.Parameters
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        --> spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher$
        --> spoon.template.TemplateParameter
        <Anonymous>
                --> java.lang.Comparable *
                --> java.lang.Override *
                --> java.lang.String *
                --> java.lang.reflect.Array *
                --> java.util.Collection *
                --> java.util.List *
                --> spoon.processing.FactoryAccessor
                --> spoon.reflect.declaration.CtElement
                --> spoon.reflect.declaration.CtField
                --> spoon.reflect.declaration.CtModifiable
                --> spoon.reflect.declaration.CtNamedElement
                --> spoon.reflect.declaration.CtTypedElement
                --> spoon.reflect.declaration.CtVariable
                --> spoon.reflect.reference.CtGenericElementReference
                --> spoon.reflect.reference.CtReference
                --> spoon.reflect.reference.CtTypeParameterReference
                --> spoon.reflect.reference.CtTypeReference
                --> spoon.reflect.visitor.CtScanner
                --> spoon.reflect.visitor.CtVisitor
                --> spoon.template.Parameter
                --> spoon.template.TemplateMatcher
    TemplateParameter
        --> T *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.Parameters$
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
    TypedBlockTemplateParameter
        --> R *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    TypedStatementListTemplateParameter
        --> R *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
