     *
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.enums.OpCode
A *
    A *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.reference.CtReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
Bar
    Bar
        --> java.lang.Object *
BuildException *
    BuildException *
        <-- spoon.SpoonTask
DirectoryScanner *
    DirectoryScanner *
        <-- spoon.SpoonTask
E *
    E *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Processor
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtTargetedExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.SimilarSignatureMethodes
FileSet *
    FileSet *
        <-- spoon.SpoonTask
Foo
    Foo
        --> java.lang.Object *
InnerClass *
    InnerClass *
        <-- spoon.test.fieldaccesses.InnerClassThisAccess
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClass
Java *
    Java *
        <-- spoon.SpoonTask
MyCtMethod *
    MyCtMethod *
        <-- spoon.test.factory.FactoryTest
N *
    N *
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
NestedTypeScanner *
    NestedTypeScanner *
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
P *
    P *
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.support.reflect.declaration.CtElementImpl
Path *
    Path *
        <-- spoon.SpoonTask
R *
    R *
        <-- spoon.reflect.code.CtCodeElement
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
Reference *
    Reference *
        <-- spoon.SpoonTask
S *
    S *
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtIf
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtIfImpl
T *
    T *
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessorProperties
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtLiteral
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.generics.ClassThatDefinesANewTypeArgument
        <-- spoon.test.generics.Tree
V *
    V *
        <-- spoon.test.generics.Tree
byte *
    <-- spoon.reflect.factory.TypeFactory
    <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
    <-- spoon.support.processing.XmlProcessorProperties
    <-- spoon.support.reflect.declaration.CtAnnotationImpl
    <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    <-- spoon.support.reflect.reference.CtTypeReferenceImpl
com.martiansoftware.jsap *
    FlaggedOption *
        <-- spoon.Launcher
    JSAP *
        <-- spoon.Launcher
    JSAPException *
        <-- spoon.Launcher
    JSAPResult *
        <-- spoon.Launcher
    Parameter *
        <-- spoon.Launcher
    StringParser *
        <-- spoon.Launcher
    Switch *
        <-- spoon.Launcher
com.martiansoftware.jsap.stringparsers *
    FileStringParser *
        <-- spoon.Launcher
    IntegerStringParser *
        <-- spoon.Launcher
    StringStringParser *
        <-- spoon.Launcher
java.awt *
    BorderLayout *
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Component *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Container *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    DisplayMode *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Frame *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsConfiguration *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GraphicsDevice *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    GridLayout *
        <-- spoon.support.gui.SpoonModelTree
    LayoutManager *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    Window *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
java.awt.event *
    ActionEvent *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.test.secondaryclasses.AnonymousClass
    ActionListener *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.ClassesTest
    ComponentEvent *
        <-- spoon.support.gui.SpoonModelTree
    KeyEvent *
        <-- spoon.support.gui.SpoonModelTree
    KeyListener *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
    MouseEvent *
        <-- spoon.support.gui.SpoonModelTree
    MouseListener *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
java.io *
    BufferedInputStream *
        <-- spoon.support.compiler.ZipFolder
    BufferedReader *
        <-- spoon.test.trycatch.Main
    ByteArrayInputStream *
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    ByteArrayOutputStream *
        <-- spoon.support.compiler.ZipFolder
    File *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.FileGenerator
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.test.api.APITest
        <-- spoon.test.generics.GenericsTest
    FileInputStream *
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
    FileNotFoundException *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.test.exceptions.ExceptionTest
    FileOutputStream *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
    FileReader *
        <-- spoon.test.trycatch.Main
    IOException *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.util.BasicCompilationUnit
    InputStream *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonFile
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.processing.XmlProcessorProperties
    ObjectInputStream *
        <-- spoon.support.SerializationModelStreamer
    ObjectOutputStream *
        <-- spoon.support.SerializationModelStreamer
    OutputStream *
        <-- spoon.reflect.ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
    PrintStream *
        <-- spoon.Launcher
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.filters.Foo
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.Foo
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.strings.Main
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.Main
    PrintWriter *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Serializable *
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.Secondary
java.lang *
    Boolean *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.prettyprinter.Validation
    Byte *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    CharSequence *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.intercession.IntercessionTest
    Character *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.prettyprinter.Validation
    Class *
        <-- spoon.Launcher
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Filter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceFilter
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    ClassCastException *
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
    ClassLoader *
        <-- spoon.compiler.Environment
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    ClassNotFoundException *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
    Cloneable *
        <-- spoon.support.DefaultCoreFactory
    Comparable *
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Deprecated *
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.support.StandardEnvironment
        <-- spoon.test.prettyprinter.Validation
    Double *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.initializers.InstanceInitializers
    Enum *
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
    Error *
        <-- spoon.test.trycatch.TryCatchTest
    Exception *
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Float *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    IllegalAccessException *
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    IllegalArgumentException *
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
    IllegalStateException *
        <-- spoon.Launcher
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.template.TemplateMatcher
    InstantiationException *
        <-- spoon.template.TemplateMatcher
    Integer *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.test.enums.OpCode
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
    Iterable *
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Long *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Math *
        <-- spoon.test.subclass.prettyprinter.DefaultPrettyPrinterExample
    NoSuchMethodException *
        <-- spoon.support.util.RtHelper
    NullPointerException *
        <-- spoon.support.visitor.SignaturePrinter
    Number *
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
    Object *
        <-- Bar
        <-- Foo
        <-- spoon.Launcher
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.SortedList
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.SampleClass
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotParam
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Main
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArrayClass
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.control.DoWhile
        <-- spoon.test.control.Fors
        <-- spoon.test.control.Ifs
        <-- spoon.test.control.Ifs$Token
        <-- spoon.test.ctCase.ClassWithSwitchExample
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.enums.Regular
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.exceptions.ClassWithError
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.BCUBug20140402
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.fieldaccesses.InnerClassThisAccess
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClass
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
        <-- spoon.test.fieldaccesses.InternalSuperCall
        <-- spoon.test.fieldaccesses.Mouse
        <-- spoon.test.fieldaccesses.TargetedAccessPosition
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.filters.Foo
        <-- spoon.test.generics.ACLass
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.ClassThatDefinesANewTypeArgument
        <-- spoon.test.generics.ComparableComparator
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericMethodCallWithExtend
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.InstanceOfMapEntryGeneric
        <-- spoon.test.generics.SimilarSignatureMethodes
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.initializers.InternalClassStaticFieldInit
        <-- spoon.test.initializers.InternalClassStaticFieldInit$InternalClass
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeExample
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.MultipleInternalClass
        <-- spoon.test.limits.StaticClassAnon
        <-- spoon.test.limits.StaticClassAnon$StaticIntern
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass
        <-- spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.Foo
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterDependency
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.SampleForInsertBefore
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.Bar
        <-- spoon.test.replace.Foo
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf
        <-- spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.secondaryclasses.Secondary
        <-- spoon.test.secondaryclasses.Test
        <-- spoon.test.secondaryclasses.TopLevel
        <-- spoon.test.secondaryclasses.TopLevel$InnerClass
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.Main
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.C1
        <-- spoon.test.template.SuperClass
        <-- spoon.test.template.SuperTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        <-- spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
    Override *
        <-- spoon.OutputType
        <-- spoon.SpoonTask
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.api.APITest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
    Package *
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
    Runnable *
        <-- spoon.test.limits.utils.ContainInternalClass
    RuntimeException *
        <-- spoon.SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.Timer
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.trycatch.TryCatchTest
    SafeVarargs *
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.test.generics.GenericMethodCallWithExtend
    SecurityManager *
        <-- spoon.test.prettyprinter.Validation
    Short *
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    String *
        <-- spoon.Launcher
        <-- spoon.OutputType
        <-- spoon.SpoonException
        <-- spoon.SpoonTask
        <-- spoon.SpoonTask$ProcessorType
        <-- spoon.compiler.Environment
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProblemFixer
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.ProcessorProperties
        <-- spoon.processing.Property
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtBreak
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourceCodeFragment
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtCodeSnippet
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.ModifierKind
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotParam
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.PersistenceProperty
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.control.Fors
        <-- spoon.test.control.Ifs
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
        <-- spoon.test.fieldaccesses.InternalSuperCall
        <-- spoon.test.fieldaccesses.Mouse
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InternalClassStaticFieldInit$InternalClass
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.StaticClassAnon$StaticIntern
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
        <-- spoon.test.secondaryclasses.Secondary
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.Main
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.subclass.prettyprinter.DefaultPrettyPrinterExample
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        <-- spoon.test.trycatch.Main
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    StringBuffer *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.visitor.SignaturePrinter
    StringIndexOutOfBoundsException *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SuppressWarnings *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.test.annotation.AnnotParam
        <-- spoon.test.control.Fors
        <-- spoon.test.control.Ifs
        <-- spoon.test.eval.ToEvaluate
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
        <-- spoon.test.fieldaccesses.Mouse
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.generics.Tree
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.StaticFieldAccesOnInstance
        <-- spoon.test.limits.utils.ContainInternalClass
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.strings.StringLiteralTest
    System *
        <-- spoon.Launcher
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.util.Timer
        <-- spoon.test.control.Ifs
        <-- spoon.test.main.MainTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.template.ArrayResizeTemplate
    Thread *
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.SampleClass
        <-- spoon.test.processing.SampleForInsertBefore
    Throwable *
        <-- spoon.Launcher
        <-- spoon.SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.trycatch.Main
    UnsupportedOperationException *
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.test.generics.BugCollection$Foo
    Void *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.BlockTemplate
        <-- spoon.template.StatementTemplate
java.lang.annotation *
    Annotation *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.support.reflect.reference.CtReferenceImpl
    ElementType *
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.template.Local
        <-- spoon.template.Parameter
    Retention *
        <-- spoon.test.annotation.AnnotationTest
    Target *
        <-- spoon.test.annotation.AnnotationTest
java.lang.reflect *
    AccessibleObject *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
    AnnotatedElement *
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Array *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.Environment
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.Child
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Parent
        <-- spoon.reflect.visitor.Root
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.BasicCompilationUnit
        <-- spoon.support.util.RtHelper
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Local
        <-- spoon.template.Parameter
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotParam
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.PersistenceProperty
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArrayClass
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.Ifs
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.Performable
        <-- spoon.test.enums.Regular
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.fieldaccesses.BCUBug20140402
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.fieldaccesses.Mouse
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.GenericMethodCallWithExtend
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.prettyprinter.Validation
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.Main
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.C1
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Constructor *
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
    Field *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    InvocationHandler *
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
    InvocationTargetException *
        <-- spoon.support.util.RtHelper
    Member *
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
    Method *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.util.RtHelper
    Modifier *
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.util.RtHelper
        <-- spoon.template.TemplateMatcher
    Proxy *
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
java.net *
    URI *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    URL *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    URLClassLoader *
        <-- spoon.support.compiler.jdt.CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
java.security *
    AccessController *
        <-- spoon.test.prettyprinter.Validation
    PrivilegedAction *
        <-- spoon.test.prettyprinter.Validation
java.util *
    AbstractSet *
        <-- spoon.support.util.NotDirectlyModifiableSet
    ArrayList *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.api.APITest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.ClassThatBindsAGenericType
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.template.TemplateWithConstructor
    Arrays *
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtReferenceImpl
    Collection *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableList
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.SortedList
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.processing.TestProcessor
    Collections *
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
    Comparator *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.util.SortedList
        <-- spoon.test.generics.ComparableComparatorBug
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        <-- spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
    Date *
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
    Enumeration *
        <-- spoon.support.gui.SpoonModelTree
    HashMap *
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
    HashSet *
        <-- spoon.processing.AbstractProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.visitor.TypeReferenceScanner
    Iterator *
        <-- spoon.Launcher
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.BugCollection$Foo
    LinkedList *
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.util.SortedList
    List *
        <-- spoon.Launcher
        <-- spoon.SpoonTask
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.FileGenerator
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.Changes
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtInvocation
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtEnum
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.util.Timer
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericConstructor
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.generics.Tree
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.initializers.InstanceInitializers
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    Locale *
        <-- spoon.reflect.declaration.ModifierKind
    Map *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.secondaryclasses.Secondary
java.util.Map$Entry *
    Entry *
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.test.generics.BugCollection
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.generics.InstanceOfMapEntryGeneric
java.util *
    Queue *
        <-- spoon.support.QueueProcessingManager
    ResourceBundle *
        <-- spoon.Launcher
    Set *
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.JavaIdentifiers
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.casts.CastTest
        <-- spoon.test.generics.BugCollection$Foo
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
    Stack *
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.util.Timer
        <-- spoon.test.enums.OpCode
        <-- spoon.test.enums.Performable
    StringTokenizer *
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.JavaIdentifiers
    TreeMap *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
    TreeSet *
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.NotDirectlyModifiableSet
        <-- spoon.support.util.RtHelper
    Vector *
        <-- spoon.SpoonTask
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.test.secondaryclasses.TopLevel$InnerClass
java.util.regex *
    Matcher *
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
    Pattern *
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.template.TemplateMatcher
java.util.zip *
    ZipEntry *
        <-- spoon.support.compiler.ZipFolder
    ZipInputStream *
        <-- spoon.support.compiler.ZipFolder
javax.swing *
    AbstractButton *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.test.secondaryclasses.AnonymousClass
    JButton *
        <-- spoon.test.secondaryclasses.AnonymousClass
    JFileChooser *
        <-- spoon.support.gui.SpoonModelTree
    JFrame *
        <-- spoon.Launcher
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JMenuItem *
        <-- spoon.support.gui.SpoonModelTree
    JOptionPane *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.test.secondaryclasses.AnonymousClass
    JPanel *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JPopupMenu *
        <-- spoon.support.gui.SpoonModelTree
    JScrollPane *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JTable *
        <-- spoon.support.gui.SpoonObjectFieldsTable
    JTree *
        <-- spoon.support.gui.SpoonModelTree
javax.swing.table *
    AbstractTableModel *
        <-- spoon.support.gui.SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
javax.swing.tree *
    DefaultMutableTreeNode *
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
    MutableTreeNode *
        <-- spoon.support.gui.SpoonTreeBuilder
    TreePath *
        <-- spoon.support.gui.SpoonModelTree
javax.xml.parsers *
    DocumentBuilder *
        <-- spoon.processing.XMLAnnotationProcessor
    DocumentBuilderFactory *
        <-- spoon.processing.XMLAnnotationProcessor
    ParserConfigurationException *
        <-- spoon.processing.XMLAnnotationProcessor
org.apache.commons.io *
    FileUtils *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    IOUtils *
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
org.apache.log4j *
    Category *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
    Logger *
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
org.eclipse.jdt.core.compiler *
    CategorizedProblem *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
    CharOperation *
        <-- spoon.support.util.BasicCompilationUnit
    CompilationProgress *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblem *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
org.eclipse.jdt.internal.compiler *
    ASTVisitor *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
    CompilationResult *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    Compiler *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    ICompilerRequestor *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
    IErrorHandlingPolicy *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    IProblemFactory *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.ast *
    AND_AND_Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ASTNode *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    AbstractMethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Annotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AnnotationMethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Argument *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ArrayAllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayInitializer *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ArrayTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    AssertStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Assignment *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BinaryExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Block *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    BreakStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CaseStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CastExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CharLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ClassLiteralAccess *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CompilationUnitDeclaration *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    CompoundAssignment *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConditionalExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ConstructorDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ContinueStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    DoubleLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    EqualExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ExplicitConstructorCall *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    ExtendedStringLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FalseLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FieldReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    FloatLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ForeachStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IfStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Initializer *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    InstanceOfExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    IntLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Javadoc *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    LabeledStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    LocalDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LongLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MarkerAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MemberValuePair *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MessageSend *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    MethodDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    NameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NormalAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    NullLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    OR_OR_Expression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ParameterizedQualifiedTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ParameterizedSingleTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PostfixExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    PrefixExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedAllocationExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedNameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedSuperReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedThisReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    QualifiedTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ReturnStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleMemberAnnotation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleNameReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SingleTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    Statement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    StringLiteralConcatenation *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SuperReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SwitchStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    SynchronizedStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThisReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ThrowStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TrueLiteral *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TryStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeDeclaration *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeParameter *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    TypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    UnaryExpression *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    UnionTypeReference *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    WhileStatement *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
org.eclipse.jdt.internal.compiler.batch *
    CompilationUnit *
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    FileSystem *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
    Main *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
org.eclipse.jdt.internal.compiler.env *
    ICompilationUnit *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.util.BasicCompilationUnit
    INameEnvironment *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.impl *
    CompilerOptions *
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    Constant *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    ReferenceContext *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
org.eclipse.jdt.internal.compiler.lookup *
    ArrayBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BaseTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BinaryTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    Binding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    BlockScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    CaptureBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ClassScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
    CompilationUnitScope *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    FieldBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LocalTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LocalVariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    LookupEnvironment *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    MethodBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodScope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    MethodVerifier *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
    PackageBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ParameterizedTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ProblemReferenceBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    RawTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ReferenceBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    Scope *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    SourceTypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    TypeBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    TypeVariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    VariableBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    WildcardBinding *
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
org.eclipse.jdt.internal.compiler.parser *
    Parser *
        <-- spoon.support.compiler.jdt.TreeBuilderCompiler
org.eclipse.jdt.internal.compiler.util *
    Util *
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.util.BasicCompilationUnit
org.w3c.dom *
    Document *
        <-- spoon.processing.XMLAnnotationProcessor
    Element *
        <-- spoon.processing.XMLAnnotationProcessor
    Node *
        <-- spoon.processing.XMLAnnotationProcessor
    NodeList *
        <-- spoon.processing.XMLAnnotationProcessor
org.xml.sax *
    Attributes *
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    ContentHandler *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
    InputSource *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
    SAXException *
        <-- spoon.Launcher
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    SAXParseException *
        <-- spoon.processing.XMLAnnotationProcessor
    XMLReader *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
org.xml.sax.helpers *
    DefaultHandler *
        <-- spoon.Launcher
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.processing.XmlProcessorProperties$Loader
    XMLReaderFactory *
        <-- spoon.Launcher
        <-- spoon.support.processing.XmlProcessorProperties
short *
    <-- spoon.support.reflect.eval.VisitorPartialEvaluator
    <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    <-- spoon.support.reflect.reference.CtTypeReferenceImpl
spoon *
    BuildException *
        <-- spoon.SpoonTask
    DirectoryScanner *
        <-- spoon.SpoonTask
    FileSet *
        <-- spoon.SpoonTask
    Java *
        <-- spoon.SpoonTask
    Launcher
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.main.MainTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
        --> com.martiansoftware.jsap.FlaggedOption *
        --> com.martiansoftware.jsap.JSAP *
        --> com.martiansoftware.jsap.JSAPException *
        --> com.martiansoftware.jsap.JSAPResult *
        --> com.martiansoftware.jsap.Parameter *
        --> com.martiansoftware.jsap.StringParser *
        --> com.martiansoftware.jsap.Switch *
        --> com.martiansoftware.jsap.stringparsers.FileStringParser *
        --> com.martiansoftware.jsap.stringparsers.IntegerStringParser *
        --> com.martiansoftware.jsap.stringparsers.StringStringParser *
        --> java.awt.event.KeyListener *
        --> java.awt.event.MouseListener *
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Exception *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.ResourceBundle *
        --> javax.swing.JFrame *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.DefaultHandler *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.OutputType
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.JavaOutputProcessor
        --> spoon.support.StandardEnvironment
        --> spoon.support.compiler.ZipFolder
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.gui.SpoonModelTree
        --> spoon.support.processing.SpoonletXmlHandler
    OutputType
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.lang.Override *
        --> java.lang.String *
    Path *
        <-- spoon.SpoonTask
    Reference *
        <-- spoon.SpoonTask
    SpoonException
        <-- spoon.compiler.InvalidClassPathException
        <-- spoon.compiler.ModelBuildingException
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.ParentNotInitializedException
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.SnippetCompilationError
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtUncomparableException
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.template.UndefinedParameterException
        <-- spoon.template.TemplateException
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.exceptions.ExceptionTest
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
    SpoonTask
        --> BuildException *
        --> DirectoryScanner *
        --> FileSet *
        --> Java *
        --> Path *
        --> Reference *
        --> java.io.File *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Vector *
        --> spoon.BuildException *
        --> spoon.DirectoryScanner *
        --> spoon.FileSet *
        --> spoon.Java *
        --> spoon.Path *
        --> spoon.Reference *
        --> spoon.SpoonTask$ProcessorType
spoon.SpoonTask$ProcessorType
    ProcessorType
        <-- spoon.SpoonTask
        --> java.lang.Object *
        --> java.lang.String *
spoon.compiler
    Environment
        <-- spoon.Launcher
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
    InvalidClassPathException
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.exceptions.ExceptionTest
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
    ModelBuildingException
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.exceptions.ExceptionTest
        --> java.lang.Exception *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
    SpoonCompiler
        <-- spoon.Launcher
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.OutputType
        --> spoon.compiler.SpoonResource
    SpoonFile
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> java.io.InputStream *
    SpoonFolder
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResource
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> java.util.List *
    SpoonResource
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonCompiler
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.VirtualFolder
        <-- spoon.support.compiler.ZipFile
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        --> java.io.File *
        --> java.lang.String *
        --> spoon.compiler.SpoonFolder
    SpoonResourceHelper
        <-- spoon.Launcher
        <-- spoon.support.compiler.FileSystemFile
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.ZipFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.template.TemplateTest
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.support.compiler.FileSystemFile
        --> spoon.support.compiler.FileSystemFolder
        --> spoon.support.compiler.ZipFolder
spoon.processing
    AbstractAnnotationProcessor
        --> A *
        --> E *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.AnnotationProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    AbstractManualProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
    AbstractProblemFixer
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProblemFixer
        --> spoon.reflect.factory.Factory
    AbstractProcessor
        <-- spoon.Launcher
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.test.api.APITest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        --> E *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.HashSet *
        --> java.util.Set *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.support.util.RtHelper
    AnnotationProcessor
        <-- spoon.processing.AbstractAnnotationProcessor
        --> A *
        --> E *
        --> java.lang.Comparable *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
    FactoryAccessor
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> spoon.reflect.factory.Factory
    FileGenerator
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.test.api.APITest
        --> java.io.File *
        --> java.util.List *
    ProblemFixer
        <-- spoon.processing.AbstractProblemFixer
        --> T *
        --> java.lang.String *
        --> spoon.reflect.Changes
    ProcessingManager
        <-- spoon.compiler.Environment
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Collection *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtElement
    Processor
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.test.api.APITest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        --> E *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.TraversalStrategy
    ProcessorProperties
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        --> T *
        --> java.lang.Class *
        --> java.lang.String *
    Property
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        --> java.lang.String *
    Severity
        <-- spoon.Launcher
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.test.processing.TestProcessor
    TraversalStrategy
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.Processor
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.visitor.ProcessingVisitor
    XMLAnnotationProcessor
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.regex.Pattern *
        --> javax.xml.parsers.DocumentBuilder *
        --> javax.xml.parsers.DocumentBuilderFactory *
        --> javax.xml.parsers.ParserConfigurationException *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.w3c.dom.Document *
        --> org.w3c.dom.Element *
        --> org.w3c.dom.Node *
        --> org.w3c.dom.NodeList *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.SAXParseException *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractManualProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Property
        --> spoon.processing.Severity
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.processing.XmlProcessorProperties
spoon.reflect
    Changes
        <-- spoon.processing.ProblemFixer
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
    ModelStreamer
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.gui.SpoonModelTree
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> spoon.reflect.factory.Factory
spoon.reflect.code
    BinaryOperatorKind
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtOperatorAssignment
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.strings.StringTest
    CtAbstractInvocation
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.secondaryclasses.ClassesTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.template.TemplateParameter
    CtAnnotationFieldAccess
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtArrayAccess
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtAssert
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtAssignment
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtBinaryOperator
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.strings.StringTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtBlock
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> T *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
    CtBreak
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.String *
    CtCFlowBreak
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        <-- spoon.test.intercession.IntercessionTest
    CtCase
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtCatch
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.template.TemplateParameter
    CtCodeElement
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> R *
    CtCodeSnippetExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.IntercessionTest
        --> E *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.support.compiler.SnippetCompilationError
    CtCodeSnippetStatement
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.trycatch.TryCatchTest
        --> S *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.support.compiler.SnippetCompilationError
    CtConditional
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtContinue
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
    CtDo
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.control.ControlTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtExpression
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtFieldAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtFor
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.control.ControlTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtForEach
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.template.TemplateParameter
    CtIf
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        --> S *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtInvocation
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        --> java.util.List *
    CtLiteral
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        --> T *
    CtLocalVariable
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtLoop
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.control.ControlTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
    CtNewArray
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtNewClass
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.secondaryclasses.ClassesTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
    CtOperatorAssignment
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> spoon.reflect.code.BinaryOperatorKind
    CtReturn
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.ExpressionTemplate
        <-- spoon.test.intercession.IntercessionTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtStatement
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.ParentNotInitializedException
    CtStatementList
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
    CtSuperAccess
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtSuperAccessImpl
    CtSwitch
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.SwitchCaseTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtSynchronized
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtTargetedAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtTargetedExpression
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.secondaryclasses.ClassesTest
        --> E *
    CtThisAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
    CtThrow
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.intercession.IntercessionTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtTry
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.template.TemplateParameter
    CtUnaryOperator
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    CtVariableAccess
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.casts.CastTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtWhile
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
    UnaryOperatorKind
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.visitor.SignaturePrinter
spoon.reflect.cu
    CompilationUnit
        <-- spoon.reflect.cu.SourcePosition
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.reflect.visitor.PrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.processing.TestProcessor
        --> java.io.File *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
    Import
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.support.reflect.cu.ImportImpl
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
    SourceCodeFragment
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        --> java.lang.Object *
        --> java.lang.String *
    SourcePosition
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.sourcePosition.SourcePositionTest
        --> java.io.File *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
spoon.reflect.declaration
    CtAnnotation
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.annotation.AnnotationTest
        --> A *
        --> T *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Map *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtAnnotationType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
    CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.initializers.InitializerTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.template.TemplateParameter
    CtClass
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtCodeSnippet
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.String *
    CtConstructor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ProcessingTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtElement
        <-- spoon.compiler.Environment
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.AnnotationProcessor
        <-- spoon.processing.ProcessingManager
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtContinue
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtLoop
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.code.CtStatementList
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.PartialEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.CtLineElementComparator
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> A *
        --> P *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ReferenceFilter
    CtEnum
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.test.enums.EnumsTest
        --> java.util.List *
    CtExecutable
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.TemplateParameter
    CtField
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtGenericElement
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtInterface
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
    CtMethod
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
    CtModifiable
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.util.Set *
        --> spoon.reflect.declaration.ModifierKind
    CtNamedElement
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
    CtPackage
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtPackageReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        --> T *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
    CtParameter
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.generics.GenericsTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    CtSimpleType
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.cu.CompilationUnit
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TemplateParameter
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.api.APITest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> N *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Deprecated *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtType
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtNewClass
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtTypeParameter
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtTypedElement
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtVariable
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtLocalVariableReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    ModifierKind
        <-- spoon.reflect.declaration.CtModifiable
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.util.RtHelper
        <-- spoon.test.initializers.InitializerTest
        --> java.lang.Enum *
        --> java.lang.String *
        --> java.util.Locale *
    ParentNotInitializedException
        <-- spoon.reflect.code.CtStatement
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.template.TemplateMatcher
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
spoon.reflect.eval
    PartialEvaluator
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        --> R *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
    StepKind
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluationPath
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
    SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Stack *
        --> java.util.Vector *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
    SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Map *
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
    SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.template.TemplateParameter
    SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicHeap
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.HashMap *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    SymbolicInstance
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    SymbolicStackFrame
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicEvaluationStep
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
spoon.reflect.eval.observer
    SymbolicEvaluationPathsMaker
        <-- spoon.reflect.factory.EvalFactory
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> spoon.reflect.eval.SymbolicEvaluationPath
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    SymbolicEvaluationPrinter
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.compiler.Environment
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.reflect.factory
    AnnotationFactory
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    ClassFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    CodeFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        --> E *
        --> R *
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    CompilationUnitFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> java.io.File *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.Import
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.reflect.cu.ImportImpl
    ConstructorFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.template.Substitution
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.util.Arrays *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.TemplateParameter
    CoreFactory
        <-- spoon.Launcher
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.parent.ParentTest
        --> T *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    EnumFactory
        <-- spoon.reflect.factory.FactoryImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    EvalFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Map *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
    ExecutableFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.processing.TestProcessor
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.StringTokenizer *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    Factory
        <-- spoon.Launcher
        <-- spoon.processing.AbstractManualProcessor
        <-- spoon.processing.AbstractProblemFixer
        <-- spoon.processing.AbstractProcessor
        <-- spoon.processing.FactoryAccessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.ModelStreamer
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.SubFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.SpoonletXmlHandler
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.CompilationUnitImpl
        <-- spoon.support.reflect.cu.SourcePositionImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.io.Serializable *
        --> spoon.compiler.Environment
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    FactoryImpl
        <-- spoon.Launcher
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        --> java.io.Serializable *
        --> java.lang.Object *
        --> spoon.compiler.Environment
        --> spoon.reflect.factory.AnnotationFactory
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.EnumFactory
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.InterfaceFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
    FieldFactory
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Field *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    InterfaceFactory
        <-- spoon.reflect.factory.FactoryImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
    MethodFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.processing.TestProcessor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.TemplateParameter
    PackageFactory
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Package *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.StringTokenizer *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
    SubFactory
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.Query
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Object *
        --> spoon.reflect.factory.Factory
    TypeFactory
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.ClassFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.EnumFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.Factory
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.InterfaceFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.visibility.VisibilityTest
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Date *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
spoon.reflect.reference
    CtAnnonTypeParameterReference
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtArrayTypeReference
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.processing.ArrayResizeProcessor
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtExecutableReference
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.secondaryclasses.ClassesTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtFieldReference
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.reflect.Member *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtGenericElementReference
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtLocalVariableReference
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
    CtPackageReference
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        --> java.lang.Comparable *
        --> java.lang.Package *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
    CtParameterReference
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.test.generics.GenericsTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
    CtReference
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.cu.Import
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtNamedElement
        <-- spoon.reflect.declaration.CtPackage
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluationPath
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.PackageFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtParameterReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtTypeReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        --> A *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
    CtTypeParameterReference
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.generics.GenericsTest
        --> java.lang.Comparable *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
    CtTypeReference
        <-- spoon.processing.AbstractAnnotationProcessor
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.reflect.code.CtExpression
        <-- spoon.reflect.declaration.CtAnnotation
        <-- spoon.reflect.declaration.CtClass
        <-- spoon.reflect.declaration.CtConstructor
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtGenericElement
        <-- spoon.reflect.declaration.CtSimpleType
        <-- spoon.reflect.declaration.CtType
        <-- spoon.reflect.declaration.CtTypeParameter
        <-- spoon.reflect.declaration.CtTypedElement
        <-- spoon.reflect.eval.SymbolicHeap
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.AnnotationFactory
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.factory.TypeFactory
        <-- spoon.reflect.reference.CtAnnonTypeParameterReference
        <-- spoon.reflect.reference.CtArrayTypeReference
        <-- spoon.reflect.reference.CtExecutableReference
        <-- spoon.reflect.reference.CtFieldReference
        <-- spoon.reflect.reference.CtGenericElementReference
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.reference.CtTypeParameterReference
        <-- spoon.reflect.reference.CtVariableReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
    CtVariableReference
        <-- spoon.reflect.code.CtAnnotationFieldAccess
        <-- spoon.reflect.code.CtFieldAccess
        <-- spoon.reflect.code.CtLocalVariable
        <-- spoon.reflect.code.CtTargetedAccess
        <-- spoon.reflect.code.CtVariableAccess
        <-- spoon.reflect.declaration.CtField
        <-- spoon.reflect.declaration.CtParameter
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluationStack
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.eval.SymbolicStackFrame
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.CompilationUnitFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.processing.XmlProcessorProperties
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.cu.ImportImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.generics.GenericsTest
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
spoon.reflect.visitor
    Child
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
    CtAbstractVisitor
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.Collection *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
    CtInheritanceScanner
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
    CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.template.TemplateTest
        --> E *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
    CtStackScanner
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.Stack *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
    CtVisitor
        <-- spoon.Launcher
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.reflect.reference.CtReference
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtStackScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.ModelConsistencyChecker
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        <-- spoon.support.SerializationModelStreamer
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.gui.SpoonModelTree
        <-- spoon.support.gui.SpoonTreeBuilder
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.visitor.ProcessingVisitor
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.template.TemplateTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.template.TemplateParameter
    DefaultJavaPrettyPrinter
        <-- spoon.Launcher
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.LinesTest
        --> E *
        --> T *
        --> byte *
        --> java.io.PrintStream *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.SuppressWarnings *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.HashMap *
        --> java.util.LinkedList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeMap *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.reflect.cu.CtLineElementComparator
        --> spoon.support.util.SortedList
        --> spoon.template.TemplateParameter
spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
    ImportScanner
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
    Printingcontext
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.test.generics.GenericsTest
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Stack *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
spoon.reflect.visitor
    Filter
        <-- spoon.reflect.code.CtBlock
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.QueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.NameFilter
        <-- spoon.reflect.visitor.filter.RegexFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.trycatch.TryCatchTest
        --> T *
        --> java.lang.Class *
    FragmentDrivenJavaPrettyPrinter
        <-- spoon.Launcher
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.UnsupportedOperationException *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.visitor.PrettyPrinter
    JavaIdentifiers
        --> java.lang.Character *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.StringTokenizer *
    ModelConsistencyChecker
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.test.template.TemplateTest
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Stack *
        --> java.util.Vector *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
    Parent
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
    PrettyPrinter
        <-- spoon.Launcher
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        <-- spoon.support.JavaOutputProcessor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.prettyprinter.LinesTest
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
    Query
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.QueryVisitor
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.ReferenceQueryVisitor
    QueryVisitor
        <-- spoon.reflect.visitor.Query
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
    ReferenceFilter
        <-- spoon.reflect.declaration.CtElement
        <-- spoon.reflect.visitor.Query
        <-- spoon.reflect.visitor.ReferenceQueryVisitor
        <-- spoon.reflect.visitor.filter.AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
        --> T *
        --> java.lang.Class *
    ReferenceQueryVisitor
        <-- spoon.reflect.visitor.Query
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.ReferenceFilter
    Root
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
spoon.reflect.visitor.filter
    AbstractFilter
        <-- spoon.reflect.visitor.filter.AnnotationFilter
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.TypeFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.trycatch.TryCatchTest
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.reflect.visitor.Filter
    AbstractReferenceFilter
        <-- spoon.reflect.visitor.filter.DirectReferenceFilter
        <-- spoon.reflect.visitor.filter.ReferenceTypeFilter
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.reflect.visitor.ReferenceFilter
    AnnotationFilter
        <-- spoon.support.reflect.declaration.CtElementImpl
        --> E *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
    CompositeFilter
        <-- spoon.test.filters.FilterTest
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.FilteringOperator
    DirectReferenceFilter
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
    FieldAccessFilter
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
    FilteringOperator
        <-- spoon.reflect.visitor.filter.CompositeFilter
        <-- spoon.test.filters.FilterTest
    InvocationFilter
        <-- spoon.template.TemplateMatcher
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
    NameFilter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.template.TemplateTest
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.visitor.Filter
    ReferenceTypeFilter
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.template.Substitution
        --> T *
        --> java.lang.Class *
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
    RegexFilter
        <-- spoon.test.filters.FilterTest
        --> E *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
    ReturnOrThrowFilter
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
    TypeFilter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.trycatch.TryCatchTest
        --> T *
        --> java.lang.Class *
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
    VariableAccessFilter
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.template.TemplateParameter
spoon.support
    DefaultCoreFactory
        <-- spoon.Launcher
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Cloneable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> spoon.support.reflect.code.CtArrayAccessImpl
        --> spoon.support.reflect.code.CtAssertImpl
        --> spoon.support.reflect.code.CtAssignmentImpl
        --> spoon.support.reflect.code.CtBinaryOperatorImpl
        --> spoon.support.reflect.code.CtBlockImpl
        --> spoon.support.reflect.code.CtBreakImpl
        --> spoon.support.reflect.code.CtCaseImpl
        --> spoon.support.reflect.code.CtCatchImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        --> spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> spoon.support.reflect.code.CtConditionalImpl
        --> spoon.support.reflect.code.CtContinueImpl
        --> spoon.support.reflect.code.CtDoImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtFieldAccessImpl
        --> spoon.support.reflect.code.CtForEachImpl
        --> spoon.support.reflect.code.CtForImpl
        --> spoon.support.reflect.code.CtIfImpl
        --> spoon.support.reflect.code.CtInvocationImpl
        --> spoon.support.reflect.code.CtLiteralImpl
        --> spoon.support.reflect.code.CtLocalVariableImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtNewArrayImpl
        --> spoon.support.reflect.code.CtNewClassImpl
        --> spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> spoon.support.reflect.code.CtReturnImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtStatementListImpl
        --> spoon.support.reflect.code.CtSuperAccessImpl
        --> spoon.support.reflect.code.CtSwitchImpl
        --> spoon.support.reflect.code.CtSynchronizedImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.code.CtThisAccessImpl
        --> spoon.support.reflect.code.CtThrowImpl
        --> spoon.support.reflect.code.CtTryImpl
        --> spoon.support.reflect.code.CtUnaryOperatorImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.code.CtWhileImpl
        --> spoon.support.reflect.cu.CompilationUnitImpl
        --> spoon.support.reflect.cu.SourcePositionImpl
        --> spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        --> spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.declaration.CtAnnotationTypeImpl
        --> spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        --> spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtConstructorImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtEnumImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtFieldImpl
        --> spoon.support.reflect.declaration.CtInterfaceImpl
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtPackageImpl
        --> spoon.support.reflect.declaration.CtParameterImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
        --> spoon.support.reflect.declaration.CtTypeParameterImpl
        --> spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        --> spoon.support.reflect.reference.CtExecutableReferenceImpl
        --> spoon.support.reflect.reference.CtFieldReferenceImpl
        --> spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        --> spoon.support.reflect.reference.CtPackageReferenceImpl
        --> spoon.support.reflect.reference.CtParameterReferenceImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    JavaOutputProcessor
        <-- spoon.Launcher
        <-- spoon.test.api.APITest
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.ArrayList *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.PrettyPrinter
    QueueProcessingManager
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.LinkedList *
        --> java.util.Queue *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    RuntimeProcessingManager
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.util.Collection *
        --> java.util.LinkedList *
        --> java.util.List *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.util.Timer
        --> spoon.support.visitor.ProcessingVisitor
    SerializationModelStreamer
        <-- spoon.support.gui.SpoonModelTree
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.ObjectInputStream *
        --> java.io.ObjectOutputStream *
        --> java.io.OutputStream *
        --> java.io.Serializable *
        --> java.lang.ClassNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.util.Collection *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.ModelStreamer
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.SerializationModelStreamer$
spoonsupportSerializationModelStreamer$
    
        <-- spoon.support.SerializationModelStreamer
spoon.support
    StandardEnvironment
        <-- spoon.Launcher
        <-- spoon.reflect.factory.FactoryImpl
        <-- spoon.test.TestUtils
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.generics.GenericsTest
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Thread *
        --> java.lang.reflect.Array *
        --> java.util.Map *
        --> java.util.TreeMap *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.xml.sax.SAXException *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.ProcessorProperties
        --> spoon.processing.Severity
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.support.processing.XmlProcessorProperties
spoon.support.compiler
    FileSystemFile
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.FileSystemFolder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
    FileSystemFolder
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.io.File *
        --> java.io.FileNotFoundException *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.support.compiler.FileSystemFile
    SnippetCompilationError
        <-- spoon.reflect.code.CtCodeSnippetExpression
        <-- spoon.reflect.code.CtCodeSnippetStatement
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.SpoonException
    SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper$
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTSnippetCompiler
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoonsupportcompilerSnippetCompilationHelper$
    
        <-- spoon.support.compiler.SnippetCompilationHelper
spoon.support.compiler
    VirtualFile
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.support.compiler.VirtualFolder
    VirtualFolder
        <-- spoon.support.compiler.VirtualFile
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> java.io.File *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
    ZipFile
        <-- spoon.support.compiler.ZipFolder
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.InputStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.support.compiler.ZipFolder
    ZipFolder
        <-- spoon.Launcher
        <-- spoon.compiler.SpoonResourceHelper
        <-- spoon.support.compiler.ZipFile
        --> java.io.BufferedInputStream *
        --> java.io.ByteArrayOutputStream *
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.io.FileNotFoundException *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.zip.ZipEntry *
        --> java.util.zip.ZipInputStream *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.support.compiler.ZipFile
spoon.support.compiler.jdt
    CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        --> java.io.InputStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.Map *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
    CompilerClassLoader
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> java.lang.ClassLoader *
        --> java.lang.reflect.Array *
        --> java.net.URLClassLoader *
    JDTBasedSpoonCompiler
        <-- spoon.Launcher
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.CompilationUnitWrapper
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.TreeBuilderRequestor
        --> java.io.ByteArrayInputStream *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.OutputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.io.Serializable *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.net.URI *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.FileUtils *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem *
        --> org.eclipse.jdt.core.compiler.IProblem *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.util.Util *
        --> spoon.Launcher
        --> spoon.OutputType
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.compiler.InvalidClassPathException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.ProcessingManager
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.FragmentDrivenJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.QueueProcessingManager
        --> spoon.support.compiler.FileSystemFile
        --> spoon.support.compiler.FileSystemFolder
        --> spoon.support.compiler.VirtualFolder
        --> spoon.support.compiler.jdt.CompilerClassLoader
        --> spoon.support.compiler.jdt.JDTBatchCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
        --> spoon.support.compiler.jdt.TreeBuilderRequestor
    JDTBatchCompiler
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        --> java.io.InputStream *
        --> java.io.PrintStream *
        --> java.io.PrintWriter *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> org.apache.commons.io.IOUtils *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.core.compiler.CompilationProgress *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.Compiler *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy *
        --> org.eclipse.jdt.internal.compiler.IProblemFactory *
        --> org.eclipse.jdt.internal.compiler.batch.CompilationUnit *
        --> org.eclipse.jdt.internal.compiler.batch.FileSystem *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions *
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonResource
        --> spoon.processing.FactoryAccessor
        --> spoon.support.compiler.jdt.CompilationUnitWrapper
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTBatchCompiler$
        --> spoon.support.compiler.jdt.TreeBuilderCompiler
        --> spoon.support.compiler.jdt.TreeBuilderRequestor
spoonsupportcompilerjdtJDTBatchCompiler$
    
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
spoon.support.compiler.jdt
    JDTSnippetCompiler
        <-- spoon.support.compiler.SnippetCompilationHelper
        --> java.io.File *
        --> java.lang.ClassLoader *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.net.URL *
        --> java.net.URLClassLoader *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.core.compiler.CategorizedProblem *
        --> org.eclipse.jdt.core.compiler.IProblem *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.batch.Main *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonFile
        --> spoon.compiler.SpoonFolder
        --> spoon.compiler.SpoonResource
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.factory.Factory
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.VirtualFile
        --> spoon.support.compiler.VirtualFolder
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        --> spoon.support.compiler.jdt.JDTBatchCompiler
        --> spoon.support.compiler.jdt.JDTTreeBuilder
    JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTSnippetCompiler
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.StringIndexOutOfBoundsException *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.TreeSet *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.ast.AND_AND_Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
        --> org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.AllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.Annotation *
        --> org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.Argument *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayInitializer *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayReference *
        --> org.eclipse.jdt.internal.compiler.ast.ArrayTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.AssertStatement *
        --> org.eclipse.jdt.internal.compiler.ast.Assignment *
        --> org.eclipse.jdt.internal.compiler.ast.BinaryExpression *
        --> org.eclipse.jdt.internal.compiler.ast.Block *
        --> org.eclipse.jdt.internal.compiler.ast.BreakStatement *
        --> org.eclipse.jdt.internal.compiler.ast.CaseStatement *
        --> org.eclipse.jdt.internal.compiler.ast.CastExpression *
        --> org.eclipse.jdt.internal.compiler.ast.CharLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.ClassLiteralAccess *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.CompoundAssignment *
        --> org.eclipse.jdt.internal.compiler.ast.ConditionalExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ConstructorDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.ContinueStatement *
        --> org.eclipse.jdt.internal.compiler.ast.DoStatement *
        --> org.eclipse.jdt.internal.compiler.ast.DoubleLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.EqualExpression *
        --> org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall *
        --> org.eclipse.jdt.internal.compiler.ast.Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ExtendedStringLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.FalseLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.FieldDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.FieldReference *
        --> org.eclipse.jdt.internal.compiler.ast.FloatLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.ForStatement *
        --> org.eclipse.jdt.internal.compiler.ast.ForeachStatement *
        --> org.eclipse.jdt.internal.compiler.ast.IfStatement *
        --> org.eclipse.jdt.internal.compiler.ast.Initializer *
        --> org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression *
        --> org.eclipse.jdt.internal.compiler.ast.IntLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.Javadoc *
        --> org.eclipse.jdt.internal.compiler.ast.LabeledStatement *
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.LongLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.MemberValuePair *
        --> org.eclipse.jdt.internal.compiler.ast.MessageSend *
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.NameReference *
        --> org.eclipse.jdt.internal.compiler.ast.NormalAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.NullLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.OR_OR_Expression *
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedQualifiedTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.ParameterizedSingleTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.PostfixExpression *
        --> org.eclipse.jdt.internal.compiler.ast.PrefixExpression *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedNameReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedSuperReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedThisReference *
        --> org.eclipse.jdt.internal.compiler.ast.QualifiedTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.ReturnStatement *
        --> org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation *
        --> org.eclipse.jdt.internal.compiler.ast.SingleNameReference *
        --> org.eclipse.jdt.internal.compiler.ast.SingleTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.Statement *
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.StringLiteralConcatenation *
        --> org.eclipse.jdt.internal.compiler.ast.SuperReference *
        --> org.eclipse.jdt.internal.compiler.ast.SwitchStatement *
        --> org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement *
        --> org.eclipse.jdt.internal.compiler.ast.ThisReference *
        --> org.eclipse.jdt.internal.compiler.ast.ThrowStatement *
        --> org.eclipse.jdt.internal.compiler.ast.TrueLiteral *
        --> org.eclipse.jdt.internal.compiler.ast.TryStatement *
        --> org.eclipse.jdt.internal.compiler.ast.TypeDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.TypeParameter *
        --> org.eclipse.jdt.internal.compiler.ast.TypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.UnaryExpression *
        --> org.eclipse.jdt.internal.compiler.ast.UnionTypeReference *
        --> org.eclipse.jdt.internal.compiler.ast.WhileStatement *
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit *
        --> org.eclipse.jdt.internal.compiler.impl.Constant *
        --> org.eclipse.jdt.internal.compiler.lookup.Binding *
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope *
        --> org.eclipse.jdt.internal.compiler.lookup.ClassScope *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope *
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.Scope *
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.compiler.jdt.JDTTreeBuilder$
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        --> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        --> spoon.support.compiler.jdt.ParentExiter
        --> spoon.template.TemplateParameter
spoonsupportcompilerjdtJDTTreeBuilder$
    
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
    ASTPair
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
    BuilderContext
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.ParentExiter
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.eclipse.jdt.internal.compiler.ast.ASTNode *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.ast.Expression *
        --> org.eclipse.jdt.internal.compiler.ast.MethodDeclaration *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CompilationUnitFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ASTPair
        --> spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
        --> spoon.support.compiler.jdt.ParentExiter
        --> spoon.template.TemplateParameter
spoon.support.compiler.jdt.JDTTreeBuilder$ReferenceBuilder
    ReferenceBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> org.eclipse.jdt.internal.compiler.ast.Argument *
        --> org.eclipse.jdt.internal.compiler.ast.LocalDeclaration *
        --> org.eclipse.jdt.internal.compiler.impl.ReferenceContext *
        --> org.eclipse.jdt.internal.compiler.lookup.ArrayBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.Binding *
        --> org.eclipse.jdt.internal.compiler.lookup.BlockScope *
        --> org.eclipse.jdt.internal.compiler.lookup.CaptureBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.FieldBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.LocalTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodScope *
        --> org.eclipse.jdt.internal.compiler.lookup.PackageBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ParameterizedTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.RawTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.Scope *
        --> org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.TypeVariableBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.VariableBinding *
        --> org.eclipse.jdt.internal.compiler.lookup.WildcardBinding *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.compiler.jdt.JDTTreeBuilder
spoon.support.compiler.jdt
    ParentExiter
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> E *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.eclipse.jdt.internal.compiler.ASTVisitor *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.compiler.jdt.JDTTreeBuilder
        --> spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        --> spoon.template.TemplateParameter
    TreeBuilderCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        --> java.io.PrintWriter *
        --> java.lang.reflect.Array *
        --> org.eclipse.jdt.core.compiler.CompilationProgress *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.Compiler *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> org.eclipse.jdt.internal.compiler.IErrorHandlingPolicy *
        --> org.eclipse.jdt.internal.compiler.IProblemFactory *
        --> org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration *
        --> org.eclipse.jdt.internal.compiler.env.INameEnvironment *
        --> org.eclipse.jdt.internal.compiler.impl.CompilerOptions *
        --> org.eclipse.jdt.internal.compiler.lookup.CompilationUnitScope *
        --> org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment *
        --> org.eclipse.jdt.internal.compiler.lookup.MethodVerifier *
        --> org.eclipse.jdt.internal.compiler.parser.Parser *
    TreeBuilderRequestor
        <-- spoon.support.compiler.jdt.JDTBasedSpoonCompiler
        <-- spoon.support.compiler.jdt.JDTBatchCompiler
        --> java.lang.Object *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> org.eclipse.jdt.internal.compiler.CompilationResult *
        --> org.eclipse.jdt.internal.compiler.ICompilerRequestor *
        --> spoon.compiler.SpoonCompiler
        --> spoon.processing.FactoryAccessor
        --> spoon.support.compiler.jdt.JDTBasedSpoonCompiler
spoon.support.gui
    SpoonModelTree
        <-- spoon.Launcher
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.Frame *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.GridLayout *
        --> java.awt.LayoutManager *
        --> java.awt.Window *
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.awt.event.ComponentEvent *
        --> java.awt.event.KeyEvent *
        --> java.awt.event.KeyListener *
        --> java.awt.event.MouseEvent *
        --> java.awt.event.MouseListener *
        --> java.io.File *
        --> java.io.FileOutputStream *
        --> java.io.IOException *
        --> java.io.OutputStream *
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.Enumeration *
        --> javax.swing.AbstractButton *
        --> javax.swing.JFileChooser *
        --> javax.swing.JFrame *
        --> javax.swing.JMenuItem *
        --> javax.swing.JOptionPane *
        --> javax.swing.JPanel *
        --> javax.swing.JPopupMenu *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTree *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.TreePath *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.ModelStreamer
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.SerializationModelStreamer
        --> spoon.support.gui.SpoonModelTree$
        --> spoon.support.gui.SpoonObjectFieldsTable
        --> spoon.support.gui.SpoonTreeBuilder
spoonsupportguiSpoonModelTree$
    
        <-- spoon.support.gui.SpoonModelTree
spoon.support.gui
    SpoonObjectFieldsTable
        <-- spoon.support.gui.SpoonModelTree
        --> java.awt.BorderLayout *
        --> java.awt.Component *
        --> java.awt.Container *
        --> java.awt.DisplayMode *
        --> java.awt.Frame *
        --> java.awt.GraphicsConfiguration *
        --> java.awt.GraphicsDevice *
        --> java.awt.LayoutManager *
        --> java.awt.Window *
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> javax.swing.JFrame *
        --> javax.swing.JPanel *
        --> javax.swing.JScrollPane *
        --> javax.swing.JTable *
        --> javax.swing.table.AbstractTableModel *
        --> spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
spoon.support.gui.SpoonObjectFieldsTable$SpoonObjectTableModel
    SpoonObjectTableModel
        <-- spoon.support.gui.SpoonObjectFieldsTable
        --> java.lang.Class *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.List *
        --> javax.swing.table.AbstractTableModel *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
spoon.support.gui
    SpoonTreeBuilder
        <-- spoon.support.gui.SpoonModelTree
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Stack *
        --> javax.swing.tree.DefaultMutableTreeNode *
        --> javax.swing.tree.MutableTreeNode *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.gui.SpoonTreeBuilder$
spoonsupportguiSpoonTreeBuilder$
    
        <-- spoon.support.gui.SpoonTreeBuilder
spoon.support.processing
    SpoonletXmlHandler
        <-- spoon.Launcher
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonResource
        --> spoon.processing.ProcessorProperties
        --> spoon.reflect.factory.Factory
        --> spoon.support.processing.XmlProcessorProperties
    XmlProcessorProperties
        <-- spoon.processing.XMLAnnotationProcessor
        <-- spoon.support.StandardEnvironment
        <-- spoon.support.processing.SpoonletXmlHandler
        --> T *
        --> byte *
        --> java.io.IOException *
        --> java.io.InputStream *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> org.xml.sax.ContentHandler *
        --> org.xml.sax.InputSource *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.XMLReader *
        --> org.xml.sax.helpers.DefaultHandler *
        --> org.xml.sax.helpers.XMLReaderFactory *
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.ProcessorProperties
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.processing.XmlProcessorProperties$Loader
spoon.support.processing.XmlProcessorProperties$Loader
    Loader
        <-- spoon.support.processing.XmlProcessorProperties
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Map *
        --> org.xml.sax.Attributes *
        --> org.xml.sax.SAXException *
        --> org.xml.sax.helpers.DefaultHandler *
spoon.support.reflect.code
    CtAnnotationFieldAccesImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtFieldAccessImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtArrayAccessImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtAssertImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtAssignmentImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBinaryOperatorImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBlockImpl
        <-- spoon.support.DefaultCoreFactory
        --> R *
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtBreakImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtCaseImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCatchImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCodeElementImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtCodeSnippetExpressionImpl
        <-- spoon.support.DefaultCoreFactory
        --> E *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtCodeSnippetStatementImpl
        <-- spoon.support.DefaultCoreFactory
        --> S *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.compiler.SnippetCompilationError
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtConditionalImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtContinueImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtDoImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtExpressionImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtFieldAccessImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtForEachImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtForImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtIfImpl
        <-- spoon.support.DefaultCoreFactory
        --> S *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtInvocationImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLiteralImpl
        <-- spoon.support.DefaultCoreFactory
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLocalVariableImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtLoopImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtNewArrayImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtNewClassImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.code.CtTargetedExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtOperatorAssignmentImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtAssignmentImpl
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtReturnImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtStatementImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Iterable *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtStatementListImpl
        <-- spoon.support.DefaultCoreFactory
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Iterator *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
    CtSuperAccessImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtSuperAccess
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtTargetedAccessImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtSwitchImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtSynchronizedImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTargetedAccessImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtVariableAccessImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTargetedExpressionImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtThisAccessImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtThrowImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Void *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtTryImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.Void *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtUnaryOperatorImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtVariableAccessImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        --> T *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtExpressionImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtWhileImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtLoopImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoon.support.reflect.cu
    CompilationUnitImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CompilationUnitVirtualImpl
        --> java.io.File *
        --> java.io.FileInputStream *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourceCodeFragment
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
    CtLineElementComparator
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> java.lang.Comparable *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.util.Comparator *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
    ImportImpl
        <-- spoon.reflect.factory.CompilationUnitFactory
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.Import
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
    SourcePositionImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.File *
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.factory.Factory
spoon.support.reflect.declaration
    CompilationUnitVirtualImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.lang.Override *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.support.reflect.cu.CompilationUnitImpl
    CtAnnotationImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        --> A *
        --> E *
        --> T *
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Proxy *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Map$Entry *
        --> java.util.Set *
        --> java.util.TreeMap *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtAnnotationImpl$ *
        --> spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoonsupportreflectdeclarationCtAnnotationImpl$ *
     *
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
    AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.InvocationHandler *
        --> java.lang.reflect.Method *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.reflect.declaration.CtAnnotationImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
spoon.support.reflect.declaration
    CtAnnotationTypeImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtAnonymousExecutableImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.template.TemplateParameter
    CtClassImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtEnumImpl
        --> R *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.UnsupportedOperationException *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.code.CtCodeElementImpl
        --> spoon.support.reflect.code.CtStatementImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
        --> spoon.support.reflect.eval.VisitorPartialEvaluator
    CtConstructorImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtElementImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtBreakImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtCodeSnippetStatementImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtContinueImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtStatementListImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtNamedElementImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.support.reflect.declaration.CtTypeParameterImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.filters.FilterTest
        --> A *
        --> P *
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalArgumentException *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ModelConsistencyChecker
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.AnnotationFilter
        --> spoon.support.reflect.declaration.CtElementImpl$
        --> spoon.support.reflect.declaration.CtUncomparableException
        --> spoon.support.util.RtHelper
        --> spoon.support.visitor.SignaturePrinter
        --> spoon.support.visitor.TypeReferenceScanner
spoonsupportreflectdeclarationCtElementImpl$
    
        <-- spoon.support.reflect.declaration.CtElementImpl
spoon.support.reflect.declaration
    CtEnumImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.ArrayList *
        --> java.util.Collections *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtClassImpl
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
    CtExecutableImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.filters.FilterTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtFieldImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtInterfaceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.util.Collection *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> spoon.support.reflect.declaration.CtTypeImpl
    CtMethodImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.filters.FilterTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtNamedElementImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtConstructorImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtMethodImpl
        <-- spoon.support.reflect.declaration.CtPackageImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        <-- spoon.test.factory.FactoryTest$MyCtMethod
        <-- spoon.test.filters.FilterTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtReference
        --> spoon.support.reflect.declaration.CtElementImpl
    CtPackageImpl
        <-- spoon.support.DefaultCoreFactory
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
    CtParameterImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
    CtSimpleTypeImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtAnnotationTypeImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtTypeImpl
        --> N *
        --> NestedTypeScanner *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        --> spoon.support.compiler.SnippetCompilationHelper
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
spoon.support.reflect.declaration.CtSimpleTypeImpl$NestedTypeScanner
    NestedTypeScanner
        <-- spoon.support.reflect.declaration.CtSimpleTypeImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
spoon.support.reflect.declaration
    CtTypeImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtClassImpl
        <-- spoon.support.reflect.declaration.CtEnumImpl
        <-- spoon.support.reflect.declaration.CtInterfaceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.support.reflect.declaration.CtSimpleTypeImpl
    CtTypeParameterImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
    CtUncomparableException
        <-- spoon.support.reflect.declaration.CtElementImpl
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
spoon.support.reflect.eval
    ReturnException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.template.TemplateParameter
    SymbolicWrappedException
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.RuntimeException *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicInstance
    VisitorPartialEvaluator
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.code.CtCodeElementImpl
        <-- spoon.support.reflect.declaration.CtClassImpl
        --> R *
        --> T *
        --> byte *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> short *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.PartialEvaluator
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.util.RtHelper
        --> spoon.template.TemplateParameter
    VisitorSymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicEvaluatorObserver
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPathsMaker
        <-- spoon.reflect.eval.observer.SymbolicEvaluationPrinter
        <-- spoon.reflect.factory.EvalFactory
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> T *
        --> byte *
        --> java.lang.Byte *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Long *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.Stack *
        --> java.util.Vector *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> short *
        --> spoon.SpoonException
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.eval.StepKind
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicEvaluationStep
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicEvaluatorObserver
        --> spoon.reflect.eval.SymbolicHeap
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.eval.SymbolicStackFrame
        --> spoon.reflect.factory.EvalFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.reflect.eval.ReturnException
        --> spoon.support.reflect.eval.SymbolicWrappedException
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
        --> spoon.template.TemplateParameter
spoon.support.reflect.eval.VisitorSymbolicEvaluator$BranchingPoint
    BranchingPoint
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Arrays *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.eval.SymbolicEvaluationStack
        --> spoon.reflect.eval.SymbolicEvaluator
        --> spoon.reflect.eval.SymbolicInstance
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.eval.VisitorSymbolicEvaluator
spoon.support.reflect.reference
    CtArrayTypeReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtExecutableReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.ClassCastException *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.RtHelper
    CtFieldReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Member *
        --> java.lang.reflect.Method *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
        --> spoon.support.util.RtHelper
    CtLocalVariableReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtPackageReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.lang.Package *
        --> java.lang.String *
        --> java.lang.reflect.AnnotatedElement *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.reference.CtReferenceImpl
    CtParameterReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.IllegalStateException *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtVariableReferenceImpl
    CtReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtPackageReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtVariableReferenceImpl
        --> A *
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.annotation.Annotation *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Method *
        --> java.util.Arrays *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.support.visitor.SignaturePrinter
    CtTypeParameterReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        --> A *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.AnnotatedElement *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.reflect.reference.CtTypeReferenceImpl
    CtTypeReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.reference.CtArrayTypeReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeParameterReferenceImpl
        --> A *
        --> byte *
        --> java.io.Serializable *
        --> java.lang.Boolean *
        --> java.lang.Byte *
        --> java.lang.Character *
        --> java.lang.Class *
        --> java.lang.ClassLoader *
        --> java.lang.Comparable *
        --> java.lang.Double *
        --> java.lang.Exception *
        --> java.lang.Float *
        --> java.lang.Integer *
        --> java.lang.Long *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.Short *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Thread *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.AnnotatedElement *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Constructor *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Method *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> short *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.reference.CtReferenceImpl
        --> spoon.support.util.RtHelper
    CtVariableReferenceImpl
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtLocalVariableReferenceImpl
        <-- spoon.support.reflect.reference.CtParameterReferenceImpl
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.reflect.reference.CtReferenceImpl
spoon.support.template
    DefaultParameterMatcher
        <-- spoon.template.Parameter
        <-- spoon.template.TemplateMatcher
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.support.template.ParameterMatcher
        --> spoon.template.TemplateMatcher
    ParameterMatcher
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.template.Parameter
        <-- spoon.template.TemplateMatcher
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.reference.CtReference
        --> spoon.template.TemplateMatcher
    Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Number *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.List *
        --> java.util.Map *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.support.template.Parameters$
        --> spoon.support.template.UndefinedParameterException
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
spoonsupporttemplateParameters$
    
        <-- spoon.support.template.Parameters
spoon.support.template
    SkipException
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> spoon.SpoonException
    SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.support.template.Parameters
        --> spoon.support.template.SkipException
        --> spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        --> spoon.support.template.UndefinedParameterException
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
    InheritanceSustitutionScanner
        <-- spoon.support.template.SubstitutionVisitor
        --> java.io.Serializable *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FieldFactory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtInheritanceScanner
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.VariableAccessFilter
        --> spoon.support.template.Parameters
        --> spoon.support.template.SkipException
        --> spoon.support.template.SubstitutionVisitor
        --> spoon.template.Local
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
spoon.support.template
    UndefinedParameterException
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
spoon.support.util
    BasicCompilationUnit
        --> java.io.File *
        --> java.io.IOException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> org.eclipse.jdt.core.compiler.CharOperation *
        --> org.eclipse.jdt.internal.compiler.env.ICompilationUnit *
        --> org.eclipse.jdt.internal.compiler.util.Util *
    NotDirectlyModifiableList
        --> E *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.Collection *
    NotDirectlyModifiableSet
        --> E *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.util.AbstractSet *
        --> java.util.Collection *
        --> java.util.TreeSet *
    RtHelper
        <-- spoon.processing.AbstractProcessor
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.reference.CtExecutableReferenceImpl
        <-- spoon.support.reflect.reference.CtFieldReferenceImpl
        <-- spoon.support.reflect.reference.CtTypeReferenceImpl
        <-- spoon.support.template.Parameters
        <-- spoon.template.TemplateMatcher
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.IllegalAccessException *
        --> java.lang.NoSuchMethodException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.InvocationTargetException *
        --> java.lang.reflect.Method *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> java.util.TreeSet *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.TemplateParameter
    SortedList
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> E *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.util.Collection *
        --> java.util.Comparator *
        --> java.util.LinkedList *
    Timer
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.System *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Stack *
spoon.support.visitor
    ProcessingVisitor
        <-- spoon.support.QueueProcessingManager
        <-- spoon.support.RuntimeProcessingManager
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.TraversalStrategy
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
    SignaturePrinter
        <-- spoon.support.reflect.declaration.CtElementImpl
        <-- spoon.support.reflect.reference.CtReferenceImpl
        --> E *
        --> T *
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Enum *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.NullPointerException *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.StringBuffer *
        --> java.lang.Throwable *
        --> java.util.List *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtAnnotationFieldAccess
        --> spoon.reflect.code.CtArrayAccess
        --> spoon.reflect.code.CtAssert
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtBreak
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtConditional
        --> spoon.reflect.code.CtContinue
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtForEach
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtNewArray
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtOperatorAssignment
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.code.CtSynchronized
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtThisAccess
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.code.CtUnaryOperator
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.code.CtWhile
        --> spoon.reflect.code.UnaryOperatorKind
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypeParameter
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtLocalVariableReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
    TypeReferenceScanner
        <-- spoon.support.reflect.declaration.CtElementImpl
        --> java.lang.Comparable *
        --> java.lang.Override *
        --> java.util.Collection *
        --> java.util.HashSet *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtAnnotationType
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.template.TemplateParameter
spoon.template
    BlockTemplate
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    ExpressionTemplate
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Local
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.Substitution
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
    Parameter
        <-- spoon.support.template.Parameters
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        --> java.lang.Class *
        --> java.lang.String *
        --> java.lang.annotation.ElementType *
        --> java.lang.reflect.Array *
        --> spoon.support.template.DefaultParameterMatcher
        --> spoon.support.template.ParameterMatcher
    StatementTemplate
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.Void *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Substitution
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
        --> E *
        --> T *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtInterface
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.ConstructorFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.ReferenceFilter
        --> spoon.reflect.visitor.filter.AbstractReferenceFilter
        --> spoon.reflect.visitor.filter.ReferenceTypeFilter
        --> spoon.support.template.Parameters
        --> spoon.support.template.SubstitutionVisitor
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Template
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.processing.ArrayResizeProcessor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.ArrayResizeTemplate
        <-- spoon.test.template.SubTemplate
        <-- spoon.test.template.SuperTemplate
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithConstructor
        <-- spoon.test.template.TemplateWithFieldsAndMethods
    TemplateException
        <-- spoon.template.TemplateMatcher
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> spoon.SpoonException
    TemplateMatcher
        <-- spoon.support.template.DefaultParameterMatcher
        <-- spoon.support.template.ParameterMatcher
        -->  *
        --> java.io.PrintStream *
        --> java.lang.CharSequence *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.IllegalAccessException *
        --> java.lang.IllegalStateException *
        --> java.lang.InstantiationException *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.AccessibleObject *
        --> java.lang.reflect.Array *
        --> java.lang.reflect.Field *
        --> java.lang.reflect.Modifier *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.HashMap *
        --> java.util.Iterator *
        --> java.util.List *
        --> java.util.Map *
        --> java.util.Set *
        --> java.util.regex.Matcher *
        --> java.util.regex.Pattern *
        --> org.apache.log4j.Category *
        --> org.apache.log4j.Logger *
        --> spoon.SpoonException
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ParentNotInitializedException
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtPackageReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.InvocationFilter
        --> spoon.support.template.DefaultParameterMatcher
        --> spoon.support.template.ParameterMatcher
        --> spoon.support.template.Parameters
        --> spoon.support.util.RtHelper
        --> spoon.template.Parameter
        --> spoon.template.TemplateException
        --> spoon.template.TemplateMatcher$
        --> spoon.template.TemplateParameter
spoontemplateTemplateMatcher$
    
        <-- spoon.template.TemplateMatcher
spoon.template
    TemplateParameter
        <-- spoon.reflect.code.CtAbstractInvocation
        <-- spoon.reflect.code.CtArrayAccess
        <-- spoon.reflect.code.CtAssert
        <-- spoon.reflect.code.CtAssignment
        <-- spoon.reflect.code.CtBinaryOperator
        <-- spoon.reflect.code.CtCase
        <-- spoon.reflect.code.CtCatch
        <-- spoon.reflect.code.CtConditional
        <-- spoon.reflect.code.CtDo
        <-- spoon.reflect.code.CtFor
        <-- spoon.reflect.code.CtForEach
        <-- spoon.reflect.code.CtIf
        <-- spoon.reflect.code.CtNewArray
        <-- spoon.reflect.code.CtReturn
        <-- spoon.reflect.code.CtSwitch
        <-- spoon.reflect.code.CtSynchronized
        <-- spoon.reflect.code.CtThrow
        <-- spoon.reflect.code.CtTry
        <-- spoon.reflect.code.CtUnaryOperator
        <-- spoon.reflect.code.CtWhile
        <-- spoon.reflect.declaration.CtAnonymousExecutable
        <-- spoon.reflect.declaration.CtExecutable
        <-- spoon.reflect.declaration.CtVariable
        <-- spoon.reflect.eval.SymbolicEvaluator
        <-- spoon.reflect.eval.SymbolicInstance
        <-- spoon.reflect.factory.CodeFactory
        <-- spoon.reflect.factory.ConstructorFactory
        <-- spoon.reflect.factory.CoreFactory
        <-- spoon.reflect.factory.ExecutableFactory
        <-- spoon.reflect.factory.FieldFactory
        <-- spoon.reflect.factory.MethodFactory
        <-- spoon.reflect.visitor.CtAbstractVisitor
        <-- spoon.reflect.visitor.CtInheritanceScanner
        <-- spoon.reflect.visitor.CtScanner
        <-- spoon.reflect.visitor.CtVisitor
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter
        <-- spoon.reflect.visitor.DefaultJavaPrettyPrinter$ImportScanner
        <-- spoon.reflect.visitor.filter.FieldAccessFilter
        <-- spoon.reflect.visitor.filter.InvocationFilter
        <-- spoon.reflect.visitor.filter.ReturnOrThrowFilter
        <-- spoon.reflect.visitor.filter.VariableAccessFilter
        <-- spoon.support.DefaultCoreFactory
        <-- spoon.support.compiler.SnippetCompilationHelper
        <-- spoon.support.compiler.jdt.JDTTreeBuilder
        <-- spoon.support.compiler.jdt.JDTTreeBuilder$BuilderContext
        <-- spoon.support.compiler.jdt.ParentExiter
        <-- spoon.support.reflect.code.CtAnnotationFieldAccesImpl
        <-- spoon.support.reflect.code.CtArrayAccessImpl
        <-- spoon.support.reflect.code.CtAssertImpl
        <-- spoon.support.reflect.code.CtAssignmentImpl
        <-- spoon.support.reflect.code.CtBinaryOperatorImpl
        <-- spoon.support.reflect.code.CtBlockImpl
        <-- spoon.support.reflect.code.CtCaseImpl
        <-- spoon.support.reflect.code.CtCatchImpl
        <-- spoon.support.reflect.code.CtCodeSnippetExpressionImpl
        <-- spoon.support.reflect.code.CtConditionalImpl
        <-- spoon.support.reflect.code.CtDoImpl
        <-- spoon.support.reflect.code.CtExpressionImpl
        <-- spoon.support.reflect.code.CtFieldAccessImpl
        <-- spoon.support.reflect.code.CtForEachImpl
        <-- spoon.support.reflect.code.CtForImpl
        <-- spoon.support.reflect.code.CtIfImpl
        <-- spoon.support.reflect.code.CtInvocationImpl
        <-- spoon.support.reflect.code.CtLiteralImpl
        <-- spoon.support.reflect.code.CtLocalVariableImpl
        <-- spoon.support.reflect.code.CtLoopImpl
        <-- spoon.support.reflect.code.CtNewArrayImpl
        <-- spoon.support.reflect.code.CtNewClassImpl
        <-- spoon.support.reflect.code.CtOperatorAssignmentImpl
        <-- spoon.support.reflect.code.CtReturnImpl
        <-- spoon.support.reflect.code.CtStatementImpl
        <-- spoon.support.reflect.code.CtSuperAccessImpl
        <-- spoon.support.reflect.code.CtSwitchImpl
        <-- spoon.support.reflect.code.CtSynchronizedImpl
        <-- spoon.support.reflect.code.CtTargetedAccessImpl
        <-- spoon.support.reflect.code.CtTargetedExpressionImpl
        <-- spoon.support.reflect.code.CtThisAccessImpl
        <-- spoon.support.reflect.code.CtThrowImpl
        <-- spoon.support.reflect.code.CtTryImpl
        <-- spoon.support.reflect.code.CtUnaryOperatorImpl
        <-- spoon.support.reflect.code.CtVariableAccessImpl
        <-- spoon.support.reflect.code.CtWhileImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl
        <-- spoon.support.reflect.declaration.CtAnnotationImpl$AnnotationInvocationHandler
        <-- spoon.support.reflect.declaration.CtAnonymousExecutableImpl
        <-- spoon.support.reflect.declaration.CtExecutableImpl
        <-- spoon.support.reflect.declaration.CtFieldImpl
        <-- spoon.support.reflect.declaration.CtParameterImpl
        <-- spoon.support.reflect.eval.ReturnException
        <-- spoon.support.reflect.eval.VisitorPartialEvaluator
        <-- spoon.support.reflect.eval.VisitorSymbolicEvaluator
        <-- spoon.support.template.Parameters
        <-- spoon.support.template.SubstitutionVisitor
        <-- spoon.support.template.SubstitutionVisitor$InheritanceSustitutionScanner
        <-- spoon.support.util.RtHelper
        <-- spoon.support.visitor.SignaturePrinter
        <-- spoon.support.visitor.TypeReferenceScanner
        <-- spoon.template.BlockTemplate
        <-- spoon.template.ExpressionTemplate
        <-- spoon.template.StatementTemplate
        <-- spoon.template.Substitution
        <-- spoon.template.TemplateMatcher
        <-- spoon.template.TypedBlockTemplateParameter
        <-- spoon.template.TypedStatementListTemplateParameter
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.parent.ParentTest
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.replace.ReplaceTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.template.TemplateTest
        <-- spoon.test.template.TemplateWithFieldsAndMethods
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> T *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
    TypedBlockTemplateParameter
        --> R *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    TypedStatementListTemplateParameter
        --> R *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
spoon.test
    SampleClass
        --> java.lang.Object *
        --> java.lang.Thread *
        --> spoon.test.SampleClass$
spoontestSampleClass$
    
        <-- spoon.test.SampleClass
spoon.test
    TestUtils
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.arrays.ArraysTest
        <-- spoon.test.casts.CastTest
        <-- spoon.test.control.ControlTest
        <-- spoon.test.ctCase.SwitchCaseTest
        <-- spoon.test.enums.EnumsTest
        <-- spoon.test.eval.EvalTest
        <-- spoon.test.exceptions.ExceptionTest
        <-- spoon.test.factory.FactoryTest
        <-- spoon.test.fieldaccesses.FieldAccessTest
        <-- spoon.test.filters.FilterTest
        <-- spoon.test.generics.GenericsTest
        <-- spoon.test.initializers.InitializerTest
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
        <-- spoon.test.limits.utils.InternalTest
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
        <-- spoon.test.processing.ProcessingTest
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.snippets.SnippetTest
        <-- spoon.test.sourcePosition.SourcePositionTest
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
        <-- spoon.test.trycatch.TryCatchTest
        <-- spoon.test.visibility.VisibilityTest
        --> T *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
        --> spoon.test.TestUtils$
spoontestTestUtils$
    
        <-- spoon.test.TestUtils
spoon.test.annotation
    AnnotParam
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
    AnnotationTest
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.annotation.Retention *
        --> java.lang.annotation.Target *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtAnnotation
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.annotation.Bound
        --> spoon.test.annotation.Test *
    Bound
        <-- spoon.test.annotation.AnnotationTest
        <-- spoon.test.annotation.Main
    Main
        --> java.lang.Object *
        --> spoon.test.annotation.Bound
    PersistenceProperty
        --> java.lang.String *
        --> java.lang.reflect.Array *
    Test *
        <-- spoon.test.annotation.AnnotationTest
spoon.test.api
    APITest
        --> java.io.File *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.FileGenerator
        --> spoon.processing.Processor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.support.JavaOutputProcessor
        --> spoon.test.api.APITest$
        --> spoon.test.api.APITest$$
        --> spoon.test.api.Test *
spoontestapiAPITest$
    
        <-- spoon.test.api.APITest
spoontestapiAPITest$$
    
        <-- spoon.test.api.APITest
spoon.test.api *
    Test *
        <-- spoon.test.api.APITest
spoon.test.arrays
    ArrayClass
        --> java.lang.Object *
        --> java.lang.reflect.Array *
    ArraysTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.test.TestUtils
        --> spoon.test.arrays.Test *
    Test *
        <-- spoon.test.arrays.ArraysTest
spoon.test.casts
    CastTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.casts.Test *
    Test *
        <-- spoon.test.casts.CastTest
spoon.test.control
    ControlTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtDo
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFor
        --> spoon.reflect.code.CtLoop
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.control.Test *
    DoWhile
        --> java.lang.Object *
    Fors
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
    Ifs
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.System *
        --> java.lang.reflect.Array *
        --> spoon.test.control.Ifs$Token
spoon.test.control.Ifs$Token
    Token
        <-- spoon.test.control.Ifs
        --> java.lang.Object *
spoon.test.control *
    Test *
        <-- spoon.test.control.ControlTest
spoon.test.ctCase
    ClassWithSwitchExample
        --> java.lang.Object *
    SwitchCaseTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.ctCase.Test *
    Test *
        <-- spoon.test.ctCase.SwitchCaseTest
spoon.test.enums
    EnumsTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtEnum
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.test.TestUtils
        --> spoon.test.enums.Regular
        --> spoon.test.enums.Test *
    OpCode
        -->  *
        --> java.lang.Integer *
        --> java.lang.reflect.Array *
        --> java.util.Stack *
        --> spoon.test.enums.OpCode$ *
        --> spoon.test.enums.Performable
spoontestenumsOpCode$ *
     *
        <-- spoon.test.enums.OpCode
spoon.test.enums
    Performable
        <-- spoon.test.enums.OpCode
        --> java.lang.reflect.Array *
        --> java.util.Stack *
    Regular
        <-- spoon.test.enums.EnumsTest
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.reflect.Array *
    Test *
        <-- spoon.test.enums.EnumsTest
spoon.test.eval
    EvalTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.eval.Test *
    Test *
        <-- spoon.test.eval.EvalTest
    ToEvaluate
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
spoon.test.exceptions
    ClassWithError
        --> java.lang.Object *
    ExceptionTest
        --> java.io.FileNotFoundException *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.SpoonException
        --> spoon.compiler.InvalidClassPathException
        --> spoon.compiler.ModelBuildingException
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.test.TestUtils
        --> spoon.test.exceptions.Test *
    Test *
        <-- spoon.test.exceptions.ExceptionTest
spoon.test.factory
    FactoryTest
        --> MyCtMethod *
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.List *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.FactoryImpl
        --> spoon.support.DefaultCoreFactory
        --> spoon.support.StandardEnvironment
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.factory.FactoryTest$
        --> spoon.test.factory.Test *
spoontestfactoryFactoryTest$
    
        <-- spoon.test.factory.FactoryTest
spoon.test.factory.FactoryTest$MyCtMethod
    MyCtMethod
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
spoon.test.factory *
    Test *
        <-- spoon.test.factory.FactoryTest
spoon.test.fieldaccesses
    BCUBug20140402
        --> java.lang.Object *
        --> java.lang.reflect.Array *
    FieldAccessTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtFieldAccess
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedAccess
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.code.CtVariableAccess
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtFieldReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.fieldaccesses.Test *
    InnerClassThisAccess
        <-- spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
        --> InnerClass *
        --> java.lang.Object *
spoon.test.fieldaccessesThisAccess$InnerClass
    InnerClass
        --> InnerClass *
        --> java.lang.Object *
spoon.test.fieldaccesses.InnerClassThisAccess$InnerClassForTest
    InnerClassForTest
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.test.fieldaccesses.InnerClassThisAccess
spoon.test.fieldaccesses
    InternalSuperCall
        --> java.lang.Object *
        --> java.lang.String *
    Mouse
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
    TargetedAccessPosition
        --> java.lang.Object *
    Test *
        <-- spoon.test.fieldaccesses.FieldAccessTest
spoon.test.filters *
    Before *
        <-- spoon.test.filters.FilterTest
    FilterTest
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.Collection *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.CompositeFilter
        --> spoon.reflect.visitor.filter.FilteringOperator
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.RegexFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.reflect.declaration.CtElementImpl
        --> spoon.support.reflect.declaration.CtExecutableImpl
        --> spoon.support.reflect.declaration.CtMethodImpl
        --> spoon.support.reflect.declaration.CtNamedElementImpl
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.filters.Before *
        --> spoon.test.filters.Test *
    Foo
        --> java.io.PrintStream *
        --> java.lang.Object *
    Test *
        <-- spoon.test.filters.FilterTest
spoon.test.generics
    ACLass
        <-- spoon.test.generics.BugCollection
        --> java.lang.Object *
    BugCollection
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Iterator *
        --> java.util.Map$Entry *
        --> spoon.test.generics.ACLass
spoon.test.generics.BugCollection$Foo
    Foo
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.UnsupportedOperationException *
        --> java.lang.reflect.Array *
        --> java.util.Collection *
        --> java.util.Iterator *
        --> java.util.Map$Entry *
        --> java.util.Set *
spoon.test.generics
    ClassThatBindsAGenericType
        --> java.lang.Exception *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
    ClassThatDefinesANewTypeArgument
        --> T *
        --> java.lang.Object *
    ComparableComparator
        --> java.lang.Object *
    ComparableComparatorBug
        --> E *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Comparator *
    GenericConstructor
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
    GenericMethodCallWithExtend
        --> java.lang.Object *
        --> java.lang.SafeVarargs *
        --> java.lang.reflect.Array *
    GenericsTest
        --> java.io.File *
        --> java.io.Serializable *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Map *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtParameter
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtParameterReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeParameterReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.reference.CtVariableReference
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter$Printingcontext
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.support.StandardEnvironment
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.generics.Test *
    InstanceOfMapEntryGeneric
        --> java.lang.Object *
        --> java.util.Map$Entry *
    SimilarSignatureMethodes
        --> E *
        --> java.lang.Object *
    Test *
        <-- spoon.test.generics.GenericsTest
    Tree
        --> T *
        --> V *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.ArrayList *
        --> java.util.List *
spoon.test.initializers
    InitializerTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtAnonymousExecutable
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.declaration.ModifierKind
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.initializers.Test *
    InstanceInitializers
        --> java.lang.Double *
        --> java.lang.Integer *
        --> java.lang.Object *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.test.initializers.InstanceInitializers$ *
spoontestinitializersInstanceInitializers$ *
     *
        <-- spoon.test.initializers.InstanceInitializers
spoon.test.initializers
    InternalClassStaticFieldInit
        --> java.lang.Object *
spoon.test.initializersStaticFieldInit$InternalClass
    InternalClass
        --> java.lang.Object *
        --> java.lang.String *
spoon.test.initializers *
    Test *
        <-- spoon.test.initializers.InitializerTest
spoon.test.intercession
    IntercessionTest
        --> java.lang.CharSequence *
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCFlowBreak
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetExpression
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtReturn
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtThrow
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.intercession.Test *
    RemoveTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.intercession.Test *
    Test *
        <-- spoon.test.intercession.IntercessionTest
        <-- spoon.test.intercession.RemoveTest
spoon.test.intercession.insertBefore *
    Before *
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
    InsertBeforeExample
        --> java.lang.Object *
    InsertBeforeTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtIf
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.intercession.insertBefore.Before *
        --> spoon.test.intercession.insertBefore.Test *
    Test *
        <-- spoon.test.intercession.insertBefore.InsertBeforeTest
spoon.test.limits
    MultipleInternalClass
        --> java.lang.Object *
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
    StaticClassAnon
        <-- spoon.test.limits.StaticClassAnon$StaticIntern
        --> java.lang.Object *
spoon.test.limits.StaticClassAnon$StaticIntern
    StaticIntern
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.test.limits.StaticClassAnon
spoon.test.limits
    StaticConstructorAccessOnInstance
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.test.limits.utils.ContainInternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
    StaticFieldAccesOnInstance
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
spoon.test.limits.utils
    ContainInternalClass
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        --> java.lang.Object *
        --> java.lang.Runnable *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> spoon.test.limits.utils.ContainInternalClass$ *
spoontestlimitsutilsContainInternalClass$ *
     *
        <-- spoon.test.limits.utils.ContainInternalClass
spoon.test.limits.utils.ContainInternalClass$InternalClass
    InternalClass
        <-- spoon.test.limits.MultipleInternalClass
        <-- spoon.test.limits.StaticConstructorAccessOnInstance
        <-- spoon.test.limits.utils.InternalTest
        --> java.lang.Object *
spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
    InsideInternalClass
        <-- spoon.test.limits.MultipleInternalClass
        <-- spoon.test.limits.utils.InternalTest
        --> java.lang.Object *
spoon.test.limits.utils
    InternalTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass
        --> spoon.test.limits.utils.ContainInternalClass$InternalClass$InsideInternalClass
        --> spoon.test.limits.utils.Test *
    Test *
        <-- spoon.test.limits.utils.InternalTest
spoon.test.main
    MainTest
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.reflect.Array *
        --> spoon.Launcher
        --> spoon.test.main.Test *
    Test *
        <-- spoon.test.main.MainTest
spoon.test.model
    BlockTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.model.Test *
    SwitchCaseTest
        --> java.lang.Comparable *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.ArrayList *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCase
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtSwitch
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.model.Test *
    Test *
        <-- spoon.test.model.BlockTest
        <-- spoon.test.model.SwitchCaseTest
spoon.test.parent *
    Before *
        <-- spoon.test.parent.ParentTest
    Foo
        --> java.lang.Object *
    ParentTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.CoreFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.parent.Before *
        --> spoon.test.parent.Test *
    Test *
        <-- spoon.test.parent.ParentTest
spoon.test.prettyprinter *
    Before *
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
    DefaultPrettyPrinterDependency
        <-- spoon.test.subclass.prettyprinter.DefaultPrettyPrinterExample
        --> java.lang.Object *
    DefaultPrettyPrinterTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResource
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtInvocation
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.Query
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.prettyprinter.Test *
    LinesTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.DefaultJavaPrettyPrinter
        --> spoon.reflect.visitor.PrettyPrinter
        --> spoon.test.prettyprinter.Before *
        --> spoon.test.prettyprinter.Test *
    PrinterTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.test.prettyprinter.Before *
        --> spoon.test.prettyprinter.Test *
    Test *
        <-- spoon.test.prettyprinter.DefaultPrettyPrinterTest
        <-- spoon.test.prettyprinter.LinesTest
        <-- spoon.test.prettyprinter.PrinterTest
    Validation
        --> java.lang.Boolean *
        --> java.lang.Character *
        --> java.lang.Deprecated *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.SecurityManager *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.reflect.Array *
        --> java.security.AccessController *
        --> java.security.PrivilegedAction *
        --> spoon.test.prettyprinter.Validation$ *
spoontestprettyprinterValidation$ *
     *
        <-- spoon.test.prettyprinter.Validation
spoon.test.processing
    ArrayResizeProcessor
        --> java.lang.Comparable *
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtArrayTypeReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.test.template.ArrayResizeTemplate
    ProcessingTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtConstructor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.processing.Test *
    SampleForInsertBefore
        --> java.lang.Object *
        --> java.lang.Thread *
        --> spoon.test.processing.SampleForInsertBefore$
spoontestprocessingSampleForInsertBefore$
    
        <-- spoon.test.processing.SampleForInsertBefore
spoon.test.processing *
    Test *
        <-- spoon.test.processing.ProcessingTest
    TestProcessor
        --> java.io.PrintStream *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.util.Collection *
        --> java.util.Date *
        --> spoon.compiler.Environment
        --> spoon.processing.AbstractProcessor
        --> spoon.processing.FactoryAccessor
        --> spoon.processing.Processor
        --> spoon.processing.Severity
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.CompilationUnit
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ExecutableFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.MethodFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.test.template.TemplateWithConstructor
spoon.test.replace
    Bar
        --> java.lang.Object *
    Before *
        <-- spoon.test.replace.ReplaceTest
    Foo
        --> java.io.PrintStream *
        --> java.lang.Object *
    ReplaceTest
        --> java.io.Serializable *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Integer *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.Launcher
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAssignment
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtPackage
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.PackageFactory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.replace.Before *
        --> spoon.test.replace.Test *
    Test *
        <-- spoon.test.replace.ReplaceTest
spoon.test.secondaryclasses
    AnonymousClass
        --> java.awt.event.ActionEvent *
        --> java.awt.event.ActionListener *
        --> java.lang.Object *
        --> java.lang.String *
        --> javax.swing.AbstractButton *
        --> javax.swing.JButton *
        --> javax.swing.JOptionPane *
        --> spoon.test.secondaryclasses.AnonymousClass$
        --> spoon.test.secondaryclasses.AnonymousClass$I
spoontestsecondaryclassesAnonymousClass$
    
        <-- spoon.test.secondaryclasses.AnonymousClass
spoon.test.secondaryclasses.AnonymousClass$I
    I
        <-- spoon.test.secondaryclasses.AnonymousClass
        <-- spoon.test.secondaryclasses.ClassesTest
spoon.test.secondaryclasses
    ClassWithInternalPublicClassOrInterf
        --> java.lang.Object *
spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
    InternalClass
        <-- spoon.test.secondaryclasses.ClassesTest
        <-- spoon.test.secondaryclasses.Test
        --> java.lang.Object *
spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalInterf
    InternalInterf
        <-- spoon.test.secondaryclasses.Test
spoon.test.secondaryclasses
    ClassesTest
        --> java.awt.event.ActionListener *
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.compiler.Environment
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtAbstractInvocation
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtNewClass
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTargetedExpression
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtExecutableReference
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.secondaryclasses.AnonymousClass$I
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        --> spoon.test.secondaryclasses.PrivateInnerClasses
        --> spoon.test.secondaryclasses.Test
    I
        <-- spoon.test.secondaryclasses.Secondary
    K
        <-- spoon.test.secondaryclasses.Secondary
    PrivateInnerClasses
        <-- spoon.test.secondaryclasses.ClassesTest
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Comparator *
        --> spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
spoon.test.secondaryclasses.PrivateInnerClasses$DataClassComparator
    DataClassComparator
        <-- spoon.test.secondaryclasses.PrivateInnerClasses
        --> java.lang.Class *
        --> java.lang.Object *
        --> java.lang.Override *
        --> java.lang.String *
        --> java.util.Comparator *
spoon.test.secondaryclasses
    Secondary
        --> java.io.Serializable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.Map *
        --> spoon.test.secondaryclasses.I
        --> spoon.test.secondaryclasses.K
    Test
        <-- spoon.test.secondaryclasses.ClassesTest
        --> java.lang.Object *
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalClass
        --> spoon.test.secondaryclasses.ClassWithInternalPublicClassOrInterf$InternalInterf
    TopLevel
        --> java.lang.Object *
spoon.test.secondaryclasses.TopLevel$InnerClass
    InnerClass
        --> java.lang.Object *
        --> java.util.Vector *
spoon.test.snippets
    SnippetTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.snippets.Test *
    Test *
        <-- spoon.test.snippets.SnippetTest
spoon.test.sourcePosition
    SourcePositionTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.cu.SourcePosition
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.test.TestUtils
        --> spoon.test.sourcePosition.Test *
    Test *
        <-- spoon.test.sourcePosition.SourcePositionTest
spoon.test.strings
    Main
        --> java.io.PrintStream *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
    StringLiteralTest
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.SuppressWarnings *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.test.TestUtils
        --> spoon.test.strings.Test *
    StringTest
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.BinaryOperatorKind
        --> spoon.reflect.code.CtBinaryOperator
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.strings.Test *
    Test *
        <-- spoon.test.strings.StringLiteralTest
        <-- spoon.test.strings.StringTest
spoon.test.subclass.prettyprinter
    DefaultPrettyPrinterExample
        --> java.lang.Math *
        --> java.lang.String *
        --> spoon.test.prettyprinter.DefaultPrettyPrinterDependency
spoon.test.template
    ArrayResizeTemplate
        <-- spoon.test.processing.ArrayResizeProcessor
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.System *
        --> java.lang.reflect.Array *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
    C1
        <-- spoon.test.template.TemplateTest
        --> java.lang.Object *
        --> java.lang.reflect.Array *
    SubClass
        <-- spoon.test.template.TemplateTest
        --> spoon.test.template.SuperClass
    SubTemplate
        <-- spoon.test.template.TemplateTest
        --> spoon.template.Template
        --> spoon.test.template.SuperTemplate
    SuperClass
        <-- spoon.test.template.SubClass
        <-- spoon.test.template.TemplateTest
        --> java.lang.Object *
    SuperTemplate
        <-- spoon.test.template.SubTemplate
        <-- spoon.test.template.TemplateTest
        --> java.lang.Object *
        --> spoon.template.Template
    TemplateTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.Date *
        --> java.util.List *
        --> java.util.Set *
        --> spoon.Launcher
        --> spoon.compiler.Environment
        --> spoon.compiler.SpoonCompiler
        --> spoon.compiler.SpoonResourceHelper
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtExpression
        --> spoon.reflect.code.CtLiteral
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtField
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.CtScanner
        --> spoon.reflect.visitor.CtVisitor
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.ModelConsistencyChecker
        --> spoon.reflect.visitor.filter.NameFilter
        --> spoon.template.Substitution
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
        --> spoon.test.template.C1
        --> spoon.test.template.SubClass
        --> spoon.test.template.SubTemplate
        --> spoon.test.template.SuperClass
        --> spoon.test.template.SuperTemplate
        --> spoon.test.template.TemplateWithConstructor
        --> spoon.test.template.TemplateWithFieldsAndMethods
        --> spoon.test.template.Test *
    TemplateWithConstructor
        <-- spoon.test.processing.TestProcessor
        <-- spoon.test.template.TemplateTest
        --> java.io.PrintStream *
        --> java.lang.Comparable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.util.ArrayList *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
    TemplateWithFieldsAndMethods
        <-- spoon.test.template.TemplateTest
        --> java.lang.Object *
        --> java.lang.String *
        --> spoon.template.Local
        --> spoon.template.Parameter
        --> spoon.template.Template
        --> spoon.template.TemplateParameter
    Test *
        <-- spoon.test.template.TemplateTest
spoon.test.trycatch
    Main
        --> java.io.BufferedReader *
        --> java.io.FileReader *
        --> java.io.PrintStream *
        --> java.lang.Exception *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.Throwable *
    Test *
        <-- spoon.test.trycatch.TryCatchTest
    TryCatchTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Error *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.RuntimeException *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCatch
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtCodeSnippetStatement
        --> spoon.reflect.code.CtLocalVariable
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.code.CtTry
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtCodeSnippet
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.declaration.CtVariable
        --> spoon.reflect.factory.CodeFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.reference.CtGenericElementReference
        --> spoon.reflect.reference.CtReference
        --> spoon.reflect.reference.CtTypeReference
        --> spoon.reflect.visitor.Filter
        --> spoon.reflect.visitor.filter.AbstractFilter
        --> spoon.reflect.visitor.filter.TypeFilter
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.trycatch.Test *
spoon.test.visibility
    MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Object *
        --> spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
        --> spoon.test.visibility.packageprotected.NonAccessibleInterf
    Test *
        <-- spoon.test.visibility.VisibilityTest
    VisibilityTest
        --> java.lang.Class *
        --> java.lang.Comparable *
        --> java.lang.Exception *
        --> java.lang.Iterable *
        --> java.lang.Object *
        --> java.lang.String *
        --> java.lang.reflect.Array *
        --> java.util.List *
        --> spoon.processing.FactoryAccessor
        --> spoon.reflect.code.CtBlock
        --> spoon.reflect.code.CtCodeElement
        --> spoon.reflect.code.CtStatement
        --> spoon.reflect.code.CtStatementList
        --> spoon.reflect.declaration.CtClass
        --> spoon.reflect.declaration.CtElement
        --> spoon.reflect.declaration.CtExecutable
        --> spoon.reflect.declaration.CtGenericElement
        --> spoon.reflect.declaration.CtMethod
        --> spoon.reflect.declaration.CtModifiable
        --> spoon.reflect.declaration.CtNamedElement
        --> spoon.reflect.declaration.CtSimpleType
        --> spoon.reflect.declaration.CtType
        --> spoon.reflect.declaration.CtTypedElement
        --> spoon.reflect.factory.ClassFactory
        --> spoon.reflect.factory.Factory
        --> spoon.reflect.factory.SubFactory
        --> spoon.reflect.factory.TypeFactory
        --> spoon.template.TemplateParameter
        --> spoon.test.TestUtils
        --> spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        --> spoon.test.visibility.Test *
        --> spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf
        --> spoon.test.visibility.packageprotected.NonAccessibleInterf
spoon.test.visibility.packageprotected
    AccessibleClassFromNonAccessibleInterf
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        --> java.lang.Object *
        --> spoon.test.visibility.packageprotected.NonAccessibleInterf
    NonAccessibleInterf
        <-- spoon.test.visibility.MethodeWithNonAccessibleTypeArgument
        <-- spoon.test.visibility.VisibilityTest
        <-- spoon.test.visibility.packageprotected.AccessibleClassFromNonAccessibleInterf

